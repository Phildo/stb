!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/6b867006/
$(EXE)	Makefile	/^$(EXE): $(SRC)$/;"	t
$(EXE).dSYM	Makefile	/^$(EXE).dSYM:$/;"	t
ACCEL	cave_main.c	/^#define ACCEL /;"	d	file:
APIENTRY	glext.h	/^#define APIENTRY$/;"	d
APIENTRY	stb_gl.h	/^#define APIENTRY /;"	d
APIENTRYP	glext.h	/^#define APIENTRYP /;"	d
ARGS	Makefile	/^ARGS=#$/;"	m
BUILD_BUFFER_SIZE	caveview.h	/^#define BUILD_BUFFER_SIZE /;"	d
BUILD_QUAD_MAX	caveview.h	/^#define BUILD_QUAD_MAX /;"	d
CACHED_MESH_NUM_X	cave_render.c	/^#define CACHED_MESH_NUM_X /;"	d	file:
CACHED_MESH_NUM_Y	cave_render.c	/^#define CACHED_MESH_NUM_Y /;"	d	file:
CALLBACK	stb_gl.h	/^#define CALLBACK /;"	d
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-Wl,-subsystem,windows -m32$/;"	m
CHUNK_CACHE	cave_mesher.c	/^#define CHUNK_CACHE /;"	d	file:
C_cross	cave_mesher.c	/^   C_cross,$/;"	e	enum:__anon009d3f580103	file:
C_empty	cave_mesher.c	/^   C_empty,$/;"	e	enum:__anon009d3f580103	file:
C_force	cave_mesher.c	/^   C_force,$/;"	e	enum:__anon009d3f580103	file:
C_slab	cave_mesher.c	/^   C_slab,$/;"	e	enum:__anon009d3f580103	file:
C_solid	cave_mesher.c	/^   C_solid,$/;"	e	enum:__anon009d3f580103	file:
C_stair	cave_mesher.c	/^   C_stair,$/;"	e	enum:__anon009d3f580103	file:
C_trans	cave_mesher.c	/^   C_trans,$/;"	e	enum:__anon009d3f580103	file:
C_water	cave_mesher.c	/^   C_water,$/;"	e	enum:__anon009d3f580103	file:
Could this be turned into a proper Minecraft viewer?	README.md	/^### Could this be turned into a proper Minecraft viewer?$/;"	S	chapter:FAQ
DB	Makefile	/^DB=lldb$/;"	m
DECEL	cave_main.c	/^#define DECEL /;"	d	file:
DYNAMIC_FRICTION	cave_main.c	/^#define DYNAMIC_FRICTION /;"	d	file:
EFFECTIVE_ACCEL	cave_main.c	/^#define EFFECTIVE_ACCEL /;"	d	file:
EXE	Makefile	/^EXE=caveview.exe$/;"	m
FACE_BUFFER_SIZE	caveview.h	/^#define FACE_BUFFER_SIZE /;"	d
FAQ	README.md	/^# FAQ$/;"	c
FAST_CHUNK	cave_mesher.c	/^#define FAST_CHUNK$/;"	d	file:
FAST_CHUNK	cave_parse.c	/^#define FAST_CHUNK /;"	d	file:
GLAPI	glext.h	/^#define GLAPI /;"	d
GLARB	stb_gl.h	/^#define GLARB(/;"	d
GLATI	stb_gl.h	/^#define GLATI(/;"	d
GLCORE	stb_gl.h	/^#define GLCORE(/;"	d
GLDEBUGPROC	glext.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsize/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCAMD	glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei lengt/;"	t	typeref:typename:void (APIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
GLDEBUGPROCARB	glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLs/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLE	stb_gl.h	/^   #define GLE(/;"	d
GLEXT	stb_gl.h	/^#define GLEXT(/;"	d
GLEXT_64_TYPES_DEFINED	glext.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	d
GLNV	stb_gl.h	/^#define GLNV(/;"	d
GL_1PASS_EXT	glext.h	/^#define GL_1PASS_EXT /;"	d
GL_1PASS_SGIS	glext.h	/^#define GL_1PASS_SGIS /;"	d
GL_2PASS_0_EXT	glext.h	/^#define GL_2PASS_0_EXT /;"	d
GL_2PASS_0_SGIS	glext.h	/^#define GL_2PASS_0_SGIS /;"	d
GL_2PASS_1_EXT	glext.h	/^#define GL_2PASS_1_EXT /;"	d
GL_2PASS_1_SGIS	glext.h	/^#define GL_2PASS_1_SGIS /;"	d
GL_2X_BIT_ATI	glext.h	/^#define GL_2X_BIT_ATI /;"	d
GL_3DFX_multisample	glext.h	/^#define GL_3DFX_multisample /;"	d
GL_3DFX_tbuffer	glext.h	/^#define GL_3DFX_tbuffer /;"	d
GL_3DFX_texture_compression_FXT1	glext.h	/^#define GL_3DFX_texture_compression_FXT1 /;"	d
GL_422_AVERAGE_EXT	glext.h	/^#define GL_422_AVERAGE_EXT /;"	d
GL_422_EXT	glext.h	/^#define GL_422_EXT /;"	d
GL_422_REV_AVERAGE_EXT	glext.h	/^#define GL_422_REV_AVERAGE_EXT /;"	d
GL_422_REV_EXT	glext.h	/^#define GL_422_REV_EXT /;"	d
GL_4PASS_0_EXT	glext.h	/^#define GL_4PASS_0_EXT /;"	d
GL_4PASS_0_SGIS	glext.h	/^#define GL_4PASS_0_SGIS /;"	d
GL_4PASS_1_EXT	glext.h	/^#define GL_4PASS_1_EXT /;"	d
GL_4PASS_1_SGIS	glext.h	/^#define GL_4PASS_1_SGIS /;"	d
GL_4PASS_2_EXT	glext.h	/^#define GL_4PASS_2_EXT /;"	d
GL_4PASS_2_SGIS	glext.h	/^#define GL_4PASS_2_SGIS /;"	d
GL_4PASS_3_EXT	glext.h	/^#define GL_4PASS_3_EXT /;"	d
GL_4PASS_3_SGIS	glext.h	/^#define GL_4PASS_3_SGIS /;"	d
GL_4X_BIT_ATI	glext.h	/^#define GL_4X_BIT_ATI /;"	d
GL_8X_BIT_ATI	glext.h	/^#define GL_8X_BIT_ATI /;"	d
GL_ABGR_EXT	glext.h	/^#define GL_ABGR_EXT /;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	glext.h	/^#define GL_ACCUM_ADJACENT_PAIRS_NV /;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	glext.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	glext.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	glext.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_PROGRAM_EXT	glext.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	d
GL_ACTIVE_RESOURCES	glext.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_STENCIL_FACE_EXT	glext.h	/^#define GL_ACTIVE_STENCIL_FACE_EXT /;"	d
GL_ACTIVE_SUBROUTINES	glext.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	glext.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	glext.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE_ARB	glext.h	/^#define GL_ACTIVE_TEXTURE_ARB /;"	d
GL_ACTIVE_UNIFORMS	glext.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	glext.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	glext.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ACTIVE_VARYINGS_NV	glext.h	/^#define GL_ACTIVE_VARYINGS_NV /;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	glext.h	/^#define GL_ACTIVE_VARYING_MAX_LENGTH_NV /;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	glext.h	/^#define GL_ACTIVE_VERTEX_UNITS_ARB /;"	d
GL_ADD_ATI	glext.h	/^#define GL_ADD_ATI /;"	d
GL_ADD_SIGNED	glext.h	/^#define GL_ADD_SIGNED /;"	d
GL_ADD_SIGNED_ARB	glext.h	/^#define GL_ADD_SIGNED_ARB /;"	d
GL_ADD_SIGNED_EXT	glext.h	/^#define GL_ADD_SIGNED_EXT /;"	d
GL_ADJACENT_PAIRS_NV	glext.h	/^#define GL_ADJACENT_PAIRS_NV /;"	d
GL_AFFINE_2D_NV	glext.h	/^#define GL_AFFINE_2D_NV /;"	d
GL_AFFINE_3D_NV	glext.h	/^#define GL_AFFINE_3D_NV /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	glext.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	glext.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	glext.h	/^#define GL_ALLOW_DRAW_FRG_HINT_PGI /;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	glext.h	/^#define GL_ALLOW_DRAW_MEM_HINT_PGI /;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	glext.h	/^#define GL_ALLOW_DRAW_OBJ_HINT_PGI /;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	glext.h	/^#define GL_ALLOW_DRAW_WIN_HINT_PGI /;"	d
GL_ALL_BARRIER_BITS	glext.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_BARRIER_BITS_EXT	glext.h	/^#define GL_ALL_BARRIER_BITS_EXT /;"	d
GL_ALL_COMPLETED_NV	glext.h	/^#define GL_ALL_COMPLETED_NV /;"	d
GL_ALL_SHADER_BITS	glext.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALL_STATIC_DATA_IBM	glext.h	/^#define GL_ALL_STATIC_DATA_IBM /;"	d
GL_ALPHA12_EXT	glext.h	/^#define GL_ALPHA12_EXT /;"	d
GL_ALPHA16F_ARB	glext.h	/^#define GL_ALPHA16F_ARB /;"	d
GL_ALPHA16I_EXT	glext.h	/^#define GL_ALPHA16I_EXT /;"	d
GL_ALPHA16UI_EXT	glext.h	/^#define GL_ALPHA16UI_EXT /;"	d
GL_ALPHA16_EXT	glext.h	/^#define GL_ALPHA16_EXT /;"	d
GL_ALPHA16_SNORM	glext.h	/^#define GL_ALPHA16_SNORM /;"	d
GL_ALPHA32F_ARB	glext.h	/^#define GL_ALPHA32F_ARB /;"	d
GL_ALPHA32I_EXT	glext.h	/^#define GL_ALPHA32I_EXT /;"	d
GL_ALPHA32UI_EXT	glext.h	/^#define GL_ALPHA32UI_EXT /;"	d
GL_ALPHA4_EXT	glext.h	/^#define GL_ALPHA4_EXT /;"	d
GL_ALPHA8I_EXT	glext.h	/^#define GL_ALPHA8I_EXT /;"	d
GL_ALPHA8UI_EXT	glext.h	/^#define GL_ALPHA8UI_EXT /;"	d
GL_ALPHA8_EXT	glext.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA8_SNORM	glext.h	/^#define GL_ALPHA8_SNORM /;"	d
GL_ALPHA_FLOAT16_APPLE	glext.h	/^#define GL_ALPHA_FLOAT16_APPLE /;"	d
GL_ALPHA_FLOAT16_ATI	glext.h	/^#define GL_ALPHA_FLOAT16_ATI /;"	d
GL_ALPHA_FLOAT32_APPLE	glext.h	/^#define GL_ALPHA_FLOAT32_APPLE /;"	d
GL_ALPHA_FLOAT32_ATI	glext.h	/^#define GL_ALPHA_FLOAT32_ATI /;"	d
GL_ALPHA_INTEGER	glext.h	/^#define GL_ALPHA_INTEGER /;"	d
GL_ALPHA_INTEGER_EXT	glext.h	/^#define GL_ALPHA_INTEGER_EXT /;"	d
GL_ALPHA_MAX_CLAMP_INGR	glext.h	/^#define GL_ALPHA_MAX_CLAMP_INGR /;"	d
GL_ALPHA_MAX_SGIX	glext.h	/^#define GL_ALPHA_MAX_SGIX /;"	d
GL_ALPHA_MIN_CLAMP_INGR	glext.h	/^#define GL_ALPHA_MIN_CLAMP_INGR /;"	d
GL_ALPHA_MIN_SGIX	glext.h	/^#define GL_ALPHA_MIN_SGIX /;"	d
GL_ALPHA_SNORM	glext.h	/^#define GL_ALPHA_SNORM /;"	d
GL_ALREADY_SIGNALED	glext.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS_FAST_HINT_PGI	glext.h	/^#define GL_ALWAYS_FAST_HINT_PGI /;"	d
GL_ALWAYS_SOFT_HINT_PGI	glext.h	/^#define GL_ALWAYS_SOFT_HINT_PGI /;"	d
GL_AMD_blend_minmax_factor	glext.h	/^#define GL_AMD_blend_minmax_factor /;"	d
GL_AMD_conservative_depth	glext.h	/^#define GL_AMD_conservative_depth /;"	d
GL_AMD_debug_output	glext.h	/^#define GL_AMD_debug_output /;"	d
GL_AMD_depth_clamp_separate	glext.h	/^#define GL_AMD_depth_clamp_separate /;"	d
GL_AMD_draw_buffers_blend	glext.h	/^#define GL_AMD_draw_buffers_blend /;"	d
GL_AMD_interleaved_elements	glext.h	/^#define GL_AMD_interleaved_elements /;"	d
GL_AMD_multi_draw_indirect	glext.h	/^#define GL_AMD_multi_draw_indirect /;"	d
GL_AMD_name_gen_delete	glext.h	/^#define GL_AMD_name_gen_delete /;"	d
GL_AMD_occlusion_query_event	glext.h	/^#define GL_AMD_occlusion_query_event /;"	d
GL_AMD_performance_monitor	glext.h	/^#define GL_AMD_performance_monitor /;"	d
GL_AMD_pinned_memory	glext.h	/^#define GL_AMD_pinned_memory /;"	d
GL_AMD_query_buffer_object	glext.h	/^#define GL_AMD_query_buffer_object /;"	d
GL_AMD_sample_positions	glext.h	/^#define GL_AMD_sample_positions /;"	d
GL_AMD_seamless_cubemap_per_texture	glext.h	/^#define GL_AMD_seamless_cubemap_per_texture /;"	d
GL_AMD_shader_atomic_counter_ops	glext.h	/^#define GL_AMD_shader_atomic_counter_ops /;"	d
GL_AMD_shader_stencil_export	glext.h	/^#define GL_AMD_shader_stencil_export /;"	d
GL_AMD_shader_trinary_minmax	glext.h	/^#define GL_AMD_shader_trinary_minmax /;"	d
GL_AMD_sparse_texture	glext.h	/^#define GL_AMD_sparse_texture /;"	d
GL_AMD_stencil_operation_extended	glext.h	/^#define GL_AMD_stencil_operation_extended /;"	d
GL_AMD_texture_texture4	glext.h	/^#define GL_AMD_texture_texture4 /;"	d
GL_AMD_transform_feedback3_lines_triangles	glext.h	/^#define GL_AMD_transform_feedback3_lines_triangles /;"	d
GL_AMD_vertex_shader_layer	glext.h	/^#define GL_AMD_vertex_shader_layer /;"	d
GL_AMD_vertex_shader_tessellator	glext.h	/^#define GL_AMD_vertex_shader_tessellator /;"	d
GL_AMD_vertex_shader_viewport_index	glext.h	/^#define GL_AMD_vertex_shader_viewport_index /;"	d
GL_ANY_SAMPLES_PASSED	glext.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	glext.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_APPLE_aux_depth_stencil	glext.h	/^#define GL_APPLE_aux_depth_stencil /;"	d
GL_APPLE_client_storage	glext.h	/^#define GL_APPLE_client_storage /;"	d
GL_APPLE_element_array	glext.h	/^#define GL_APPLE_element_array /;"	d
GL_APPLE_fence	glext.h	/^#define GL_APPLE_fence /;"	d
GL_APPLE_float_pixels	glext.h	/^#define GL_APPLE_float_pixels /;"	d
GL_APPLE_flush_buffer_range	glext.h	/^#define GL_APPLE_flush_buffer_range /;"	d
GL_APPLE_object_purgeable	glext.h	/^#define GL_APPLE_object_purgeable /;"	d
GL_APPLE_rgb_422	glext.h	/^#define GL_APPLE_rgb_422 /;"	d
GL_APPLE_row_bytes	glext.h	/^#define GL_APPLE_row_bytes /;"	d
GL_APPLE_specular_vector	glext.h	/^#define GL_APPLE_specular_vector /;"	d
GL_APPLE_texture_range	glext.h	/^#define GL_APPLE_texture_range /;"	d
GL_APPLE_transform_hint	glext.h	/^#define GL_APPLE_transform_hint /;"	d
GL_APPLE_vertex_array_object	glext.h	/^#define GL_APPLE_vertex_array_object /;"	d
GL_APPLE_vertex_array_range	glext.h	/^#define GL_APPLE_vertex_array_range /;"	d
GL_APPLE_vertex_program_evaluators	glext.h	/^#define GL_APPLE_vertex_program_evaluators /;"	d
GL_APPLE_ycbcr_422	glext.h	/^#define GL_APPLE_ycbcr_422 /;"	d
GL_ARB_ES2_compatibility	glext.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_compatibility	glext.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	glext.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	glext.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_bindless_texture	glext.h	/^#define GL_ARB_bindless_texture /;"	d
GL_ARB_blend_func_extended	glext.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_buffer_storage	glext.h	/^#define GL_ARB_buffer_storage /;"	d
GL_ARB_cl_event	glext.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	glext.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_texture	glext.h	/^#define GL_ARB_clear_texture /;"	d
GL_ARB_color_buffer_float	glext.h	/^#define GL_ARB_color_buffer_float /;"	d
GL_ARB_compatibility	glext.h	/^#define GL_ARB_compatibility /;"	d
GL_ARB_compressed_texture_pixel_storage	glext.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	glext.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_variable_group_size	glext.h	/^#define GL_ARB_compute_variable_group_size /;"	d
GL_ARB_conservative_depth	glext.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	glext.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	glext.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_debug_output	glext.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	glext.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	glext.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_depth_texture	glext.h	/^#define GL_ARB_depth_texture /;"	d
GL_ARB_draw_buffers	glext.h	/^#define GL_ARB_draw_buffers /;"	d
GL_ARB_draw_buffers_blend	glext.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	glext.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	glext.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_draw_instanced	glext.h	/^#define GL_ARB_draw_instanced /;"	d
GL_ARB_enhanced_layouts	glext.h	/^#define GL_ARB_enhanced_layouts /;"	d
GL_ARB_explicit_attrib_location	glext.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	glext.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	glext.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	glext.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_fragment_program	glext.h	/^#define GL_ARB_fragment_program /;"	d
GL_ARB_fragment_program_shadow	glext.h	/^#define GL_ARB_fragment_program_shadow /;"	d
GL_ARB_fragment_shader	glext.h	/^#define GL_ARB_fragment_shader /;"	d
GL_ARB_framebuffer_no_attachments	glext.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	glext.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	glext.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_geometry_shader4	glext.h	/^#define GL_ARB_geometry_shader4 /;"	d
GL_ARB_get_program_binary	glext.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_gpu_shader5	glext.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	glext.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_half_float_pixel	glext.h	/^#define GL_ARB_half_float_pixel /;"	d
GL_ARB_half_float_vertex	glext.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_imaging	glext.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_indirect_parameters	glext.h	/^#define GL_ARB_indirect_parameters /;"	d
GL_ARB_instanced_arrays	glext.h	/^#define GL_ARB_instanced_arrays /;"	d
GL_ARB_internalformat_query	glext.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	glext.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	glext.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	glext.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	glext.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_matrix_palette	glext.h	/^#define GL_ARB_matrix_palette /;"	d
GL_ARB_multi_bind	glext.h	/^#define GL_ARB_multi_bind /;"	d
GL_ARB_multi_draw_indirect	glext.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_multisample	glext.h	/^#define GL_ARB_multisample /;"	d
GL_ARB_multitexture	glext.h	/^#define GL_ARB_multitexture /;"	d
GL_ARB_occlusion_query	glext.h	/^#define GL_ARB_occlusion_query /;"	d
GL_ARB_occlusion_query2	glext.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_pixel_buffer_object	glext.h	/^#define GL_ARB_pixel_buffer_object /;"	d
GL_ARB_point_parameters	glext.h	/^#define GL_ARB_point_parameters /;"	d
GL_ARB_point_sprite	glext.h	/^#define GL_ARB_point_sprite /;"	d
GL_ARB_program_interface_query	glext.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	glext.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_query_buffer_object	glext.h	/^#define GL_ARB_query_buffer_object /;"	d
GL_ARB_robust_buffer_access_behavior	glext.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	glext.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_isolation	glext.h	/^#define GL_ARB_robustness_isolation /;"	d
GL_ARB_sample_shading	glext.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	glext.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	glext.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cubemap_per_texture	glext.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	d
GL_ARB_separate_shader_objects	glext.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counters	glext.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_bit_encoding	glext.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_draw_parameters	glext.h	/^#define GL_ARB_shader_draw_parameters /;"	d
GL_ARB_shader_group_vote	glext.h	/^#define GL_ARB_shader_group_vote /;"	d
GL_ARB_shader_image_load_store	glext.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	glext.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_objects	glext.h	/^#define GL_ARB_shader_objects /;"	d
GL_ARB_shader_precision	glext.h	/^#define GL_ARB_shader_precision /;"	d
GL_ARB_shader_stencil_export	glext.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	glext.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	glext.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_texture_lod	glext.h	/^#define GL_ARB_shader_texture_lod /;"	d
GL_ARB_shading_language_100	glext.h	/^#define GL_ARB_shading_language_100 /;"	d
GL_ARB_shading_language_420pack	glext.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	glext.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	glext.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_shadow	glext.h	/^#define GL_ARB_shadow /;"	d
GL_ARB_shadow_ambient	glext.h	/^#define GL_ARB_shadow_ambient /;"	d
GL_ARB_sparse_texture	glext.h	/^#define GL_ARB_sparse_texture /;"	d
GL_ARB_stencil_texturing	glext.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	glext.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	glext.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_border_clamp	glext.h	/^#define GL_ARB_texture_border_clamp /;"	d
GL_ARB_texture_buffer_object	glext.h	/^#define GL_ARB_texture_buffer_object /;"	d
GL_ARB_texture_buffer_object_rgb32	glext.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	glext.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression	glext.h	/^#define GL_ARB_texture_compression /;"	d
GL_ARB_texture_compression_bptc	glext.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	glext.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map	glext.h	/^#define GL_ARB_texture_cube_map /;"	d
GL_ARB_texture_cube_map_array	glext.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_env_add	glext.h	/^#define GL_ARB_texture_env_add /;"	d
GL_ARB_texture_env_combine	glext.h	/^#define GL_ARB_texture_env_combine /;"	d
GL_ARB_texture_env_crossbar	glext.h	/^#define GL_ARB_texture_env_crossbar /;"	d
GL_ARB_texture_env_dot3	glext.h	/^#define GL_ARB_texture_env_dot3 /;"	d
GL_ARB_texture_float	glext.h	/^#define GL_ARB_texture_float /;"	d
GL_ARB_texture_gather	glext.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_mirror_clamp_to_edge	glext.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	d
GL_ARB_texture_mirrored_repeat	glext.h	/^#define GL_ARB_texture_mirrored_repeat /;"	d
GL_ARB_texture_multisample	glext.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_non_power_of_two	glext.h	/^#define GL_ARB_texture_non_power_of_two /;"	d
GL_ARB_texture_query_levels	glext.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	glext.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rectangle	glext.h	/^#define GL_ARB_texture_rectangle /;"	d
GL_ARB_texture_rg	glext.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	glext.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_stencil8	glext.h	/^#define GL_ARB_texture_stencil8 /;"	d
GL_ARB_texture_storage	glext.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	glext.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	glext.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	glext.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	glext.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	glext.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	glext.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	glext.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transpose_matrix	glext.h	/^#define GL_ARB_transpose_matrix /;"	d
GL_ARB_uniform_buffer_object	glext.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	glext.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	glext.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	glext.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	glext.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_blend	glext.h	/^#define GL_ARB_vertex_blend /;"	d
GL_ARB_vertex_buffer_object	glext.h	/^#define GL_ARB_vertex_buffer_object /;"	d
GL_ARB_vertex_program	glext.h	/^#define GL_ARB_vertex_program /;"	d
GL_ARB_vertex_shader	glext.h	/^#define GL_ARB_vertex_shader /;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	glext.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	glext.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	glext.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARB_window_pos	glext.h	/^#define GL_ARB_window_pos /;"	d
GL_ARC_TO_NV	glext.h	/^#define GL_ARC_TO_NV /;"	d
GL_ARRAY_BUFFER	glext.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_ARB	glext.h	/^#define GL_ARRAY_BUFFER_ARB /;"	d
GL_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT /;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT /;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	glext.h	/^#define GL_ARRAY_OBJECT_BUFFER_ATI /;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	glext.h	/^#define GL_ARRAY_OBJECT_OFFSET_ATI /;"	d
GL_ARRAY_SIZE	glext.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	glext.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	glext.h	/^#define GL_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_ASYNC_HISTOGRAM_SGIX	glext.h	/^#define GL_ASYNC_HISTOGRAM_SGIX /;"	d
GL_ASYNC_MARKER_SGIX	glext.h	/^#define GL_ASYNC_MARKER_SGIX /;"	d
GL_ASYNC_READ_PIXELS_SGIX	glext.h	/^#define GL_ASYNC_READ_PIXELS_SGIX /;"	d
GL_ASYNC_TEX_IMAGE_SGIX	glext.h	/^#define GL_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_ATI_draw_buffers	glext.h	/^#define GL_ATI_draw_buffers /;"	d
GL_ATI_element_array	glext.h	/^#define GL_ATI_element_array /;"	d
GL_ATI_envmap_bumpmap	glext.h	/^#define GL_ATI_envmap_bumpmap /;"	d
GL_ATI_fragment_shader	glext.h	/^#define GL_ATI_fragment_shader /;"	d
GL_ATI_map_object_buffer	glext.h	/^#define GL_ATI_map_object_buffer /;"	d
GL_ATI_meminfo	glext.h	/^#define GL_ATI_meminfo /;"	d
GL_ATI_pixel_format_float	glext.h	/^#define GL_ATI_pixel_format_float /;"	d
GL_ATI_pn_triangles	glext.h	/^#define GL_ATI_pn_triangles /;"	d
GL_ATI_separate_stencil	glext.h	/^#define GL_ATI_separate_stencil /;"	d
GL_ATI_text_fragment_shader	glext.h	/^#define GL_ATI_text_fragment_shader /;"	d
GL_ATI_texture_env_combine3	glext.h	/^#define GL_ATI_texture_env_combine3 /;"	d
GL_ATI_texture_float	glext.h	/^#define GL_ATI_texture_float /;"	d
GL_ATI_texture_mirror_once	glext.h	/^#define GL_ATI_texture_mirror_once /;"	d
GL_ATI_vertex_array_object	glext.h	/^#define GL_ATI_vertex_array_object /;"	d
GL_ATI_vertex_attrib_array_object	glext.h	/^#define GL_ATI_vertex_attrib_array_object /;"	d
GL_ATI_vertex_streams	glext.h	/^#define GL_ATI_vertex_streams /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT /;"	d
GL_ATOMIC_COUNTER_BUFFER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_SHADERS	glext.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTENUATION_EXT	glext.h	/^#define GL_ATTENUATION_EXT /;"	d
GL_ATTRIB_ARRAY_POINTER_NV	glext.h	/^#define GL_ATTRIB_ARRAY_POINTER_NV /;"	d
GL_ATTRIB_ARRAY_SIZE_NV	glext.h	/^#define GL_ATTRIB_ARRAY_SIZE_NV /;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	glext.h	/^#define GL_ATTRIB_ARRAY_STRIDE_NV /;"	d
GL_ATTRIB_ARRAY_TYPE_NV	glext.h	/^#define GL_ATTRIB_ARRAY_TYPE_NV /;"	d
GL_AUTO_GENERATE_MIPMAP	glext.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_AUX_DEPTH_STENCIL_APPLE	glext.h	/^#define GL_AUX_DEPTH_STENCIL_APPLE /;"	d
GL_AVERAGE_EXT	glext.h	/^#define GL_AVERAGE_EXT /;"	d
GL_AVERAGE_HP	glext.h	/^#define GL_AVERAGE_HP /;"	d
GL_BACK_NORMALS_HINT_PGI	glext.h	/^#define GL_BACK_NORMALS_HINT_PGI /;"	d
GL_BACK_PRIMARY_COLOR_NV	glext.h	/^#define GL_BACK_PRIMARY_COLOR_NV /;"	d
GL_BACK_SECONDARY_COLOR_NV	glext.h	/^#define GL_BACK_SECONDARY_COLOR_NV /;"	d
GL_BEVEL_NV	glext.h	/^#define GL_BEVEL_NV /;"	d
GL_BGR	glext.h	/^#define GL_BGR /;"	d
GL_BGRA	glext.h	/^#define GL_BGRA /;"	d
GL_BGRA_EXT	glext.h	/^#define GL_BGRA_EXT /;"	d
GL_BGRA_INTEGER	glext.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGRA_INTEGER_EXT	glext.h	/^#define GL_BGRA_INTEGER_EXT /;"	d
GL_BGR_EXT	glext.h	/^#define GL_BGR_EXT /;"	d
GL_BGR_INTEGER	glext.h	/^#define GL_BGR_INTEGER /;"	d
GL_BGR_INTEGER_EXT	glext.h	/^#define GL_BGR_INTEGER_EXT /;"	d
GL_BIAS_BIT_ATI	glext.h	/^#define GL_BIAS_BIT_ATI /;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	glext.h	/^#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV /;"	d
GL_BINORMAL_ARRAY_EXT	glext.h	/^#define GL_BINORMAL_ARRAY_EXT /;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	glext.h	/^#define GL_BINORMAL_ARRAY_POINTER_EXT /;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	glext.h	/^#define GL_BINORMAL_ARRAY_STRIDE_EXT /;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	glext.h	/^#define GL_BINORMAL_ARRAY_TYPE_EXT /;"	d
GL_BLEND_ADVANCED_COHERENT_NV	glext.h	/^#define GL_BLEND_ADVANCED_COHERENT_NV /;"	d
GL_BLEND_COLOR	glext.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR_EXT	glext.h	/^#define GL_BLEND_COLOR_EXT /;"	d
GL_BLEND_DST_ALPHA	glext.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA_EXT	glext.h	/^#define GL_BLEND_DST_ALPHA_EXT /;"	d
GL_BLEND_DST_RGB	glext.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB_EXT	glext.h	/^#define GL_BLEND_DST_RGB_EXT /;"	d
GL_BLEND_EQUATION	glext.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	glext.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA_EXT	glext.h	/^#define GL_BLEND_EQUATION_ALPHA_EXT /;"	d
GL_BLEND_EQUATION_EXT	glext.h	/^#define GL_BLEND_EQUATION_EXT /;"	d
GL_BLEND_EQUATION_RGB	glext.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB_EXT	glext.h	/^#define GL_BLEND_EQUATION_RGB_EXT /;"	d
GL_BLEND_OVERLAP_NV	glext.h	/^#define GL_BLEND_OVERLAP_NV /;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	glext.h	/^#define GL_BLEND_PREMULTIPLIED_SRC_NV /;"	d
GL_BLEND_SRC_ALPHA	glext.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA_EXT	glext.h	/^#define GL_BLEND_SRC_ALPHA_EXT /;"	d
GL_BLEND_SRC_RGB	glext.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB_EXT	glext.h	/^#define GL_BLEND_SRC_RGB_EXT /;"	d
GL_BLOCK_INDEX	glext.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE_BIT_ATI	glext.h	/^#define GL_BLUE_BIT_ATI /;"	d
GL_BLUE_INTEGER	glext.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_INTEGER_EXT	glext.h	/^#define GL_BLUE_INTEGER_EXT /;"	d
GL_BLUE_MAX_CLAMP_INGR	glext.h	/^#define GL_BLUE_MAX_CLAMP_INGR /;"	d
GL_BLUE_MIN_CLAMP_INGR	glext.h	/^#define GL_BLUE_MIN_CLAMP_INGR /;"	d
GL_BLUE_NV	glext.h	/^#define GL_BLUE_NV /;"	d
GL_BOLD_BIT_NV	glext.h	/^#define GL_BOLD_BIT_NV /;"	d
GL_BOOL	glext.h	/^#define GL_BOOL /;"	d
GL_BOOL_ARB	glext.h	/^#define GL_BOOL_ARB /;"	d
GL_BOOL_VEC2	glext.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2_ARB	glext.h	/^#define GL_BOOL_VEC2_ARB /;"	d
GL_BOOL_VEC3	glext.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3_ARB	glext.h	/^#define GL_BOOL_VEC3_ARB /;"	d
GL_BOOL_VEC4	glext.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4_ARB	glext.h	/^#define GL_BOOL_VEC4_ARB /;"	d
GL_BOUNDING_BOX_NV	glext.h	/^#define GL_BOUNDING_BOX_NV /;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	glext.h	/^#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV /;"	d
GL_BUFFER	glext.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	glext.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_ARB	glext.h	/^#define GL_BUFFER_ACCESS_ARB /;"	d
GL_BUFFER_ACCESS_FLAGS	glext.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_BINDING	glext.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	glext.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	glext.h	/^#define GL_BUFFER_FLUSHING_UNMAP_APPLE /;"	d
GL_BUFFER_GPU_ADDRESS_NV	glext.h	/^#define GL_BUFFER_GPU_ADDRESS_NV /;"	d
GL_BUFFER_IMMUTABLE_STORAGE	glext.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	d
GL_BUFFER_MAPPED	glext.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAPPED_ARB	glext.h	/^#define GL_BUFFER_MAPPED_ARB /;"	d
GL_BUFFER_MAP_LENGTH	glext.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	glext.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	glext.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_MAP_POINTER_ARB	glext.h	/^#define GL_BUFFER_MAP_POINTER_ARB /;"	d
GL_BUFFER_OBJECT_APPLE	glext.h	/^#define GL_BUFFER_OBJECT_APPLE /;"	d
GL_BUFFER_OBJECT_EXT	glext.h	/^#define GL_BUFFER_OBJECT_EXT /;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	glext.h	/^#define GL_BUFFER_SERIALIZED_MODIFY_APPLE /;"	d
GL_BUFFER_SIZE	glext.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE_ARB	glext.h	/^#define GL_BUFFER_SIZE_ARB /;"	d
GL_BUFFER_STORAGE_FLAGS	glext.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT /;"	d
GL_BUFFER_USAGE	glext.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE_ARB	glext.h	/^#define GL_BUFFER_USAGE_ARB /;"	d
GL_BUFFER_VARIABLE	glext.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BUMP_ENVMAP_ATI	glext.h	/^#define GL_BUMP_ENVMAP_ATI /;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	glext.h	/^#define GL_BUMP_NUM_TEX_UNITS_ATI /;"	d
GL_BUMP_ROT_MATRIX_ATI	glext.h	/^#define GL_BUMP_ROT_MATRIX_ATI /;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	glext.h	/^#define GL_BUMP_ROT_MATRIX_SIZE_ATI /;"	d
GL_BUMP_TARGET_ATI	glext.h	/^#define GL_BUMP_TARGET_ATI /;"	d
GL_BUMP_TEX_UNITS_ATI	glext.h	/^#define GL_BUMP_TEX_UNITS_ATI /;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	glext.h	/^#define GL_CALLIGRAPHIC_FRAGMENT_SGIX /;"	d
GL_CAVEAT_SUPPORT	glext.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	glext.h	/^#define GL_CIRCULAR_CCW_ARC_TO_NV /;"	d
GL_CIRCULAR_CW_ARC_TO_NV	glext.h	/^#define GL_CIRCULAR_CW_ARC_TO_NV /;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	glext.h	/^#define GL_CIRCULAR_TANGENT_ARC_TO_NV /;"	d
GL_CLAMP_FRAGMENT_COLOR	glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR /;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR_ARB /;"	d
GL_CLAMP_READ_COLOR	glext.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_READ_COLOR_ARB	glext.h	/^#define GL_CLAMP_READ_COLOR_ARB /;"	d
GL_CLAMP_TO_BORDER	glext.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER_ARB	glext.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	d
GL_CLAMP_TO_BORDER_SGIS	glext.h	/^#define GL_CLAMP_TO_BORDER_SGIS /;"	d
GL_CLAMP_TO_EDGE	glext.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE_SGIS	glext.h	/^#define GL_CLAMP_TO_EDGE_SGIS /;"	d
GL_CLAMP_VERTEX_COLOR	glext.h	/^#define GL_CLAMP_VERTEX_COLOR /;"	d
GL_CLAMP_VERTEX_COLOR_ARB	glext.h	/^#define GL_CLAMP_VERTEX_COLOR_ARB /;"	d
GL_CLEAR_BUFFER	glext.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_TEXTURE	glext.h	/^#define GL_CLEAR_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE	glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB /;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	glext.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	d
GL_CLIENT_STORAGE_BIT	glext.h	/^#define GL_CLIENT_STORAGE_BIT /;"	d
GL_CLIP_DISTANCE0	glext.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	glext.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	glext.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	glext.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	glext.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	glext.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	glext.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	glext.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_CLIP_DISTANCE_NV	glext.h	/^#define GL_CLIP_DISTANCE_NV /;"	d
GL_CLIP_FAR_HINT_PGI	glext.h	/^#define GL_CLIP_FAR_HINT_PGI /;"	d
GL_CLIP_NEAR_HINT_PGI	glext.h	/^#define GL_CLIP_NEAR_HINT_PGI /;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	glext.h	/^#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT /;"	d
GL_CLOSE_PATH_NV	glext.h	/^#define GL_CLOSE_PATH_NV /;"	d
GL_CMYKA_EXT	glext.h	/^#define GL_CMYKA_EXT /;"	d
GL_CMYK_EXT	glext.h	/^#define GL_CMYK_EXT /;"	d
GL_CND0_ATI	glext.h	/^#define GL_CND0_ATI /;"	d
GL_CND_ATI	glext.h	/^#define GL_CND_ATI /;"	d
GL_COLOR3_BIT_PGI	glext.h	/^#define GL_COLOR3_BIT_PGI /;"	d
GL_COLOR4_BIT_PGI	glext.h	/^#define GL_COLOR4_BIT_PGI /;"	d
GL_COLORBURN_NV	glext.h	/^#define GL_COLORBURN_NV /;"	d
GL_COLORDODGE_NV	glext.h	/^#define GL_COLORDODGE_NV /;"	d
GL_COLOR_ALPHA_PAIRING_ATI	glext.h	/^#define GL_COLOR_ALPHA_PAIRING_ATI /;"	d
GL_COLOR_ARRAY_ADDRESS_NV	glext.h	/^#define GL_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_COLOR_ARRAY_COUNT_EXT	glext.h	/^#define GL_COLOR_ARRAY_COUNT_EXT /;"	d
GL_COLOR_ARRAY_EXT	glext.h	/^#define GL_COLOR_ARRAY_EXT /;"	d
GL_COLOR_ARRAY_LENGTH_NV	glext.h	/^#define GL_COLOR_ARRAY_LENGTH_NV /;"	d
GL_COLOR_ARRAY_LIST_IBM	glext.h	/^#define GL_COLOR_ARRAY_LIST_IBM /;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	glext.h	/^#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_COLOR_ARRAY_POINTER_EXT	glext.h	/^#define GL_COLOR_ARRAY_POINTER_EXT /;"	d
GL_COLOR_ARRAY_SIZE_EXT	glext.h	/^#define GL_COLOR_ARRAY_SIZE_EXT /;"	d
GL_COLOR_ARRAY_STRIDE_EXT	glext.h	/^#define GL_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_COLOR_ARRAY_TYPE_EXT	glext.h	/^#define GL_COLOR_ARRAY_TYPE_EXT /;"	d
GL_COLOR_ATTACHMENT0	glext.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT0_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	d
GL_COLOR_ATTACHMENT1	glext.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	glext.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT10_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	d
GL_COLOR_ATTACHMENT11	glext.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT11_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	d
GL_COLOR_ATTACHMENT12	glext.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT12_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	d
GL_COLOR_ATTACHMENT13	glext.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT13_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	d
GL_COLOR_ATTACHMENT14	glext.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT14_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	d
GL_COLOR_ATTACHMENT15	glext.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT15_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	d
GL_COLOR_ATTACHMENT1_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	d
GL_COLOR_ATTACHMENT2	glext.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT2_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	d
GL_COLOR_ATTACHMENT3	glext.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT3_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	d
GL_COLOR_ATTACHMENT4	glext.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT4_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	d
GL_COLOR_ATTACHMENT5	glext.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT5_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	d
GL_COLOR_ATTACHMENT6	glext.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT6_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	d
GL_COLOR_ATTACHMENT7	glext.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT7_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	d
GL_COLOR_ATTACHMENT8	glext.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT8_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	d
GL_COLOR_ATTACHMENT9	glext.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_ATTACHMENT9_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	glext.h	/^#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI /;"	d
GL_COLOR_COMPONENTS	glext.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	glext.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_FLOAT_APPLE	glext.h	/^#define GL_COLOR_FLOAT_APPLE /;"	d
GL_COLOR_INDEX12_EXT	glext.h	/^#define GL_COLOR_INDEX12_EXT /;"	d
GL_COLOR_INDEX16_EXT	glext.h	/^#define GL_COLOR_INDEX16_EXT /;"	d
GL_COLOR_INDEX1_EXT	glext.h	/^#define GL_COLOR_INDEX1_EXT /;"	d
GL_COLOR_INDEX2_EXT	glext.h	/^#define GL_COLOR_INDEX2_EXT /;"	d
GL_COLOR_INDEX4_EXT	glext.h	/^#define GL_COLOR_INDEX4_EXT /;"	d
GL_COLOR_INDEX8_EXT	glext.h	/^#define GL_COLOR_INDEX8_EXT /;"	d
GL_COLOR_MATRIX	glext.h	/^#define GL_COLOR_MATRIX /;"	d
GL_COLOR_MATRIX_SGI	glext.h	/^#define GL_COLOR_MATRIX_SGI /;"	d
GL_COLOR_MATRIX_STACK_DEPTH	glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_COLOR_RENDERABLE	glext.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_SAMPLES_NV	glext.h	/^#define GL_COLOR_SAMPLES_NV /;"	d
GL_COLOR_SUM	glext.h	/^#define GL_COLOR_SUM /;"	d
GL_COLOR_SUM_ARB	glext.h	/^#define GL_COLOR_SUM_ARB /;"	d
GL_COLOR_SUM_CLAMP_NV	glext.h	/^#define GL_COLOR_SUM_CLAMP_NV /;"	d
GL_COLOR_SUM_EXT	glext.h	/^#define GL_COLOR_SUM_EXT /;"	d
GL_COLOR_TABLE	glext.h	/^#define GL_COLOR_TABLE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE	glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_SGI /;"	d
GL_COLOR_TABLE_BIAS	glext.h	/^#define GL_COLOR_TABLE_BIAS /;"	d
GL_COLOR_TABLE_BIAS_SGI	glext.h	/^#define GL_COLOR_TABLE_BIAS_SGI /;"	d
GL_COLOR_TABLE_BLUE_SIZE	glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE /;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_SGI /;"	d
GL_COLOR_TABLE_FORMAT	glext.h	/^#define GL_COLOR_TABLE_FORMAT /;"	d
GL_COLOR_TABLE_FORMAT_SGI	glext.h	/^#define GL_COLOR_TABLE_FORMAT_SGI /;"	d
GL_COLOR_TABLE_GREEN_SIZE	glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE /;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_SGI /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI /;"	d
GL_COLOR_TABLE_RED_SIZE	glext.h	/^#define GL_COLOR_TABLE_RED_SIZE /;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_RED_SIZE_SGI /;"	d
GL_COLOR_TABLE_SCALE	glext.h	/^#define GL_COLOR_TABLE_SCALE /;"	d
GL_COLOR_TABLE_SCALE_SGI	glext.h	/^#define GL_COLOR_TABLE_SCALE_SGI /;"	d
GL_COLOR_TABLE_SGI	glext.h	/^#define GL_COLOR_TABLE_SGI /;"	d
GL_COLOR_TABLE_WIDTH	glext.h	/^#define GL_COLOR_TABLE_WIDTH /;"	d
GL_COLOR_TABLE_WIDTH_SGI	glext.h	/^#define GL_COLOR_TABLE_WIDTH_SGI /;"	d
GL_COMBINE	glext.h	/^#define GL_COMBINE /;"	d
GL_COMBINE4_NV	glext.h	/^#define GL_COMBINE4_NV /;"	d
GL_COMBINER0_NV	glext.h	/^#define GL_COMBINER0_NV /;"	d
GL_COMBINER1_NV	glext.h	/^#define GL_COMBINER1_NV /;"	d
GL_COMBINER2_NV	glext.h	/^#define GL_COMBINER2_NV /;"	d
GL_COMBINER3_NV	glext.h	/^#define GL_COMBINER3_NV /;"	d
GL_COMBINER4_NV	glext.h	/^#define GL_COMBINER4_NV /;"	d
GL_COMBINER5_NV	glext.h	/^#define GL_COMBINER5_NV /;"	d
GL_COMBINER6_NV	glext.h	/^#define GL_COMBINER6_NV /;"	d
GL_COMBINER7_NV	glext.h	/^#define GL_COMBINER7_NV /;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	glext.h	/^#define GL_COMBINER_AB_DOT_PRODUCT_NV /;"	d
GL_COMBINER_AB_OUTPUT_NV	glext.h	/^#define GL_COMBINER_AB_OUTPUT_NV /;"	d
GL_COMBINER_BIAS_NV	glext.h	/^#define GL_COMBINER_BIAS_NV /;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	glext.h	/^#define GL_COMBINER_CD_DOT_PRODUCT_NV /;"	d
GL_COMBINER_CD_OUTPUT_NV	glext.h	/^#define GL_COMBINER_CD_OUTPUT_NV /;"	d
GL_COMBINER_COMPONENT_USAGE_NV	glext.h	/^#define GL_COMBINER_COMPONENT_USAGE_NV /;"	d
GL_COMBINER_INPUT_NV	glext.h	/^#define GL_COMBINER_INPUT_NV /;"	d
GL_COMBINER_MAPPING_NV	glext.h	/^#define GL_COMBINER_MAPPING_NV /;"	d
GL_COMBINER_MUX_SUM_NV	glext.h	/^#define GL_COMBINER_MUX_SUM_NV /;"	d
GL_COMBINER_SCALE_NV	glext.h	/^#define GL_COMBINER_SCALE_NV /;"	d
GL_COMBINER_SUM_OUTPUT_NV	glext.h	/^#define GL_COMBINER_SUM_OUTPUT_NV /;"	d
GL_COMBINE_ALPHA	glext.h	/^#define GL_COMBINE_ALPHA /;"	d
GL_COMBINE_ALPHA_ARB	glext.h	/^#define GL_COMBINE_ALPHA_ARB /;"	d
GL_COMBINE_ALPHA_EXT	glext.h	/^#define GL_COMBINE_ALPHA_EXT /;"	d
GL_COMBINE_ARB	glext.h	/^#define GL_COMBINE_ARB /;"	d
GL_COMBINE_EXT	glext.h	/^#define GL_COMBINE_EXT /;"	d
GL_COMBINE_RGB	glext.h	/^#define GL_COMBINE_RGB /;"	d
GL_COMBINE_RGB_ARB	glext.h	/^#define GL_COMBINE_RGB_ARB /;"	d
GL_COMBINE_RGB_EXT	glext.h	/^#define GL_COMBINE_RGB_EXT /;"	d
GL_COMMAND_BARRIER_BIT	glext.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMMAND_BARRIER_BIT_EXT	glext.h	/^#define GL_COMMAND_BARRIER_BIT_EXT /;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	glext.h	/^#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT /;"	d
GL_COMPARE_REF_TO_TEXTURE	glext.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE	glext.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	glext.h	/^#define GL_COMPARE_R_TO_TEXTURE_ARB /;"	d
GL_COMPATIBLE_SUBROUTINES	glext.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE_STATUS	glext.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_ALPHA	glext.h	/^#define GL_COMPRESSED_ALPHA /;"	d
GL_COMPRESSED_ALPHA_ARB	glext.h	/^#define GL_COMPRESSED_ALPHA_ARB /;"	d
GL_COMPRESSED_INTENSITY	glext.h	/^#define GL_COMPRESSED_INTENSITY /;"	d
GL_COMPRESSED_INTENSITY_ARB	glext.h	/^#define GL_COMPRESSED_INTENSITY_ARB /;"	d
GL_COMPRESSED_LUMINANCE	glext.h	/^#define GL_COMPRESSED_LUMINANCE /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_LUMINANCE_ARB	glext.h	/^#define GL_COMPRESSED_LUMINANCE_ARB /;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	glext.h	/^#define GL_COMPRESSED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_R11_EAC	glext.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	glext.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	glext.h	/^#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_RED_RGTC1	glext.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RED_RGTC1_EXT	glext.h	/^#define GL_COMPRESSED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_RG	glext.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	glext.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	glext.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	glext.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	glext.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	glext.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	glext.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ARB	glext.h	/^#define GL_COMPRESSED_RGBA_ARB /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	glext.h	/^#define GL_COMPRESSED_RGBA_FXT1_3DFX /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_ARB	glext.h	/^#define GL_COMPRESSED_RGB_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	glext.h	/^#define GL_COMPRESSED_RGB_FXT1_3DFX /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	glext.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RG_RGTC2	glext.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	glext.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	glext.h	/^#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	glext.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	glext.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SLUMINANCE	glext.h	/^#define GL_COMPRESSED_SLUMINANCE /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT /;"	d
GL_COMPRESSED_SLUMINANCE_EXT	glext.h	/^#define GL_COMPRESSED_SLUMINANCE_EXT /;"	d
GL_COMPRESSED_SRGB	glext.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	glext.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	glext.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_SRGB_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_COMPUTE_PROGRAM_NV	glext.h	/^#define GL_COMPUTE_PROGRAM_NV /;"	d
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_COMPUTE_SHADER	glext.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	glext.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SUBROUTINE	glext.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	glext.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	glext.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_WORK_GROUP_SIZE	glext.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_COMP_BIT_ATI	glext.h	/^#define GL_COMP_BIT_ATI /;"	d
GL_CONDITION_SATISFIED	glext.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONJOINT_NV	glext.h	/^#define GL_CONJOINT_NV /;"	d
GL_CONSERVE_MEMORY_HINT_PGI	glext.h	/^#define GL_CONSERVE_MEMORY_HINT_PGI /;"	d
GL_CONSTANT	glext.h	/^#define GL_CONSTANT /;"	d
GL_CONSTANT_ALPHA	glext.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA_EXT	glext.h	/^#define GL_CONSTANT_ALPHA_EXT /;"	d
GL_CONSTANT_ARB	glext.h	/^#define GL_CONSTANT_ARB /;"	d
GL_CONSTANT_BORDER	glext.h	/^#define GL_CONSTANT_BORDER /;"	d
GL_CONSTANT_BORDER_HP	glext.h	/^#define GL_CONSTANT_BORDER_HP /;"	d
GL_CONSTANT_COLOR	glext.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR0_NV	glext.h	/^#define GL_CONSTANT_COLOR0_NV /;"	d
GL_CONSTANT_COLOR1_NV	glext.h	/^#define GL_CONSTANT_COLOR1_NV /;"	d
GL_CONSTANT_COLOR_EXT	glext.h	/^#define GL_CONSTANT_COLOR_EXT /;"	d
GL_CONSTANT_EXT	glext.h	/^#define GL_CONSTANT_EXT /;"	d
GL_CONST_EYE_NV	glext.h	/^#define GL_CONST_EYE_NV /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	glext.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	glext.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	glext.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	glext.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	glext.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	glext.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_PROFILE_MASK	glext.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTINUOUS_AMD	glext.h	/^#define GL_CONTINUOUS_AMD /;"	d
GL_CONTRAST_NV	glext.h	/^#define GL_CONTRAST_NV /;"	d
GL_CONVEX_HULL_NV	glext.h	/^#define GL_CONVEX_HULL_NV /;"	d
GL_CONVOLUTION_1D	glext.h	/^#define GL_CONVOLUTION_1D /;"	d
GL_CONVOLUTION_1D_EXT	glext.h	/^#define GL_CONVOLUTION_1D_EXT /;"	d
GL_CONVOLUTION_2D	glext.h	/^#define GL_CONVOLUTION_2D /;"	d
GL_CONVOLUTION_2D_EXT	glext.h	/^#define GL_CONVOLUTION_2D_EXT /;"	d
GL_CONVOLUTION_BORDER_COLOR	glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR /;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR_HP /;"	d
GL_CONVOLUTION_BORDER_MODE	glext.h	/^#define GL_CONVOLUTION_BORDER_MODE /;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	glext.h	/^#define GL_CONVOLUTION_BORDER_MODE_EXT /;"	d
GL_CONVOLUTION_FILTER_BIAS	glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS /;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS_EXT /;"	d
GL_CONVOLUTION_FILTER_SCALE	glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE /;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE_EXT /;"	d
GL_CONVOLUTION_FORMAT	glext.h	/^#define GL_CONVOLUTION_FORMAT /;"	d
GL_CONVOLUTION_FORMAT_EXT	glext.h	/^#define GL_CONVOLUTION_FORMAT_EXT /;"	d
GL_CONVOLUTION_HEIGHT	glext.h	/^#define GL_CONVOLUTION_HEIGHT /;"	d
GL_CONVOLUTION_HEIGHT_EXT	glext.h	/^#define GL_CONVOLUTION_HEIGHT_EXT /;"	d
GL_CONVOLUTION_HINT_SGIX	glext.h	/^#define GL_CONVOLUTION_HINT_SGIX /;"	d
GL_CONVOLUTION_WIDTH	glext.h	/^#define GL_CONVOLUTION_WIDTH /;"	d
GL_CONVOLUTION_WIDTH_EXT	glext.h	/^#define GL_CONVOLUTION_WIDTH_EXT /;"	d
GL_CON_0_ATI	glext.h	/^#define GL_CON_0_ATI /;"	d
GL_CON_10_ATI	glext.h	/^#define GL_CON_10_ATI /;"	d
GL_CON_11_ATI	glext.h	/^#define GL_CON_11_ATI /;"	d
GL_CON_12_ATI	glext.h	/^#define GL_CON_12_ATI /;"	d
GL_CON_13_ATI	glext.h	/^#define GL_CON_13_ATI /;"	d
GL_CON_14_ATI	glext.h	/^#define GL_CON_14_ATI /;"	d
GL_CON_15_ATI	glext.h	/^#define GL_CON_15_ATI /;"	d
GL_CON_16_ATI	glext.h	/^#define GL_CON_16_ATI /;"	d
GL_CON_17_ATI	glext.h	/^#define GL_CON_17_ATI /;"	d
GL_CON_18_ATI	glext.h	/^#define GL_CON_18_ATI /;"	d
GL_CON_19_ATI	glext.h	/^#define GL_CON_19_ATI /;"	d
GL_CON_1_ATI	glext.h	/^#define GL_CON_1_ATI /;"	d
GL_CON_20_ATI	glext.h	/^#define GL_CON_20_ATI /;"	d
GL_CON_21_ATI	glext.h	/^#define GL_CON_21_ATI /;"	d
GL_CON_22_ATI	glext.h	/^#define GL_CON_22_ATI /;"	d
GL_CON_23_ATI	glext.h	/^#define GL_CON_23_ATI /;"	d
GL_CON_24_ATI	glext.h	/^#define GL_CON_24_ATI /;"	d
GL_CON_25_ATI	glext.h	/^#define GL_CON_25_ATI /;"	d
GL_CON_26_ATI	glext.h	/^#define GL_CON_26_ATI /;"	d
GL_CON_27_ATI	glext.h	/^#define GL_CON_27_ATI /;"	d
GL_CON_28_ATI	glext.h	/^#define GL_CON_28_ATI /;"	d
GL_CON_29_ATI	glext.h	/^#define GL_CON_29_ATI /;"	d
GL_CON_2_ATI	glext.h	/^#define GL_CON_2_ATI /;"	d
GL_CON_30_ATI	glext.h	/^#define GL_CON_30_ATI /;"	d
GL_CON_31_ATI	glext.h	/^#define GL_CON_31_ATI /;"	d
GL_CON_3_ATI	glext.h	/^#define GL_CON_3_ATI /;"	d
GL_CON_4_ATI	glext.h	/^#define GL_CON_4_ATI /;"	d
GL_CON_5_ATI	glext.h	/^#define GL_CON_5_ATI /;"	d
GL_CON_6_ATI	glext.h	/^#define GL_CON_6_ATI /;"	d
GL_CON_7_ATI	glext.h	/^#define GL_CON_7_ATI /;"	d
GL_CON_8_ATI	glext.h	/^#define GL_CON_8_ATI /;"	d
GL_CON_9_ATI	glext.h	/^#define GL_CON_9_ATI /;"	d
GL_COORD_REPLACE	glext.h	/^#define GL_COORD_REPLACE /;"	d
GL_COORD_REPLACE_ARB	glext.h	/^#define GL_COORD_REPLACE_ARB /;"	d
GL_COORD_REPLACE_NV	glext.h	/^#define GL_COORD_REPLACE_NV /;"	d
GL_COPY_READ_BUFFER	glext.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER_BINDING	glext.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER	glext.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER_BINDING	glext.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_COUNTER_RANGE_AMD	glext.h	/^#define GL_COUNTER_RANGE_AMD /;"	d
GL_COUNTER_TYPE_AMD	glext.h	/^#define GL_COUNTER_TYPE_AMD /;"	d
GL_COUNT_DOWN_NV	glext.h	/^#define GL_COUNT_DOWN_NV /;"	d
GL_COUNT_UP_NV	glext.h	/^#define GL_COUNT_UP_NV /;"	d
GL_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_CUBIC_CURVE_TO_NV /;"	d
GL_CUBIC_EXT	glext.h	/^#define GL_CUBIC_EXT /;"	d
GL_CUBIC_HP	glext.h	/^#define GL_CUBIC_HP /;"	d
GL_CULL_FRAGMENT_NV	glext.h	/^#define GL_CULL_FRAGMENT_NV /;"	d
GL_CULL_MODES_NV	glext.h	/^#define GL_CULL_MODES_NV /;"	d
GL_CULL_VERTEX_EXT	glext.h	/^#define GL_CULL_VERTEX_EXT /;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	glext.h	/^#define GL_CULL_VERTEX_EYE_POSITION_EXT /;"	d
GL_CULL_VERTEX_IBM	glext.h	/^#define GL_CULL_VERTEX_IBM /;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	glext.h	/^#define GL_CULL_VERTEX_OBJECT_POSITION_EXT /;"	d
GL_CURRENT_ATTRIB_NV	glext.h	/^#define GL_CURRENT_ATTRIB_NV /;"	d
GL_CURRENT_BINORMAL_EXT	glext.h	/^#define GL_CURRENT_BINORMAL_EXT /;"	d
GL_CURRENT_FOG_COORD	glext.h	/^#define GL_CURRENT_FOG_COORD /;"	d
GL_CURRENT_FOG_COORDINATE	glext.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	d
GL_CURRENT_FOG_COORDINATE_EXT	glext.h	/^#define GL_CURRENT_FOG_COORDINATE_EXT /;"	d
GL_CURRENT_MATRIX_ARB	glext.h	/^#define GL_CURRENT_MATRIX_ARB /;"	d
GL_CURRENT_MATRIX_INDEX_ARB	glext.h	/^#define GL_CURRENT_MATRIX_INDEX_ARB /;"	d
GL_CURRENT_MATRIX_NV	glext.h	/^#define GL_CURRENT_MATRIX_NV /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_NV /;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	glext.h	/^#define GL_CURRENT_OCCLUSION_QUERY_ID_NV /;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	glext.h	/^#define GL_CURRENT_PALETTE_MATRIX_ARB /;"	d
GL_CURRENT_PROGRAM	glext.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	glext.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_QUERY_ARB	glext.h	/^#define GL_CURRENT_QUERY_ARB /;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	glext.h	/^#define GL_CURRENT_RASTER_NORMAL_SGIX /;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	glext.h	/^#define GL_CURRENT_RASTER_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR	glext.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	glext.h	/^#define GL_CURRENT_SECONDARY_COLOR_EXT /;"	d
GL_CURRENT_TANGENT_EXT	glext.h	/^#define GL_CURRENT_TANGENT_EXT /;"	d
GL_CURRENT_TIME_NV	glext.h	/^#define GL_CURRENT_TIME_NV /;"	d
GL_CURRENT_VERTEX_ATTRIB	glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB_ARB /;"	d
GL_CURRENT_VERTEX_EXT	glext.h	/^#define GL_CURRENT_VERTEX_EXT /;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	glext.h	/^#define GL_CURRENT_VERTEX_WEIGHT_EXT /;"	d
GL_CURRENT_WEIGHT_ARB	glext.h	/^#define GL_CURRENT_WEIGHT_ARB /;"	d
GL_DARKEN_NV	glext.h	/^#define GL_DARKEN_NV /;"	d
GL_DATA_BUFFER_AMD	glext.h	/^#define GL_DATA_BUFFER_AMD /;"	d
GL_DEBUG_CALLBACK_FUNCTION	glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_API_ERROR_AMD /;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_APPLICATION_AMD /;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_DEPRECATION_AMD /;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_OTHER_AMD /;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD /;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD /;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD /;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	glext.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_OUTPUT	glext.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_SEVERITY_HIGH	glext.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_AMD /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_LOW	glext.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_AMD	glext.h	/^#define GL_DEBUG_SEVERITY_LOW_AMD /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	glext.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM	glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_AMD /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	glext.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	glext.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	glext.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION	glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_OTHER	glext.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	glext.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_ERROR	glext.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	glext.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_MARKER	glext.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	glext.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	glext.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE	glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_POP_GROUP	glext.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	glext.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DECODE_EXT	glext.h	/^#define GL_DECODE_EXT /;"	d
GL_DECR_WRAP	glext.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP_EXT	glext.h	/^#define GL_DECR_WRAP_EXT /;"	d
GL_DEFORMATIONS_MASK_SGIX	glext.h	/^#define GL_DEFORMATIONS_MASK_SGIX /;"	d
GL_DELETE_STATUS	glext.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	glext.h	/^#define GL_DEPENDENT_AR_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	glext.h	/^#define GL_DEPENDENT_GB_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	glext.h	/^#define GL_DEPENDENT_HILO_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_3D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV /;"	d
GL_DEPTH24_STENCIL8	glext.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH24_STENCIL8_EXT	glext.h	/^#define GL_DEPTH24_STENCIL8_EXT /;"	d
GL_DEPTH32F_STENCIL8	glext.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8_NV	glext.h	/^#define GL_DEPTH32F_STENCIL8_NV /;"	d
GL_DEPTH_ATTACHMENT	glext.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_ATTACHMENT_EXT	glext.h	/^#define GL_DEPTH_ATTACHMENT_EXT /;"	d
GL_DEPTH_BOUNDS_EXT	glext.h	/^#define GL_DEPTH_BOUNDS_EXT /;"	d
GL_DEPTH_BOUNDS_TEST_EXT	glext.h	/^#define GL_DEPTH_BOUNDS_TEST_EXT /;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	glext.h	/^#define GL_DEPTH_BUFFER_FLOAT_MODE_NV /;"	d
GL_DEPTH_CLAMP	glext.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLAMP_FAR_AMD	glext.h	/^#define GL_DEPTH_CLAMP_FAR_AMD /;"	d
GL_DEPTH_CLAMP_NEAR_AMD	glext.h	/^#define GL_DEPTH_CLAMP_NEAR_AMD /;"	d
GL_DEPTH_CLAMP_NV	glext.h	/^#define GL_DEPTH_CLAMP_NV /;"	d
GL_DEPTH_COMPONENT16	glext.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16_ARB	glext.h	/^#define GL_DEPTH_COMPONENT16_ARB /;"	d
GL_DEPTH_COMPONENT16_SGIX	glext.h	/^#define GL_DEPTH_COMPONENT16_SGIX /;"	d
GL_DEPTH_COMPONENT24	glext.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT24_ARB	glext.h	/^#define GL_DEPTH_COMPONENT24_ARB /;"	d
GL_DEPTH_COMPONENT24_SGIX	glext.h	/^#define GL_DEPTH_COMPONENT24_SGIX /;"	d
GL_DEPTH_COMPONENT32	glext.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	glext.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENT32F_NV	glext.h	/^#define GL_DEPTH_COMPONENT32F_NV /;"	d
GL_DEPTH_COMPONENT32_ARB	glext.h	/^#define GL_DEPTH_COMPONENT32_ARB /;"	d
GL_DEPTH_COMPONENT32_SGIX	glext.h	/^#define GL_DEPTH_COMPONENT32_SGIX /;"	d
GL_DEPTH_COMPONENTS	glext.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_RENDERABLE	glext.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_STENCIL	glext.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	glext.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_EXT	glext.h	/^#define GL_DEPTH_STENCIL_EXT /;"	d
GL_DEPTH_STENCIL_NV	glext.h	/^#define GL_DEPTH_STENCIL_NV /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	glext.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	glext.h	/^#define GL_DEPTH_STENCIL_TO_BGRA_NV /;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	glext.h	/^#define GL_DEPTH_STENCIL_TO_RGBA_NV /;"	d
GL_DEPTH_TEXTURE_MODE	glext.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	d
GL_DEPTH_TEXTURE_MODE_ARB	glext.h	/^#define GL_DEPTH_TEXTURE_MODE_ARB /;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS /;"	d
GL_DETAIL_TEXTURE_2D_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_2D_SGIS /;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_LEVEL_SGIS /;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_MODE_SGIS /;"	d
GL_DIFFERENCE_NV	glext.h	/^#define GL_DIFFERENCE_NV /;"	d
GL_DISCARD_ATI	glext.h	/^#define GL_DISCARD_ATI /;"	d
GL_DISCARD_NV	glext.h	/^#define GL_DISCARD_NV /;"	d
GL_DISCRETE_AMD	glext.h	/^#define GL_DISCRETE_AMD /;"	d
GL_DISJOINT_NV	glext.h	/^#define GL_DISJOINT_NV /;"	d
GL_DISPATCH_INDIRECT_BUFFER	glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DISPLAY_LIST	glext.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DISTANCE_ATTENUATION_EXT	glext.h	/^#define GL_DISTANCE_ATTENUATION_EXT /;"	d
GL_DISTANCE_ATTENUATION_SGIS	glext.h	/^#define GL_DISTANCE_ATTENUATION_SGIS /;"	d
GL_DOT2_ADD_ATI	glext.h	/^#define GL_DOT2_ADD_ATI /;"	d
GL_DOT3_ATI	glext.h	/^#define GL_DOT3_ATI /;"	d
GL_DOT3_RGB	glext.h	/^#define GL_DOT3_RGB /;"	d
GL_DOT3_RGBA	glext.h	/^#define GL_DOT3_RGBA /;"	d
GL_DOT3_RGBA_ARB	glext.h	/^#define GL_DOT3_RGBA_ARB /;"	d
GL_DOT3_RGBA_EXT	glext.h	/^#define GL_DOT3_RGBA_EXT /;"	d
GL_DOT3_RGB_ARB	glext.h	/^#define GL_DOT3_RGB_ARB /;"	d
GL_DOT3_RGB_EXT	glext.h	/^#define GL_DOT3_RGB_EXT /;"	d
GL_DOT4_ATI	glext.h	/^#define GL_DOT4_ATI /;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	glext.h	/^#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	glext.h	/^#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	glext.h	/^#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	glext.h	/^#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_NV	glext.h	/^#define GL_DOT_PRODUCT_NV /;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	glext.h	/^#define GL_DOT_PRODUCT_PASS_THROUGH_NV /;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	glext.h	/^#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_1D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_2D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_3D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV /;"	d
GL_DOUBLE_MAT2	glext.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2_EXT	glext.h	/^#define GL_DOUBLE_MAT2_EXT /;"	d
GL_DOUBLE_MAT2x3	glext.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x3_EXT	glext.h	/^#define GL_DOUBLE_MAT2x3_EXT /;"	d
GL_DOUBLE_MAT2x4	glext.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT2x4_EXT	glext.h	/^#define GL_DOUBLE_MAT2x4_EXT /;"	d
GL_DOUBLE_MAT3	glext.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3_EXT	glext.h	/^#define GL_DOUBLE_MAT3_EXT /;"	d
GL_DOUBLE_MAT3x2	glext.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x2_EXT	glext.h	/^#define GL_DOUBLE_MAT3x2_EXT /;"	d
GL_DOUBLE_MAT3x4	glext.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT3x4_EXT	glext.h	/^#define GL_DOUBLE_MAT3x4_EXT /;"	d
GL_DOUBLE_MAT4	glext.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4_EXT	glext.h	/^#define GL_DOUBLE_MAT4_EXT /;"	d
GL_DOUBLE_MAT4x2	glext.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x2_EXT	glext.h	/^#define GL_DOUBLE_MAT4x2_EXT /;"	d
GL_DOUBLE_MAT4x3	glext.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_MAT4x3_EXT	glext.h	/^#define GL_DOUBLE_MAT4x3_EXT /;"	d
GL_DOUBLE_VEC2	glext.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC2_EXT	glext.h	/^#define GL_DOUBLE_VEC2_EXT /;"	d
GL_DOUBLE_VEC3	glext.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC3_EXT	glext.h	/^#define GL_DOUBLE_VEC3_EXT /;"	d
GL_DOUBLE_VEC4	glext.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DOUBLE_VEC4_EXT	glext.h	/^#define GL_DOUBLE_VEC4_EXT /;"	d
GL_DRAW_BUFFER0	glext.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER0_ARB	glext.h	/^#define GL_DRAW_BUFFER0_ARB /;"	d
GL_DRAW_BUFFER0_ATI	glext.h	/^#define GL_DRAW_BUFFER0_ATI /;"	d
GL_DRAW_BUFFER1	glext.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	glext.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER10_ARB	glext.h	/^#define GL_DRAW_BUFFER10_ARB /;"	d
GL_DRAW_BUFFER10_ATI	glext.h	/^#define GL_DRAW_BUFFER10_ATI /;"	d
GL_DRAW_BUFFER11	glext.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER11_ARB	glext.h	/^#define GL_DRAW_BUFFER11_ARB /;"	d
GL_DRAW_BUFFER11_ATI	glext.h	/^#define GL_DRAW_BUFFER11_ATI /;"	d
GL_DRAW_BUFFER12	glext.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER12_ARB	glext.h	/^#define GL_DRAW_BUFFER12_ARB /;"	d
GL_DRAW_BUFFER12_ATI	glext.h	/^#define GL_DRAW_BUFFER12_ATI /;"	d
GL_DRAW_BUFFER13	glext.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER13_ARB	glext.h	/^#define GL_DRAW_BUFFER13_ARB /;"	d
GL_DRAW_BUFFER13_ATI	glext.h	/^#define GL_DRAW_BUFFER13_ATI /;"	d
GL_DRAW_BUFFER14	glext.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER14_ARB	glext.h	/^#define GL_DRAW_BUFFER14_ARB /;"	d
GL_DRAW_BUFFER14_ATI	glext.h	/^#define GL_DRAW_BUFFER14_ATI /;"	d
GL_DRAW_BUFFER15	glext.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER15_ARB	glext.h	/^#define GL_DRAW_BUFFER15_ARB /;"	d
GL_DRAW_BUFFER15_ATI	glext.h	/^#define GL_DRAW_BUFFER15_ATI /;"	d
GL_DRAW_BUFFER1_ARB	glext.h	/^#define GL_DRAW_BUFFER1_ARB /;"	d
GL_DRAW_BUFFER1_ATI	glext.h	/^#define GL_DRAW_BUFFER1_ATI /;"	d
GL_DRAW_BUFFER2	glext.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER2_ARB	glext.h	/^#define GL_DRAW_BUFFER2_ARB /;"	d
GL_DRAW_BUFFER2_ATI	glext.h	/^#define GL_DRAW_BUFFER2_ATI /;"	d
GL_DRAW_BUFFER3	glext.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER3_ARB	glext.h	/^#define GL_DRAW_BUFFER3_ARB /;"	d
GL_DRAW_BUFFER3_ATI	glext.h	/^#define GL_DRAW_BUFFER3_ATI /;"	d
GL_DRAW_BUFFER4	glext.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER4_ARB	glext.h	/^#define GL_DRAW_BUFFER4_ARB /;"	d
GL_DRAW_BUFFER4_ATI	glext.h	/^#define GL_DRAW_BUFFER4_ATI /;"	d
GL_DRAW_BUFFER5	glext.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER5_ARB	glext.h	/^#define GL_DRAW_BUFFER5_ARB /;"	d
GL_DRAW_BUFFER5_ATI	glext.h	/^#define GL_DRAW_BUFFER5_ATI /;"	d
GL_DRAW_BUFFER6	glext.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER6_ARB	glext.h	/^#define GL_DRAW_BUFFER6_ARB /;"	d
GL_DRAW_BUFFER6_ATI	glext.h	/^#define GL_DRAW_BUFFER6_ATI /;"	d
GL_DRAW_BUFFER7	glext.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER7_ARB	glext.h	/^#define GL_DRAW_BUFFER7_ARB /;"	d
GL_DRAW_BUFFER7_ATI	glext.h	/^#define GL_DRAW_BUFFER7_ATI /;"	d
GL_DRAW_BUFFER8	glext.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER8_ARB	glext.h	/^#define GL_DRAW_BUFFER8_ARB /;"	d
GL_DRAW_BUFFER8_ATI	glext.h	/^#define GL_DRAW_BUFFER8_ATI /;"	d
GL_DRAW_BUFFER9	glext.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_BUFFER9_ARB	glext.h	/^#define GL_DRAW_BUFFER9_ARB /;"	d
GL_DRAW_BUFFER9_ATI	glext.h	/^#define GL_DRAW_BUFFER9_ATI /;"	d
GL_DRAW_FRAMEBUFFER	glext.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_EXT /;"	d
GL_DRAW_FRAMEBUFFER_EXT	glext.h	/^#define GL_DRAW_FRAMEBUFFER_EXT /;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	glext.h	/^#define GL_DRAW_INDIRECT_ADDRESS_NV /;"	d
GL_DRAW_INDIRECT_BUFFER	glext.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	glext.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_LENGTH_NV	glext.h	/^#define GL_DRAW_INDIRECT_LENGTH_NV /;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	glext.h	/^#define GL_DRAW_INDIRECT_UNIFIED_NV /;"	d
GL_DRAW_PIXELS_APPLE	glext.h	/^#define GL_DRAW_PIXELS_APPLE /;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	glext.h	/^#define GL_DSDT8_MAG8_INTENSITY8_NV /;"	d
GL_DSDT8_MAG8_NV	glext.h	/^#define GL_DSDT8_MAG8_NV /;"	d
GL_DSDT8_NV	glext.h	/^#define GL_DSDT8_NV /;"	d
GL_DSDT_MAG_INTENSITY_NV	glext.h	/^#define GL_DSDT_MAG_INTENSITY_NV /;"	d
GL_DSDT_MAG_NV	glext.h	/^#define GL_DSDT_MAG_NV /;"	d
GL_DSDT_MAG_VIB_NV	glext.h	/^#define GL_DSDT_MAG_VIB_NV /;"	d
GL_DSDT_NV	glext.h	/^#define GL_DSDT_NV /;"	d
GL_DST_ATOP_NV	glext.h	/^#define GL_DST_ATOP_NV /;"	d
GL_DST_IN_NV	glext.h	/^#define GL_DST_IN_NV /;"	d
GL_DST_NV	glext.h	/^#define GL_DST_NV /;"	d
GL_DST_OUT_NV	glext.h	/^#define GL_DST_OUT_NV /;"	d
GL_DST_OVER_NV	glext.h	/^#define GL_DST_OVER_NV /;"	d
GL_DS_BIAS_NV	glext.h	/^#define GL_DS_BIAS_NV /;"	d
GL_DS_SCALE_NV	glext.h	/^#define GL_DS_SCALE_NV /;"	d
GL_DT_BIAS_NV	glext.h	/^#define GL_DT_BIAS_NV /;"	d
GL_DT_SCALE_NV	glext.h	/^#define GL_DT_SCALE_NV /;"	d
GL_DU8DV8_ATI	glext.h	/^#define GL_DU8DV8_ATI /;"	d
GL_DUAL_ALPHA12_SGIS	glext.h	/^#define GL_DUAL_ALPHA12_SGIS /;"	d
GL_DUAL_ALPHA16_SGIS	glext.h	/^#define GL_DUAL_ALPHA16_SGIS /;"	d
GL_DUAL_ALPHA4_SGIS	glext.h	/^#define GL_DUAL_ALPHA4_SGIS /;"	d
GL_DUAL_ALPHA8_SGIS	glext.h	/^#define GL_DUAL_ALPHA8_SGIS /;"	d
GL_DUAL_INTENSITY12_SGIS	glext.h	/^#define GL_DUAL_INTENSITY12_SGIS /;"	d
GL_DUAL_INTENSITY16_SGIS	glext.h	/^#define GL_DUAL_INTENSITY16_SGIS /;"	d
GL_DUAL_INTENSITY4_SGIS	glext.h	/^#define GL_DUAL_INTENSITY4_SGIS /;"	d
GL_DUAL_INTENSITY8_SGIS	glext.h	/^#define GL_DUAL_INTENSITY8_SGIS /;"	d
GL_DUAL_LUMINANCE12_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE12_SGIS /;"	d
GL_DUAL_LUMINANCE16_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE16_SGIS /;"	d
GL_DUAL_LUMINANCE4_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE4_SGIS /;"	d
GL_DUAL_LUMINANCE8_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE8_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA4_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA8_SGIS /;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	glext.h	/^#define GL_DUAL_TEXTURE_SELECT_SGIS /;"	d
GL_DUDV_ATI	glext.h	/^#define GL_DUDV_ATI /;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV /;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_DUP_LAST_CUBIC_CURVE_TO_NV /;"	d
GL_DYNAMIC_ATI	glext.h	/^#define GL_DYNAMIC_ATI /;"	d
GL_DYNAMIC_COPY	glext.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_COPY_ARB	glext.h	/^#define GL_DYNAMIC_COPY_ARB /;"	d
GL_DYNAMIC_DRAW	glext.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW_ARB	glext.h	/^#define GL_DYNAMIC_DRAW_ARB /;"	d
GL_DYNAMIC_READ	glext.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_READ_ARB	glext.h	/^#define GL_DYNAMIC_READ_ARB /;"	d
GL_DYNAMIC_STORAGE_BIT	glext.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d
GL_EDGEFLAG_BIT_PGI	glext.h	/^#define GL_EDGEFLAG_BIT_PGI /;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	glext.h	/^#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	glext.h	/^#define GL_EDGE_FLAG_ARRAY_COUNT_EXT /;"	d
GL_EDGE_FLAG_ARRAY_EXT	glext.h	/^#define GL_EDGE_FLAG_ARRAY_EXT /;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	glext.h	/^#define GL_EDGE_FLAG_ARRAY_LENGTH_NV /;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_IBM /;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM /;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	glext.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER_EXT /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	glext.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT /;"	d
GL_EIGHTH_BIT_ATI	glext.h	/^#define GL_EIGHTH_BIT_ATI /;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	glext.h	/^#define GL_ELEMENT_ARRAY_ADDRESS_NV /;"	d
GL_ELEMENT_ARRAY_APPLE	glext.h	/^#define GL_ELEMENT_ARRAY_APPLE /;"	d
GL_ELEMENT_ARRAY_ATI	glext.h	/^#define GL_ELEMENT_ARRAY_ATI /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT /;"	d
GL_ELEMENT_ARRAY_BUFFER	glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_ARB /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	glext.h	/^#define GL_ELEMENT_ARRAY_LENGTH_NV /;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_APPLE /;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_ATI /;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_APPLE /;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_ATI /;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	glext.h	/^#define GL_ELEMENT_ARRAY_UNIFIED_NV /;"	d
GL_EMBOSS_CONSTANT_NV	glext.h	/^#define GL_EMBOSS_CONSTANT_NV /;"	d
GL_EMBOSS_LIGHT_NV	glext.h	/^#define GL_EMBOSS_LIGHT_NV /;"	d
GL_EMBOSS_MAP_NV	glext.h	/^#define GL_EMBOSS_MAP_NV /;"	d
GL_EVAL_2D_NV	glext.h	/^#define GL_EVAL_2D_NV /;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	glext.h	/^#define GL_EVAL_FRACTIONAL_TESSELLATION_NV /;"	d
GL_EVAL_TRIANGULAR_2D_NV	glext.h	/^#define GL_EVAL_TRIANGULAR_2D_NV /;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB0_NV /;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB10_NV /;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB11_NV /;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB12_NV /;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB13_NV /;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB14_NV /;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB15_NV /;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB1_NV /;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB2_NV /;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB3_NV /;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB4_NV /;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB5_NV /;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB6_NV /;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB7_NV /;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB8_NV /;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB9_NV /;"	d
GL_EXCLUSION_NV	glext.h	/^#define GL_EXCLUSION_NV /;"	d
GL_EXPAND_NEGATE_NV	glext.h	/^#define GL_EXPAND_NEGATE_NV /;"	d
GL_EXPAND_NORMAL_NV	glext.h	/^#define GL_EXPAND_NORMAL_NV /;"	d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	glext.h	/^#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD /;"	d
GL_EXT_422_pixels	glext.h	/^#define GL_EXT_422_pixels /;"	d
GL_EXT_abgr	glext.h	/^#define GL_EXT_abgr /;"	d
GL_EXT_bgra	glext.h	/^#define GL_EXT_bgra /;"	d
GL_EXT_bindable_uniform	glext.h	/^#define GL_EXT_bindable_uniform /;"	d
GL_EXT_blend_color	glext.h	/^#define GL_EXT_blend_color /;"	d
GL_EXT_blend_equation_separate	glext.h	/^#define GL_EXT_blend_equation_separate /;"	d
GL_EXT_blend_func_separate	glext.h	/^#define GL_EXT_blend_func_separate /;"	d
GL_EXT_blend_logic_op	glext.h	/^#define GL_EXT_blend_logic_op /;"	d
GL_EXT_blend_minmax	glext.h	/^#define GL_EXT_blend_minmax /;"	d
GL_EXT_blend_subtract	glext.h	/^#define GL_EXT_blend_subtract /;"	d
GL_EXT_clip_volume_hint	glext.h	/^#define GL_EXT_clip_volume_hint /;"	d
GL_EXT_cmyka	glext.h	/^#define GL_EXT_cmyka /;"	d
GL_EXT_color_subtable	glext.h	/^#define GL_EXT_color_subtable /;"	d
GL_EXT_compiled_vertex_array	glext.h	/^#define GL_EXT_compiled_vertex_array /;"	d
GL_EXT_convolution	glext.h	/^#define GL_EXT_convolution /;"	d
GL_EXT_coordinate_frame	glext.h	/^#define GL_EXT_coordinate_frame /;"	d
GL_EXT_copy_texture	glext.h	/^#define GL_EXT_copy_texture /;"	d
GL_EXT_cull_vertex	glext.h	/^#define GL_EXT_cull_vertex /;"	d
GL_EXT_debug_label	glext.h	/^#define GL_EXT_debug_label /;"	d
GL_EXT_debug_marker	glext.h	/^#define GL_EXT_debug_marker /;"	d
GL_EXT_depth_bounds_test	glext.h	/^#define GL_EXT_depth_bounds_test /;"	d
GL_EXT_direct_state_access	glext.h	/^#define GL_EXT_direct_state_access /;"	d
GL_EXT_draw_buffers2	glext.h	/^#define GL_EXT_draw_buffers2 /;"	d
GL_EXT_draw_instanced	glext.h	/^#define GL_EXT_draw_instanced /;"	d
GL_EXT_draw_range_elements	glext.h	/^#define GL_EXT_draw_range_elements /;"	d
GL_EXT_fog_coord	glext.h	/^#define GL_EXT_fog_coord /;"	d
GL_EXT_framebuffer_blit	glext.h	/^#define GL_EXT_framebuffer_blit /;"	d
GL_EXT_framebuffer_multisample	glext.h	/^#define GL_EXT_framebuffer_multisample /;"	d
GL_EXT_framebuffer_multisample_blit_scaled	glext.h	/^#define GL_EXT_framebuffer_multisample_blit_scaled /;"	d
GL_EXT_framebuffer_object	glext.h	/^#define GL_EXT_framebuffer_object /;"	d
GL_EXT_framebuffer_sRGB	glext.h	/^#define GL_EXT_framebuffer_sRGB /;"	d
GL_EXT_geometry_shader4	glext.h	/^#define GL_EXT_geometry_shader4 /;"	d
GL_EXT_gpu_program_parameters	glext.h	/^#define GL_EXT_gpu_program_parameters /;"	d
GL_EXT_gpu_shader4	glext.h	/^#define GL_EXT_gpu_shader4 /;"	d
GL_EXT_histogram	glext.h	/^#define GL_EXT_histogram /;"	d
GL_EXT_index_array_formats	glext.h	/^#define GL_EXT_index_array_formats /;"	d
GL_EXT_index_func	glext.h	/^#define GL_EXT_index_func /;"	d
GL_EXT_index_material	glext.h	/^#define GL_EXT_index_material /;"	d
GL_EXT_index_texture	glext.h	/^#define GL_EXT_index_texture /;"	d
GL_EXT_light_texture	glext.h	/^#define GL_EXT_light_texture /;"	d
GL_EXT_misc_attribute	glext.h	/^#define GL_EXT_misc_attribute /;"	d
GL_EXT_multi_draw_arrays	glext.h	/^#define GL_EXT_multi_draw_arrays /;"	d
GL_EXT_multisample	glext.h	/^#define GL_EXT_multisample /;"	d
GL_EXT_packed_depth_stencil	glext.h	/^#define GL_EXT_packed_depth_stencil /;"	d
GL_EXT_packed_float	glext.h	/^#define GL_EXT_packed_float /;"	d
GL_EXT_packed_pixels	glext.h	/^#define GL_EXT_packed_pixels /;"	d
GL_EXT_paletted_texture	glext.h	/^#define GL_EXT_paletted_texture /;"	d
GL_EXT_pixel_buffer_object	glext.h	/^#define GL_EXT_pixel_buffer_object /;"	d
GL_EXT_pixel_transform	glext.h	/^#define GL_EXT_pixel_transform /;"	d
GL_EXT_pixel_transform_color_table	glext.h	/^#define GL_EXT_pixel_transform_color_table /;"	d
GL_EXT_point_parameters	glext.h	/^#define GL_EXT_point_parameters /;"	d
GL_EXT_polygon_offset	glext.h	/^#define GL_EXT_polygon_offset /;"	d
GL_EXT_provoking_vertex	glext.h	/^#define GL_EXT_provoking_vertex /;"	d
GL_EXT_rescale_normal	glext.h	/^#define GL_EXT_rescale_normal /;"	d
GL_EXT_secondary_color	glext.h	/^#define GL_EXT_secondary_color /;"	d
GL_EXT_separate_shader_objects	glext.h	/^#define GL_EXT_separate_shader_objects /;"	d
GL_EXT_separate_specular_color	glext.h	/^#define GL_EXT_separate_specular_color /;"	d
GL_EXT_shader_image_load_store	glext.h	/^#define GL_EXT_shader_image_load_store /;"	d
GL_EXT_shader_integer_mix	glext.h	/^#define GL_EXT_shader_integer_mix /;"	d
GL_EXT_shadow_funcs	glext.h	/^#define GL_EXT_shadow_funcs /;"	d
GL_EXT_shared_texture_palette	glext.h	/^#define GL_EXT_shared_texture_palette /;"	d
GL_EXT_stencil_clear_tag	glext.h	/^#define GL_EXT_stencil_clear_tag /;"	d
GL_EXT_stencil_two_side	glext.h	/^#define GL_EXT_stencil_two_side /;"	d
GL_EXT_stencil_wrap	glext.h	/^#define GL_EXT_stencil_wrap /;"	d
GL_EXT_subtexture	glext.h	/^#define GL_EXT_subtexture /;"	d
GL_EXT_texture	glext.h	/^#define GL_EXT_texture /;"	d
GL_EXT_texture3D	glext.h	/^#define GL_EXT_texture3D /;"	d
GL_EXT_texture_array	glext.h	/^#define GL_EXT_texture_array /;"	d
GL_EXT_texture_buffer_object	glext.h	/^#define GL_EXT_texture_buffer_object /;"	d
GL_EXT_texture_compression_latc	glext.h	/^#define GL_EXT_texture_compression_latc /;"	d
GL_EXT_texture_compression_rgtc	glext.h	/^#define GL_EXT_texture_compression_rgtc /;"	d
GL_EXT_texture_compression_s3tc	glext.h	/^#define GL_EXT_texture_compression_s3tc /;"	d
GL_EXT_texture_cube_map	glext.h	/^#define GL_EXT_texture_cube_map /;"	d
GL_EXT_texture_env_add	glext.h	/^#define GL_EXT_texture_env_add /;"	d
GL_EXT_texture_env_combine	glext.h	/^#define GL_EXT_texture_env_combine /;"	d
GL_EXT_texture_env_dot3	glext.h	/^#define GL_EXT_texture_env_dot3 /;"	d
GL_EXT_texture_filter_anisotropic	glext.h	/^#define GL_EXT_texture_filter_anisotropic /;"	d
GL_EXT_texture_integer	glext.h	/^#define GL_EXT_texture_integer /;"	d
GL_EXT_texture_lod_bias	glext.h	/^#define GL_EXT_texture_lod_bias /;"	d
GL_EXT_texture_mirror_clamp	glext.h	/^#define GL_EXT_texture_mirror_clamp /;"	d
GL_EXT_texture_object	glext.h	/^#define GL_EXT_texture_object /;"	d
GL_EXT_texture_perturb_normal	glext.h	/^#define GL_EXT_texture_perturb_normal /;"	d
GL_EXT_texture_sRGB	glext.h	/^#define GL_EXT_texture_sRGB /;"	d
GL_EXT_texture_sRGB_decode	glext.h	/^#define GL_EXT_texture_sRGB_decode /;"	d
GL_EXT_texture_shared_exponent	glext.h	/^#define GL_EXT_texture_shared_exponent /;"	d
GL_EXT_texture_snorm	glext.h	/^#define GL_EXT_texture_snorm /;"	d
GL_EXT_texture_swizzle	glext.h	/^#define GL_EXT_texture_swizzle /;"	d
GL_EXT_timer_query	glext.h	/^#define GL_EXT_timer_query /;"	d
GL_EXT_transform_feedback	glext.h	/^#define GL_EXT_transform_feedback /;"	d
GL_EXT_vertex_array	glext.h	/^#define GL_EXT_vertex_array /;"	d
GL_EXT_vertex_array_bgra	glext.h	/^#define GL_EXT_vertex_array_bgra /;"	d
GL_EXT_vertex_attrib_64bit	glext.h	/^#define GL_EXT_vertex_attrib_64bit /;"	d
GL_EXT_vertex_shader	glext.h	/^#define GL_EXT_vertex_shader /;"	d
GL_EXT_vertex_weighting	glext.h	/^#define GL_EXT_vertex_weighting /;"	d
GL_EXT_x11_sync_object	glext.h	/^#define GL_EXT_x11_sync_object /;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	glext.h	/^#define GL_EYE_DISTANCE_TO_LINE_SGIS /;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	glext.h	/^#define GL_EYE_DISTANCE_TO_POINT_SGIS /;"	d
GL_EYE_LINE_SGIS	glext.h	/^#define GL_EYE_LINE_SGIS /;"	d
GL_EYE_PLANE_ABSOLUTE_NV	glext.h	/^#define GL_EYE_PLANE_ABSOLUTE_NV /;"	d
GL_EYE_POINT_SGIS	glext.h	/^#define GL_EYE_POINT_SGIS /;"	d
GL_EYE_RADIAL_NV	glext.h	/^#define GL_EYE_RADIAL_NV /;"	d
GL_E_TIMES_F_NV	glext.h	/^#define GL_E_TIMES_F_NV /;"	d
GL_FACTOR_MAX_AMD	glext.h	/^#define GL_FACTOR_MAX_AMD /;"	d
GL_FACTOR_MIN_AMD	glext.h	/^#define GL_FACTOR_MIN_AMD /;"	d
GL_FAILURE_NV	glext.h	/^#define GL_FAILURE_NV /;"	d
GL_FENCE_APPLE	glext.h	/^#define GL_FENCE_APPLE /;"	d
GL_FENCE_CONDITION_NV	glext.h	/^#define GL_FENCE_CONDITION_NV /;"	d
GL_FENCE_STATUS_NV	glext.h	/^#define GL_FENCE_STATUS_NV /;"	d
GL_FIELDS_NV	glext.h	/^#define GL_FIELDS_NV /;"	d
GL_FIELD_LOWER_NV	glext.h	/^#define GL_FIELD_LOWER_NV /;"	d
GL_FIELD_UPPER_NV	glext.h	/^#define GL_FIELD_UPPER_NV /;"	d
GL_FILE_NAME_NV	glext.h	/^#define GL_FILE_NAME_NV /;"	d
GL_FILTER	glext.h	/^#define GL_FILTER /;"	d
GL_FILTER4_SGIS	glext.h	/^#define GL_FILTER4_SGIS /;"	d
GL_FIRST_TO_REST_NV	glext.h	/^#define GL_FIRST_TO_REST_NV /;"	d
GL_FIRST_VERTEX_CONVENTION	glext.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	glext.h	/^#define GL_FIRST_VERTEX_CONVENTION_EXT /;"	d
GL_FIXED	glext.h	/^#define GL_FIXED /;"	d
GL_FIXED_OES	glext.h	/^#define GL_FIXED_OES /;"	d
GL_FIXED_ONLY	glext.h	/^#define GL_FIXED_ONLY /;"	d
GL_FIXED_ONLY_ARB	glext.h	/^#define GL_FIXED_ONLY_ARB /;"	d
GL_FLOAT16_NV	glext.h	/^#define GL_FLOAT16_NV /;"	d
GL_FLOAT16_VEC2_NV	glext.h	/^#define GL_FLOAT16_VEC2_NV /;"	d
GL_FLOAT16_VEC3_NV	glext.h	/^#define GL_FLOAT16_VEC3_NV /;"	d
GL_FLOAT16_VEC4_NV	glext.h	/^#define GL_FLOAT16_VEC4_NV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV /;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	glext.h	/^#define GL_FLOAT_CLEAR_COLOR_VALUE_NV /;"	d
GL_FLOAT_MAT2	glext.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2_ARB	glext.h	/^#define GL_FLOAT_MAT2_ARB /;"	d
GL_FLOAT_MAT2x3	glext.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	glext.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	glext.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3_ARB	glext.h	/^#define GL_FLOAT_MAT3_ARB /;"	d
GL_FLOAT_MAT3x2	glext.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	glext.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	glext.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4_ARB	glext.h	/^#define GL_FLOAT_MAT4_ARB /;"	d
GL_FLOAT_MAT4x2	glext.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	glext.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_R16_NV	glext.h	/^#define GL_FLOAT_R16_NV /;"	d
GL_FLOAT_R32_NV	glext.h	/^#define GL_FLOAT_R32_NV /;"	d
GL_FLOAT_RG16_NV	glext.h	/^#define GL_FLOAT_RG16_NV /;"	d
GL_FLOAT_RG32_NV	glext.h	/^#define GL_FLOAT_RG32_NV /;"	d
GL_FLOAT_RGB16_NV	glext.h	/^#define GL_FLOAT_RGB16_NV /;"	d
GL_FLOAT_RGB32_NV	glext.h	/^#define GL_FLOAT_RGB32_NV /;"	d
GL_FLOAT_RGBA16_NV	glext.h	/^#define GL_FLOAT_RGBA16_NV /;"	d
GL_FLOAT_RGBA32_NV	glext.h	/^#define GL_FLOAT_RGBA32_NV /;"	d
GL_FLOAT_RGBA_MODE_NV	glext.h	/^#define GL_FLOAT_RGBA_MODE_NV /;"	d
GL_FLOAT_RGBA_NV	glext.h	/^#define GL_FLOAT_RGBA_NV /;"	d
GL_FLOAT_RGB_NV	glext.h	/^#define GL_FLOAT_RGB_NV /;"	d
GL_FLOAT_RG_NV	glext.h	/^#define GL_FLOAT_RG_NV /;"	d
GL_FLOAT_R_NV	glext.h	/^#define GL_FLOAT_R_NV /;"	d
GL_FLOAT_VEC2	glext.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2_ARB	glext.h	/^#define GL_FLOAT_VEC2_ARB /;"	d
GL_FLOAT_VEC3	glext.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3_ARB	glext.h	/^#define GL_FLOAT_VEC3_ARB /;"	d
GL_FLOAT_VEC4	glext.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4_ARB	glext.h	/^#define GL_FLOAT_VEC4_ARB /;"	d
GL_FOG_COORD	glext.h	/^#define GL_FOG_COORD /;"	d
GL_FOG_COORDINATE	glext.h	/^#define GL_FOG_COORDINATE /;"	d
GL_FOG_COORDINATE_ARRAY	glext.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_FOG_COORDINATE_ARRAY_EXT	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT /;"	d
GL_FOG_COORDINATE_EXT	glext.h	/^#define GL_FOG_COORDINATE_EXT /;"	d
GL_FOG_COORDINATE_SOURCE	glext.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	d
GL_FOG_COORDINATE_SOURCE_EXT	glext.h	/^#define GL_FOG_COORDINATE_SOURCE_EXT /;"	d
GL_FOG_COORD_ARRAY	glext.h	/^#define GL_FOG_COORD_ARRAY /;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	glext.h	/^#define GL_FOG_COORD_ARRAY_ADDRESS_NV /;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	glext.h	/^#define GL_FOG_COORD_ARRAY_LENGTH_NV /;"	d
GL_FOG_COORD_ARRAY_POINTER	glext.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	d
GL_FOG_COORD_ARRAY_STRIDE	glext.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	d
GL_FOG_COORD_ARRAY_TYPE	glext.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	d
GL_FOG_COORD_SRC	glext.h	/^#define GL_FOG_COORD_SRC /;"	d
GL_FOG_DISTANCE_MODE_NV	glext.h	/^#define GL_FOG_DISTANCE_MODE_NV /;"	d
GL_FOG_FUNC_POINTS_SGIS	glext.h	/^#define GL_FOG_FUNC_POINTS_SGIS /;"	d
GL_FOG_FUNC_SGIS	glext.h	/^#define GL_FOG_FUNC_SGIS /;"	d
GL_FOG_OFFSET_SGIX	glext.h	/^#define GL_FOG_OFFSET_SGIX /;"	d
GL_FOG_OFFSET_VALUE_SGIX	glext.h	/^#define GL_FOG_OFFSET_VALUE_SGIX /;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	glext.h	/^#define GL_FOG_SPECULAR_TEXTURE_WIN /;"	d
GL_FONT_ASCENDER_BIT_NV	glext.h	/^#define GL_FONT_ASCENDER_BIT_NV /;"	d
GL_FONT_DESCENDER_BIT_NV	glext.h	/^#define GL_FONT_DESCENDER_BIT_NV /;"	d
GL_FONT_HAS_KERNING_BIT_NV	glext.h	/^#define GL_FONT_HAS_KERNING_BIT_NV /;"	d
GL_FONT_HEIGHT_BIT_NV	glext.h	/^#define GL_FONT_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	glext.h	/^#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	glext.h	/^#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV /;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	glext.h	/^#define GL_FONT_UNDERLINE_POSITION_BIT_NV /;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	glext.h	/^#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV /;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	glext.h	/^#define GL_FONT_UNITS_PER_EM_BIT_NV /;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	glext.h	/^#define GL_FONT_X_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	glext.h	/^#define GL_FONT_X_MIN_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	glext.h	/^#define GL_FONT_Y_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	glext.h	/^#define GL_FONT_Y_MIN_BOUNDS_BIT_NV /;"	d
GL_FORCE_BLUE_TO_ONE_NV	glext.h	/^#define GL_FORCE_BLUE_TO_ONE_NV /;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	glext.h	/^#define GL_FORMAT_SUBSAMPLE_244_244_OML /;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	glext.h	/^#define GL_FORMAT_SUBSAMPLE_24_24_OML /;"	d
GL_FRACTIONAL_EVEN	glext.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_ODD	glext.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRAGMENT_COLOR_EXT	glext.h	/^#define GL_FRAGMENT_COLOR_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_SGIX /;"	d
GL_FRAGMENT_DEPTH	glext.h	/^#define GL_FRAGMENT_DEPTH /;"	d
GL_FRAGMENT_DEPTH_EXT	glext.h	/^#define GL_FRAGMENT_DEPTH_EXT /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	glext.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_LIGHT0_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT0_SGIX /;"	d
GL_FRAGMENT_LIGHT1_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT1_SGIX /;"	d
GL_FRAGMENT_LIGHT2_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT2_SGIX /;"	d
GL_FRAGMENT_LIGHT3_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT3_SGIX /;"	d
GL_FRAGMENT_LIGHT4_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT4_SGIX /;"	d
GL_FRAGMENT_LIGHT5_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT5_SGIX /;"	d
GL_FRAGMENT_LIGHT6_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT6_SGIX /;"	d
GL_FRAGMENT_LIGHT7_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT7_SGIX /;"	d
GL_FRAGMENT_LIGHTING_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHTING_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX /;"	d
GL_FRAGMENT_MATERIAL_EXT	glext.h	/^#define GL_FRAGMENT_MATERIAL_EXT /;"	d
GL_FRAGMENT_NORMAL_EXT	glext.h	/^#define GL_FRAGMENT_NORMAL_EXT /;"	d
GL_FRAGMENT_PROGRAM_ARB	glext.h	/^#define GL_FRAGMENT_PROGRAM_ARB /;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	glext.h	/^#define GL_FRAGMENT_PROGRAM_BINDING_NV /;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	glext.h	/^#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV /;"	d
GL_FRAGMENT_PROGRAM_NV	glext.h	/^#define GL_FRAGMENT_PROGRAM_NV /;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_FRAGMENT_SHADER	glext.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_ARB	glext.h	/^#define GL_FRAGMENT_SHADER_ARB /;"	d
GL_FRAGMENT_SHADER_ATI	glext.h	/^#define GL_FRAGMENT_SHADER_ATI /;"	d
GL_FRAGMENT_SHADER_BIT	glext.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB /;"	d
GL_FRAGMENT_SUBROUTINE	glext.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	glext.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	glext.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	glext.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT_EXT /;"	d
GL_FRAMEBUFFER_BINDING	glext.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BINDING_EXT	glext.h	/^#define GL_FRAMEBUFFER_BINDING_EXT /;"	d
GL_FRAMEBUFFER_BLEND	glext.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	glext.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	glext.h	/^#define GL_FRAMEBUFFER_COMPLETE_EXT /;"	d
GL_FRAMEBUFFER_DEFAULT	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_EXT	glext.h	/^#define GL_FRAMEBUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_RENDERABLE	glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SRGB	glext.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	glext.h	/^#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
GL_FRAMEBUFFER_SRGB_EXT	glext.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	d
GL_FRAMEBUFFER_UNDEFINED	glext.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_EXT /;"	d
GL_FRAMEZOOM_FACTOR_SGIX	glext.h	/^#define GL_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_FRAMEZOOM_SGIX	glext.h	/^#define GL_FRAMEZOOM_SGIX /;"	d
GL_FRAME_NV	glext.h	/^#define GL_FRAME_NV /;"	d
GL_FULL_RANGE_EXT	glext.h	/^#define GL_FULL_RANGE_EXT /;"	d
GL_FULL_STIPPLE_HINT_PGI	glext.h	/^#define GL_FULL_STIPPLE_HINT_PGI /;"	d
GL_FULL_SUPPORT	glext.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	glext.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD_EXT	glext.h	/^#define GL_FUNC_ADD_EXT /;"	d
GL_FUNC_REVERSE_SUBTRACT	glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT_EXT /;"	d
GL_FUNC_SUBTRACT	glext.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT_EXT	glext.h	/^#define GL_FUNC_SUBTRACT_EXT /;"	d
GL_GENERATE_MIPMAP	glext.h	/^#define GL_GENERATE_MIPMAP /;"	d
GL_GENERATE_MIPMAP_HINT	glext.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	glext.h	/^#define GL_GENERATE_MIPMAP_HINT_SGIS /;"	d
GL_GENERATE_MIPMAP_SGIS	glext.h	/^#define GL_GENERATE_MIPMAP_SGIS /;"	d
GL_GENERIC_ATTRIB_NV	glext.h	/^#define GL_GENERIC_ATTRIB_NV /;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	glext.h	/^#define GL_GEOMETRY_DEFORMATION_BIT_SGIX /;"	d
GL_GEOMETRY_DEFORMATION_SGIX	glext.h	/^#define GL_GEOMETRY_DEFORMATION_SGIX /;"	d
GL_GEOMETRY_INPUT_TYPE	glext.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_ARB /;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_EXT /;"	d
GL_GEOMETRY_OUTPUT_TYPE	glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_ARB /;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_EXT /;"	d
GL_GEOMETRY_PROGRAM_NV	glext.h	/^#define GL_GEOMETRY_PROGRAM_NV /;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_GEOMETRY_SHADER	glext.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_ARB	glext.h	/^#define GL_GEOMETRY_SHADER_ARB /;"	d
GL_GEOMETRY_SHADER_BIT	glext.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_EXT	glext.h	/^#define GL_GEOMETRY_SHADER_EXT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	glext.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SUBROUTINE	glext.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	glext.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	glext.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	glext.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_ARB /;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_EXT /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	glext.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	glext.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GLEXT_VERSION	glext.h	/^#define GL_GLEXT_VERSION /;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	glext.h	/^#define GL_GLOBAL_ALPHA_FACTOR_SUN /;"	d
GL_GLOBAL_ALPHA_SUN	glext.h	/^#define GL_GLOBAL_ALPHA_SUN /;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	glext.h	/^#define GL_GLYPH_HAS_KERNING_BIT_NV /;"	d
GL_GLYPH_HEIGHT_BIT_NV	glext.h	/^#define GL_GLYPH_HEIGHT_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_WIDTH_BIT_NV	glext.h	/^#define GL_GLYPH_WIDTH_BIT_NV /;"	d
GL_GPU_ADDRESS_NV	glext.h	/^#define GL_GPU_ADDRESS_NV /;"	d
GL_GREEN_BIT_ATI	glext.h	/^#define GL_GREEN_BIT_ATI /;"	d
GL_GREEN_INTEGER	glext.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_INTEGER_EXT	glext.h	/^#define GL_GREEN_INTEGER_EXT /;"	d
GL_GREEN_MAX_CLAMP_INGR	glext.h	/^#define GL_GREEN_MAX_CLAMP_INGR /;"	d
GL_GREEN_MIN_CLAMP_INGR	glext.h	/^#define GL_GREEN_MIN_CLAMP_INGR /;"	d
GL_GREEN_NV	glext.h	/^#define GL_GREEN_NV /;"	d
GL_GREMEDY_frame_terminator	glext.h	/^#define GL_GREMEDY_frame_terminator /;"	d
GL_GREMEDY_string_marker	glext.h	/^#define GL_GREMEDY_string_marker /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	glext.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_HALF_APPLE	glext.h	/^#define GL_HALF_APPLE /;"	d
GL_HALF_BIAS_NEGATE_NV	glext.h	/^#define GL_HALF_BIAS_NEGATE_NV /;"	d
GL_HALF_BIAS_NORMAL_NV	glext.h	/^#define GL_HALF_BIAS_NORMAL_NV /;"	d
GL_HALF_BIT_ATI	glext.h	/^#define GL_HALF_BIT_ATI /;"	d
GL_HALF_FLOAT	glext.h	/^#define GL_HALF_FLOAT /;"	d
GL_HALF_FLOAT_ARB	glext.h	/^#define GL_HALF_FLOAT_ARB /;"	d
GL_HALF_FLOAT_NV	glext.h	/^#define GL_HALF_FLOAT_NV /;"	d
GL_HARDLIGHT_NV	glext.h	/^#define GL_HARDLIGHT_NV /;"	d
GL_HARDMIX_NV	glext.h	/^#define GL_HARDMIX_NV /;"	d
GL_HIGH_FLOAT	glext.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	glext.h	/^#define GL_HIGH_INT /;"	d
GL_HILO16_NV	glext.h	/^#define GL_HILO16_NV /;"	d
GL_HILO8_NV	glext.h	/^#define GL_HILO8_NV /;"	d
GL_HILO_NV	glext.h	/^#define GL_HILO_NV /;"	d
GL_HISTOGRAM	glext.h	/^#define GL_HISTOGRAM /;"	d
GL_HISTOGRAM_ALPHA_SIZE	glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE /;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE_EXT /;"	d
GL_HISTOGRAM_BLUE_SIZE	glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE /;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE_EXT /;"	d
GL_HISTOGRAM_EXT	glext.h	/^#define GL_HISTOGRAM_EXT /;"	d
GL_HISTOGRAM_FORMAT	glext.h	/^#define GL_HISTOGRAM_FORMAT /;"	d
GL_HISTOGRAM_FORMAT_EXT	glext.h	/^#define GL_HISTOGRAM_FORMAT_EXT /;"	d
GL_HISTOGRAM_GREEN_SIZE	glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE /;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE_EXT /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT /;"	d
GL_HISTOGRAM_RED_SIZE	glext.h	/^#define GL_HISTOGRAM_RED_SIZE /;"	d
GL_HISTOGRAM_RED_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_RED_SIZE_EXT /;"	d
GL_HISTOGRAM_SINK	glext.h	/^#define GL_HISTOGRAM_SINK /;"	d
GL_HISTOGRAM_SINK_EXT	glext.h	/^#define GL_HISTOGRAM_SINK_EXT /;"	d
GL_HISTOGRAM_WIDTH	glext.h	/^#define GL_HISTOGRAM_WIDTH /;"	d
GL_HISTOGRAM_WIDTH_EXT	glext.h	/^#define GL_HISTOGRAM_WIDTH_EXT /;"	d
GL_HI_BIAS_NV	glext.h	/^#define GL_HI_BIAS_NV /;"	d
GL_HI_SCALE_NV	glext.h	/^#define GL_HI_SCALE_NV /;"	d
GL_HORIZONTAL_LINE_TO_NV	glext.h	/^#define GL_HORIZONTAL_LINE_TO_NV /;"	d
GL_HP_convolution_border_modes	glext.h	/^#define GL_HP_convolution_border_modes /;"	d
GL_HP_image_transform	glext.h	/^#define GL_HP_image_transform /;"	d
GL_HP_occlusion_test	glext.h	/^#define GL_HP_occlusion_test /;"	d
GL_HP_texture_lighting	glext.h	/^#define GL_HP_texture_lighting /;"	d
GL_HSL_COLOR_NV	glext.h	/^#define GL_HSL_COLOR_NV /;"	d
GL_HSL_HUE_NV	glext.h	/^#define GL_HSL_HUE_NV /;"	d
GL_HSL_LUMINOSITY_NV	glext.h	/^#define GL_HSL_LUMINOSITY_NV /;"	d
GL_HSL_SATURATION_NV	glext.h	/^#define GL_HSL_SATURATION_NV /;"	d
GL_IBM_cull_vertex	glext.h	/^#define GL_IBM_cull_vertex /;"	d
GL_IBM_multimode_draw_arrays	glext.h	/^#define GL_IBM_multimode_draw_arrays /;"	d
GL_IBM_rasterpos_clip	glext.h	/^#define GL_IBM_rasterpos_clip /;"	d
GL_IBM_static_data	glext.h	/^#define GL_IBM_static_data /;"	d
GL_IBM_texture_mirrored_repeat	glext.h	/^#define GL_IBM_texture_mirrored_repeat /;"	d
GL_IBM_vertex_array_lists	glext.h	/^#define GL_IBM_vertex_array_lists /;"	d
GL_IDENTITY_NV	glext.h	/^#define GL_IDENTITY_NV /;"	d
GL_IGNORE_BORDER_HP	glext.h	/^#define GL_IGNORE_BORDER_HP /;"	d
GL_IMAGE_1D	glext.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	glext.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_1D_ARRAY_EXT	glext.h	/^#define GL_IMAGE_1D_ARRAY_EXT /;"	d
GL_IMAGE_1D_EXT	glext.h	/^#define GL_IMAGE_1D_EXT /;"	d
GL_IMAGE_2D	glext.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	glext.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_ARRAY_EXT	glext.h	/^#define GL_IMAGE_2D_ARRAY_EXT /;"	d
GL_IMAGE_2D_EXT	glext.h	/^#define GL_IMAGE_2D_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE	glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_IMAGE_2D_RECT	glext.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_2D_RECT_EXT	glext.h	/^#define GL_IMAGE_2D_RECT_EXT /;"	d
GL_IMAGE_3D	glext.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_3D_EXT	glext.h	/^#define GL_IMAGE_3D_EXT /;"	d
GL_IMAGE_BINDING_ACCESS	glext.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_ACCESS_EXT	glext.h	/^#define GL_IMAGE_BINDING_ACCESS_EXT /;"	d
GL_IMAGE_BINDING_FORMAT	glext.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_FORMAT_EXT	glext.h	/^#define GL_IMAGE_BINDING_FORMAT_EXT /;"	d
GL_IMAGE_BINDING_LAYER	glext.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	glext.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LAYERED_EXT	glext.h	/^#define GL_IMAGE_BINDING_LAYERED_EXT /;"	d
GL_IMAGE_BINDING_LAYER_EXT	glext.h	/^#define GL_IMAGE_BINDING_LAYER_EXT /;"	d
GL_IMAGE_BINDING_LEVEL	glext.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_LEVEL_EXT	glext.h	/^#define GL_IMAGE_BINDING_LEVEL_EXT /;"	d
GL_IMAGE_BINDING_NAME	glext.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BINDING_NAME_EXT	glext.h	/^#define GL_IMAGE_BINDING_NAME_EXT /;"	d
GL_IMAGE_BUFFER	glext.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_BUFFER_EXT	glext.h	/^#define GL_IMAGE_BUFFER_EXT /;"	d
GL_IMAGE_CLASS_10_10_10_2	glext.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	glext.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	glext.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	glext.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	glext.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	glext.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	glext.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	glext.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	glext.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	glext.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	glext.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	glext.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	glext.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_EXT	glext.h	/^#define GL_IMAGE_CUBE_EXT /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	glext.h	/^#define GL_IMAGE_CUBIC_WEIGHT_HP /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_MAG_FILTER_HP	glext.h	/^#define GL_IMAGE_MAG_FILTER_HP /;"	d
GL_IMAGE_MIN_FILTER_HP	glext.h	/^#define GL_IMAGE_MIN_FILTER_HP /;"	d
GL_IMAGE_PIXEL_FORMAT	glext.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	glext.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_ROTATE_ANGLE_HP	glext.h	/^#define GL_IMAGE_ROTATE_ANGLE_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_X_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_Y_HP /;"	d
GL_IMAGE_SCALE_X_HP	glext.h	/^#define GL_IMAGE_SCALE_X_HP /;"	d
GL_IMAGE_SCALE_Y_HP	glext.h	/^#define GL_IMAGE_SCALE_Y_HP /;"	d
GL_IMAGE_TEXEL_SIZE	glext.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMAGE_TRANSFORM_2D_HP	glext.h	/^#define GL_IMAGE_TRANSFORM_2D_HP /;"	d
GL_IMAGE_TRANSLATE_X_HP	glext.h	/^#define GL_IMAGE_TRANSLATE_X_HP /;"	d
GL_IMAGE_TRANSLATE_Y_HP	glext.h	/^#define GL_IMAGE_TRANSLATE_Y_HP /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES /;"	d
GL_INCR_WRAP	glext.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP_EXT	glext.h	/^#define GL_INCR_WRAP_EXT /;"	d
GL_INDEX	glext.h	/^#define GL_INDEX /;"	d
GL_INDEX_ARRAY_ADDRESS_NV	glext.h	/^#define GL_INDEX_ARRAY_ADDRESS_NV /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_INDEX_ARRAY_COUNT_EXT	glext.h	/^#define GL_INDEX_ARRAY_COUNT_EXT /;"	d
GL_INDEX_ARRAY_EXT	glext.h	/^#define GL_INDEX_ARRAY_EXT /;"	d
GL_INDEX_ARRAY_LENGTH_NV	glext.h	/^#define GL_INDEX_ARRAY_LENGTH_NV /;"	d
GL_INDEX_ARRAY_LIST_IBM	glext.h	/^#define GL_INDEX_ARRAY_LIST_IBM /;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_INDEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_INDEX_ARRAY_POINTER_EXT	glext.h	/^#define GL_INDEX_ARRAY_POINTER_EXT /;"	d
GL_INDEX_ARRAY_STRIDE_EXT	glext.h	/^#define GL_INDEX_ARRAY_STRIDE_EXT /;"	d
GL_INDEX_ARRAY_TYPE_EXT	glext.h	/^#define GL_INDEX_ARRAY_TYPE_EXT /;"	d
GL_INDEX_BIT_PGI	glext.h	/^#define GL_INDEX_BIT_PGI /;"	d
GL_INDEX_MATERIAL_EXT	glext.h	/^#define GL_INDEX_MATERIAL_EXT /;"	d
GL_INDEX_MATERIAL_FACE_EXT	glext.h	/^#define GL_INDEX_MATERIAL_FACE_EXT /;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	glext.h	/^#define GL_INDEX_MATERIAL_PARAMETER_EXT /;"	d
GL_INDEX_TEST_EXT	glext.h	/^#define GL_INDEX_TEST_EXT /;"	d
GL_INDEX_TEST_FUNC_EXT	glext.h	/^#define GL_INDEX_TEST_FUNC_EXT /;"	d
GL_INDEX_TEST_REF_EXT	glext.h	/^#define GL_INDEX_TEST_REF_EXT /;"	d
GL_INFO_LOG_LENGTH	glext.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INGR_blend_func_separate	glext.h	/^#define GL_INGR_blend_func_separate /;"	d
GL_INGR_color_clamp	glext.h	/^#define GL_INGR_color_clamp /;"	d
GL_INGR_interlace_read	glext.h	/^#define GL_INGR_interlace_read /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	glext.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	glext.h	/^#define GL_INSTRUMENT_BUFFER_POINTER_SGIX /;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	glext.h	/^#define GL_INSTRUMENT_MEASUREMENTS_SGIX /;"	d
GL_INT16_NV	glext.h	/^#define GL_INT16_NV /;"	d
GL_INT16_VEC2_NV	glext.h	/^#define GL_INT16_VEC2_NV /;"	d
GL_INT16_VEC3_NV	glext.h	/^#define GL_INT16_VEC3_NV /;"	d
GL_INT16_VEC4_NV	glext.h	/^#define GL_INT16_VEC4_NV /;"	d
GL_INT64_NV	glext.h	/^#define GL_INT64_NV /;"	d
GL_INT64_VEC2_NV	glext.h	/^#define GL_INT64_VEC2_NV /;"	d
GL_INT64_VEC3_NV	glext.h	/^#define GL_INT64_VEC3_NV /;"	d
GL_INT64_VEC4_NV	glext.h	/^#define GL_INT64_VEC4_NV /;"	d
GL_INT8_NV	glext.h	/^#define GL_INT8_NV /;"	d
GL_INT8_VEC2_NV	glext.h	/^#define GL_INT8_VEC2_NV /;"	d
GL_INT8_VEC3_NV	glext.h	/^#define GL_INT8_VEC3_NV /;"	d
GL_INT8_VEC4_NV	glext.h	/^#define GL_INT8_VEC4_NV /;"	d
GL_INTEL_fragment_shader_ordering	glext.h	/^#define GL_INTEL_fragment_shader_ordering /;"	d
GL_INTEL_map_texture	glext.h	/^#define GL_INTEL_map_texture /;"	d
GL_INTEL_parallel_arrays	glext.h	/^#define GL_INTEL_parallel_arrays /;"	d
GL_INTEL_performance_query	glext.h	/^#define GL_INTEL_performance_query /;"	d
GL_INTENSITY12_EXT	glext.h	/^#define GL_INTENSITY12_EXT /;"	d
GL_INTENSITY16F_ARB	glext.h	/^#define GL_INTENSITY16F_ARB /;"	d
GL_INTENSITY16I_EXT	glext.h	/^#define GL_INTENSITY16I_EXT /;"	d
GL_INTENSITY16UI_EXT	glext.h	/^#define GL_INTENSITY16UI_EXT /;"	d
GL_INTENSITY16_EXT	glext.h	/^#define GL_INTENSITY16_EXT /;"	d
GL_INTENSITY16_SNORM	glext.h	/^#define GL_INTENSITY16_SNORM /;"	d
GL_INTENSITY32F_ARB	glext.h	/^#define GL_INTENSITY32F_ARB /;"	d
GL_INTENSITY32I_EXT	glext.h	/^#define GL_INTENSITY32I_EXT /;"	d
GL_INTENSITY32UI_EXT	glext.h	/^#define GL_INTENSITY32UI_EXT /;"	d
GL_INTENSITY4_EXT	glext.h	/^#define GL_INTENSITY4_EXT /;"	d
GL_INTENSITY8I_EXT	glext.h	/^#define GL_INTENSITY8I_EXT /;"	d
GL_INTENSITY8UI_EXT	glext.h	/^#define GL_INTENSITY8UI_EXT /;"	d
GL_INTENSITY8_EXT	glext.h	/^#define GL_INTENSITY8_EXT /;"	d
GL_INTENSITY8_SNORM	glext.h	/^#define GL_INTENSITY8_SNORM /;"	d
GL_INTENSITY_EXT	glext.h	/^#define GL_INTENSITY_EXT /;"	d
GL_INTENSITY_FLOAT16_APPLE	glext.h	/^#define GL_INTENSITY_FLOAT16_APPLE /;"	d
GL_INTENSITY_FLOAT16_ATI	glext.h	/^#define GL_INTENSITY_FLOAT16_ATI /;"	d
GL_INTENSITY_FLOAT32_APPLE	glext.h	/^#define GL_INTENSITY_FLOAT32_APPLE /;"	d
GL_INTENSITY_FLOAT32_ATI	glext.h	/^#define GL_INTENSITY_FLOAT32_ATI /;"	d
GL_INTENSITY_SNORM	glext.h	/^#define GL_INTENSITY_SNORM /;"	d
GL_INTERLACE_OML	glext.h	/^#define GL_INTERLACE_OML /;"	d
GL_INTERLACE_READ_INGR	glext.h	/^#define GL_INTERLACE_READ_INGR /;"	d
GL_INTERLACE_READ_OML	glext.h	/^#define GL_INTERLACE_READ_OML /;"	d
GL_INTERLACE_SGIX	glext.h	/^#define GL_INTERLACE_SGIX /;"	d
GL_INTERLEAVED_ATTRIBS	glext.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERLEAVED_ATTRIBS_EXT	glext.h	/^#define GL_INTERLEAVED_ATTRIBS_EXT /;"	d
GL_INTERLEAVED_ATTRIBS_NV	glext.h	/^#define GL_INTERLEAVED_ATTRIBS_NV /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	glext.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	glext.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	glext.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	glext.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	glext.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	glext.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	glext.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	glext.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	glext.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	glext.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	glext.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	glext.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	glext.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	glext.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	glext.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INTERPOLATE	glext.h	/^#define GL_INTERPOLATE /;"	d
GL_INTERPOLATE_ARB	glext.h	/^#define GL_INTERPOLATE_ARB /;"	d
GL_INTERPOLATE_EXT	glext.h	/^#define GL_INTERPOLATE_EXT /;"	d
GL_INT_2_10_10_10_REV	glext.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	glext.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	glext.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	glext.h	/^#define GL_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_INT_IMAGE_1D_EXT	glext.h	/^#define GL_INT_IMAGE_1D_EXT /;"	d
GL_INT_IMAGE_2D	glext.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	glext.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	glext.h	/^#define GL_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_EXT	glext.h	/^#define GL_INT_IMAGE_2D_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_INT_IMAGE_2D_RECT	glext.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_2D_RECT_EXT	glext.h	/^#define GL_INT_IMAGE_2D_RECT_EXT /;"	d
GL_INT_IMAGE_3D	glext.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_3D_EXT	glext.h	/^#define GL_INT_IMAGE_3D_EXT /;"	d
GL_INT_IMAGE_BUFFER	glext.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_BUFFER_EXT	glext.h	/^#define GL_INT_IMAGE_BUFFER_EXT /;"	d
GL_INT_IMAGE_CUBE	glext.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_EXT	glext.h	/^#define GL_INT_IMAGE_CUBE_EXT /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D	glext.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D_EXT	glext.h	/^#define GL_INT_SAMPLER_1D_EXT /;"	d
GL_INT_SAMPLER_2D	glext.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_2D_EXT	glext.h	/^#define GL_INT_SAMPLER_2D_EXT /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	glext.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_2D_RECT_EXT	glext.h	/^#define GL_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_INT_SAMPLER_3D	glext.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_3D_EXT	glext.h	/^#define GL_INT_SAMPLER_3D_EXT /;"	d
GL_INT_SAMPLER_BUFFER	glext.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_BUFFER_AMD	glext.h	/^#define GL_INT_SAMPLER_BUFFER_AMD /;"	d
GL_INT_SAMPLER_BUFFER_EXT	glext.h	/^#define GL_INT_SAMPLER_BUFFER_EXT /;"	d
GL_INT_SAMPLER_CUBE	glext.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_EXT	glext.h	/^#define GL_INT_SAMPLER_CUBE_EXT /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	glext.h	/^#define GL_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_INT_VEC2	glext.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2_ARB	glext.h	/^#define GL_INT_VEC2_ARB /;"	d
GL_INT_VEC3	glext.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3_ARB	glext.h	/^#define GL_INT_VEC3_ARB /;"	d
GL_INT_VEC4	glext.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4_ARB	glext.h	/^#define GL_INT_VEC4_ARB /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT /;"	d
GL_INVALID_INDEX	glext.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVARIANT_DATATYPE_EXT	glext.h	/^#define GL_INVARIANT_DATATYPE_EXT /;"	d
GL_INVARIANT_EXT	glext.h	/^#define GL_INVARIANT_EXT /;"	d
GL_INVARIANT_VALUE_EXT	glext.h	/^#define GL_INVARIANT_VALUE_EXT /;"	d
GL_INVERSE_NV	glext.h	/^#define GL_INVERSE_NV /;"	d
GL_INVERSE_TRANSPOSE_NV	glext.h	/^#define GL_INVERSE_TRANSPOSE_NV /;"	d
GL_INVERTED_SCREEN_W_REND	glext.h	/^#define GL_INVERTED_SCREEN_W_REND /;"	d
GL_INVERT_OVG_NV	glext.h	/^#define GL_INVERT_OVG_NV /;"	d
GL_INVERT_RGB_NV	glext.h	/^#define GL_INVERT_RGB_NV /;"	d
GL_IR_INSTRUMENT1_SGIX	glext.h	/^#define GL_IR_INSTRUMENT1_SGIX /;"	d
GL_ISOLINES	glext.h	/^#define GL_ISOLINES /;"	d
GL_IS_PER_PATCH	glext.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_ROW_MAJOR	glext.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_ITALIC_BIT_NV	glext.h	/^#define GL_ITALIC_BIT_NV /;"	d
GL_IUI_N3F_V2F_EXT	glext.h	/^#define GL_IUI_N3F_V2F_EXT /;"	d
GL_IUI_N3F_V3F_EXT	glext.h	/^#define GL_IUI_N3F_V3F_EXT /;"	d
GL_IUI_V2F_EXT	glext.h	/^#define GL_IUI_V2F_EXT /;"	d
GL_IUI_V3F_EXT	glext.h	/^#define GL_IUI_V3F_EXT /;"	d
GL_KHR_debug	glext.h	/^#define GL_KHR_debug /;"	d
GL_KHR_texture_compression_astc_hdr	glext.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	d
GL_KHR_texture_compression_astc_ldr	glext.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_LARGE_CCW_ARC_TO_NV	glext.h	/^#define GL_LARGE_CCW_ARC_TO_NV /;"	d
GL_LARGE_CW_ARC_TO_NV	glext.h	/^#define GL_LARGE_CW_ARC_TO_NV /;"	d
GL_LAST_VERTEX_CONVENTION	glext.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAST_VERTEX_CONVENTION_EXT	glext.h	/^#define GL_LAST_VERTEX_CONVENTION_EXT /;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	glext.h	/^#define GL_LAST_VIDEO_CAPTURE_STATUS_NV /;"	d
GL_LAYER_NV	glext.h	/^#define GL_LAYER_NV /;"	d
GL_LAYER_PROVOKING_VERTEX	glext.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LAYOUT_DEFAULT_INTEL	glext.h	/^#define GL_LAYOUT_DEFAULT_INTEL /;"	d
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL	glext.h	/^#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL /;"	d
GL_LAYOUT_LINEAR_INTEL	glext.h	/^#define GL_LAYOUT_LINEAR_INTEL /;"	d
GL_LERP_ATI	glext.h	/^#define GL_LERP_ATI /;"	d
GL_LIGHTEN_NV	glext.h	/^#define GL_LIGHTEN_NV /;"	d
GL_LIGHT_ENV_MODE_SGIX	glext.h	/^#define GL_LIGHT_ENV_MODE_SGIX /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	glext.h	/^#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE /;"	d
GL_LINEARBURN_NV	glext.h	/^#define GL_LINEARBURN_NV /;"	d
GL_LINEARDODGE_NV	glext.h	/^#define GL_LINEARDODGE_NV /;"	d
GL_LINEARLIGHT_NV	glext.h	/^#define GL_LINEARLIGHT_NV /;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	glext.h	/^#define GL_LINEAR_CLIPMAP_LINEAR_SGIX /;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	glext.h	/^#define GL_LINEAR_CLIPMAP_NEAREST_SGIX /;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	glext.h	/^#define GL_LINEAR_DETAIL_ALPHA_SGIS /;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	glext.h	/^#define GL_LINEAR_DETAIL_COLOR_SGIS /;"	d
GL_LINEAR_DETAIL_SGIS	glext.h	/^#define GL_LINEAR_DETAIL_SGIS /;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	glext.h	/^#define GL_LINEAR_SHARPEN_ALPHA_SGIS /;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	glext.h	/^#define GL_LINEAR_SHARPEN_COLOR_SGIS /;"	d
GL_LINEAR_SHARPEN_SGIS	glext.h	/^#define GL_LINEAR_SHARPEN_SGIS /;"	d
GL_LINES_ADJACENCY	glext.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINES_ADJACENCY_ARB	glext.h	/^#define GL_LINES_ADJACENCY_ARB /;"	d
GL_LINES_ADJACENCY_EXT	glext.h	/^#define GL_LINES_ADJACENCY_EXT /;"	d
GL_LINE_STRIP_ADJACENCY	glext.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_STRIP_ADJACENCY_ARB	glext.h	/^#define GL_LINE_STRIP_ADJACENCY_ARB /;"	d
GL_LINE_STRIP_ADJACENCY_EXT	glext.h	/^#define GL_LINE_STRIP_ADJACENCY_EXT /;"	d
GL_LINE_TO_NV	glext.h	/^#define GL_LINE_TO_NV /;"	d
GL_LINK_STATUS	glext.h	/^#define GL_LINK_STATUS /;"	d
GL_LIST_PRIORITY_SGIX	glext.h	/^#define GL_LIST_PRIORITY_SGIX /;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	glext.h	/^#define GL_LOCAL_CONSTANT_DATATYPE_EXT /;"	d
GL_LOCAL_CONSTANT_EXT	glext.h	/^#define GL_LOCAL_CONSTANT_EXT /;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	glext.h	/^#define GL_LOCAL_CONSTANT_VALUE_EXT /;"	d
GL_LOCAL_EXT	glext.h	/^#define GL_LOCAL_EXT /;"	d
GL_LOCATION	glext.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_COMPONENT	glext.h	/^#define GL_LOCATION_COMPONENT /;"	d
GL_LOCATION_INDEX	glext.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	glext.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOWER_LEFT	glext.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOW_FLOAT	glext.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	glext.h	/^#define GL_LOW_INT /;"	d
GL_LO_BIAS_NV	glext.h	/^#define GL_LO_BIAS_NV /;"	d
GL_LO_SCALE_NV	glext.h	/^#define GL_LO_SCALE_NV /;"	d
GL_LUMINANCE12_ALPHA12_EXT	glext.h	/^#define GL_LUMINANCE12_ALPHA12_EXT /;"	d
GL_LUMINANCE12_ALPHA4_EXT	glext.h	/^#define GL_LUMINANCE12_ALPHA4_EXT /;"	d
GL_LUMINANCE12_EXT	glext.h	/^#define GL_LUMINANCE12_EXT /;"	d
GL_LUMINANCE16F_ARB	glext.h	/^#define GL_LUMINANCE16F_ARB /;"	d
GL_LUMINANCE16I_EXT	glext.h	/^#define GL_LUMINANCE16I_EXT /;"	d
GL_LUMINANCE16UI_EXT	glext.h	/^#define GL_LUMINANCE16UI_EXT /;"	d
GL_LUMINANCE16_ALPHA16_EXT	glext.h	/^#define GL_LUMINANCE16_ALPHA16_EXT /;"	d
GL_LUMINANCE16_ALPHA16_SNORM	glext.h	/^#define GL_LUMINANCE16_ALPHA16_SNORM /;"	d
GL_LUMINANCE16_EXT	glext.h	/^#define GL_LUMINANCE16_EXT /;"	d
GL_LUMINANCE16_SNORM	glext.h	/^#define GL_LUMINANCE16_SNORM /;"	d
GL_LUMINANCE32F_ARB	glext.h	/^#define GL_LUMINANCE32F_ARB /;"	d
GL_LUMINANCE32I_EXT	glext.h	/^#define GL_LUMINANCE32I_EXT /;"	d
GL_LUMINANCE32UI_EXT	glext.h	/^#define GL_LUMINANCE32UI_EXT /;"	d
GL_LUMINANCE4_ALPHA4_EXT	glext.h	/^#define GL_LUMINANCE4_ALPHA4_EXT /;"	d
GL_LUMINANCE4_EXT	glext.h	/^#define GL_LUMINANCE4_EXT /;"	d
GL_LUMINANCE6_ALPHA2_EXT	glext.h	/^#define GL_LUMINANCE6_ALPHA2_EXT /;"	d
GL_LUMINANCE8I_EXT	glext.h	/^#define GL_LUMINANCE8I_EXT /;"	d
GL_LUMINANCE8UI_EXT	glext.h	/^#define GL_LUMINANCE8UI_EXT /;"	d
GL_LUMINANCE8_ALPHA8_EXT	glext.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_ALPHA8_SNORM	glext.h	/^#define GL_LUMINANCE8_ALPHA8_SNORM /;"	d
GL_LUMINANCE8_EXT	glext.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE8_SNORM	glext.h	/^#define GL_LUMINANCE8_SNORM /;"	d
GL_LUMINANCE_ALPHA16F_ARB	glext.h	/^#define GL_LUMINANCE_ALPHA16F_ARB /;"	d
GL_LUMINANCE_ALPHA16I_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA16I_EXT /;"	d
GL_LUMINANCE_ALPHA16UI_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA16UI_EXT /;"	d
GL_LUMINANCE_ALPHA32F_ARB	glext.h	/^#define GL_LUMINANCE_ALPHA32F_ARB /;"	d
GL_LUMINANCE_ALPHA32I_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA32I_EXT /;"	d
GL_LUMINANCE_ALPHA32UI_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA32UI_EXT /;"	d
GL_LUMINANCE_ALPHA8I_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA8I_EXT /;"	d
GL_LUMINANCE_ALPHA8UI_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA8UI_EXT /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_ATI /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_ATI /;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA_INTEGER_EXT /;"	d
GL_LUMINANCE_ALPHA_SNORM	glext.h	/^#define GL_LUMINANCE_ALPHA_SNORM /;"	d
GL_LUMINANCE_FLOAT16_APPLE	glext.h	/^#define GL_LUMINANCE_FLOAT16_APPLE /;"	d
GL_LUMINANCE_FLOAT16_ATI	glext.h	/^#define GL_LUMINANCE_FLOAT16_ATI /;"	d
GL_LUMINANCE_FLOAT32_APPLE	glext.h	/^#define GL_LUMINANCE_FLOAT32_APPLE /;"	d
GL_LUMINANCE_FLOAT32_ATI	glext.h	/^#define GL_LUMINANCE_FLOAT32_ATI /;"	d
GL_LUMINANCE_INTEGER_EXT	glext.h	/^#define GL_LUMINANCE_INTEGER_EXT /;"	d
GL_LUMINANCE_SNORM	glext.h	/^#define GL_LUMINANCE_SNORM /;"	d
GL_MAD_ATI	glext.h	/^#define GL_MAD_ATI /;"	d
GL_MAGNITUDE_BIAS_NV	glext.h	/^#define GL_MAGNITUDE_BIAS_NV /;"	d
GL_MAGNITUDE_SCALE_NV	glext.h	/^#define GL_MAGNITUDE_SCALE_NV /;"	d
GL_MAJOR_VERSION	glext.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MANUAL_GENERATE_MIPMAP	glext.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP1_BINORMAL_EXT	glext.h	/^#define GL_MAP1_BINORMAL_EXT /;"	d
GL_MAP1_TANGENT_EXT	glext.h	/^#define GL_MAP1_TANGENT_EXT /;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP2_BINORMAL_EXT	glext.h	/^#define GL_MAP2_BINORMAL_EXT /;"	d
GL_MAP2_TANGENT_EXT	glext.h	/^#define GL_MAP2_TANGENT_EXT /;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP_ATTRIB_U_ORDER_NV	glext.h	/^#define GL_MAP_ATTRIB_U_ORDER_NV /;"	d
GL_MAP_ATTRIB_V_ORDER_NV	glext.h	/^#define GL_MAP_ATTRIB_V_ORDER_NV /;"	d
GL_MAP_COHERENT_BIT	glext.h	/^#define GL_MAP_COHERENT_BIT /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	glext.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	glext.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	glext.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_PERSISTENT_BIT	glext.h	/^#define GL_MAP_PERSISTENT_BIT /;"	d
GL_MAP_READ_BIT	glext.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_TESSELLATION_NV	glext.h	/^#define GL_MAP_TESSELLATION_NV /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	glext.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	glext.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MATERIAL_SIDE_HINT_PGI	glext.h	/^#define GL_MATERIAL_SIDE_HINT_PGI /;"	d
GL_MATRIX0_ARB	glext.h	/^#define GL_MATRIX0_ARB /;"	d
GL_MATRIX0_NV	glext.h	/^#define GL_MATRIX0_NV /;"	d
GL_MATRIX10_ARB	glext.h	/^#define GL_MATRIX10_ARB /;"	d
GL_MATRIX11_ARB	glext.h	/^#define GL_MATRIX11_ARB /;"	d
GL_MATRIX12_ARB	glext.h	/^#define GL_MATRIX12_ARB /;"	d
GL_MATRIX13_ARB	glext.h	/^#define GL_MATRIX13_ARB /;"	d
GL_MATRIX14_ARB	glext.h	/^#define GL_MATRIX14_ARB /;"	d
GL_MATRIX15_ARB	glext.h	/^#define GL_MATRIX15_ARB /;"	d
GL_MATRIX16_ARB	glext.h	/^#define GL_MATRIX16_ARB /;"	d
GL_MATRIX17_ARB	glext.h	/^#define GL_MATRIX17_ARB /;"	d
GL_MATRIX18_ARB	glext.h	/^#define GL_MATRIX18_ARB /;"	d
GL_MATRIX19_ARB	glext.h	/^#define GL_MATRIX19_ARB /;"	d
GL_MATRIX1_ARB	glext.h	/^#define GL_MATRIX1_ARB /;"	d
GL_MATRIX1_NV	glext.h	/^#define GL_MATRIX1_NV /;"	d
GL_MATRIX20_ARB	glext.h	/^#define GL_MATRIX20_ARB /;"	d
GL_MATRIX21_ARB	glext.h	/^#define GL_MATRIX21_ARB /;"	d
GL_MATRIX22_ARB	glext.h	/^#define GL_MATRIX22_ARB /;"	d
GL_MATRIX23_ARB	glext.h	/^#define GL_MATRIX23_ARB /;"	d
GL_MATRIX24_ARB	glext.h	/^#define GL_MATRIX24_ARB /;"	d
GL_MATRIX25_ARB	glext.h	/^#define GL_MATRIX25_ARB /;"	d
GL_MATRIX26_ARB	glext.h	/^#define GL_MATRIX26_ARB /;"	d
GL_MATRIX27_ARB	glext.h	/^#define GL_MATRIX27_ARB /;"	d
GL_MATRIX28_ARB	glext.h	/^#define GL_MATRIX28_ARB /;"	d
GL_MATRIX29_ARB	glext.h	/^#define GL_MATRIX29_ARB /;"	d
GL_MATRIX2_ARB	glext.h	/^#define GL_MATRIX2_ARB /;"	d
GL_MATRIX2_NV	glext.h	/^#define GL_MATRIX2_NV /;"	d
GL_MATRIX30_ARB	glext.h	/^#define GL_MATRIX30_ARB /;"	d
GL_MATRIX31_ARB	glext.h	/^#define GL_MATRIX31_ARB /;"	d
GL_MATRIX3_ARB	glext.h	/^#define GL_MATRIX3_ARB /;"	d
GL_MATRIX3_NV	glext.h	/^#define GL_MATRIX3_NV /;"	d
GL_MATRIX4_ARB	glext.h	/^#define GL_MATRIX4_ARB /;"	d
GL_MATRIX4_NV	glext.h	/^#define GL_MATRIX4_NV /;"	d
GL_MATRIX5_ARB	glext.h	/^#define GL_MATRIX5_ARB /;"	d
GL_MATRIX5_NV	glext.h	/^#define GL_MATRIX5_NV /;"	d
GL_MATRIX6_ARB	glext.h	/^#define GL_MATRIX6_ARB /;"	d
GL_MATRIX6_NV	glext.h	/^#define GL_MATRIX6_NV /;"	d
GL_MATRIX7_ARB	glext.h	/^#define GL_MATRIX7_ARB /;"	d
GL_MATRIX7_NV	glext.h	/^#define GL_MATRIX7_NV /;"	d
GL_MATRIX8_ARB	glext.h	/^#define GL_MATRIX8_ARB /;"	d
GL_MATRIX9_ARB	glext.h	/^#define GL_MATRIX9_ARB /;"	d
GL_MATRIX_EXT	glext.h	/^#define GL_MATRIX_EXT /;"	d
GL_MATRIX_INDEX_ARRAY_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB /;"	d
GL_MATRIX_PALETTE_ARB	glext.h	/^#define GL_MATRIX_PALETTE_ARB /;"	d
GL_MATRIX_STRIDE	glext.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	glext.h	/^#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI /;"	d
GL_MAT_AMBIENT_BIT_PGI	glext.h	/^#define GL_MAT_AMBIENT_BIT_PGI /;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	glext.h	/^#define GL_MAT_COLOR_INDEXES_BIT_PGI /;"	d
GL_MAT_DIFFUSE_BIT_PGI	glext.h	/^#define GL_MAT_DIFFUSE_BIT_PGI /;"	d
GL_MAT_EMISSION_BIT_PGI	glext.h	/^#define GL_MAT_EMISSION_BIT_PGI /;"	d
GL_MAT_SHININESS_BIT_PGI	glext.h	/^#define GL_MAT_SHININESS_BIT_PGI /;"	d
GL_MAT_SPECULAR_BIT_PGI	glext.h	/^#define GL_MAT_SPECULAR_BIT_PGI /;"	d
GL_MAX	glext.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE_EXT /;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	glext.h	/^#define GL_MAX_4D_TEXTURE_SIZE_SGIS /;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	glext.h	/^#define GL_MAX_ACTIVE_LIGHTS_SGIX /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT /;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	glext.h	/^#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	glext.h	/^#define GL_MAX_ASYNC_HISTOGRAM_SGIX /;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	glext.h	/^#define GL_MAX_ASYNC_READ_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	glext.h	/^#define GL_MAX_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	glext.h	/^#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT /;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	glext.h	/^#define GL_MAX_CLIPMAP_DEPTH_SGIX /;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	glext.h	/^#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_MAX_CLIP_DISTANCES	glext.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_COLOR_ATTACHMENTS	glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	glext.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	glext.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	glext.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	glext.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CONVOLUTION_HEIGHT	glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT /;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT_EXT /;"	d
GL_MAX_CONVOLUTION_WIDTH	glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH /;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH_EXT /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	glext.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV	glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV /;"	d
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV	glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV /;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	glext.h	/^#define GL_MAX_DEFORMATION_ORDER_SGIX /;"	d
GL_MAX_DEPTH	glext.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	glext.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	glext.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_BUFFERS_ARB	glext.h	/^#define GL_MAX_DRAW_BUFFERS_ARB /;"	d
GL_MAX_DRAW_BUFFERS_ATI	glext.h	/^#define GL_MAX_DRAW_BUFFERS_ATI /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	glext.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	glext.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_INDICES_EXT	glext.h	/^#define GL_MAX_ELEMENTS_INDICES_EXT /;"	d
GL_MAX_ELEMENTS_VERTICES	glext.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	glext.h	/^#define GL_MAX_ELEMENTS_VERTICES_EXT /;"	d
GL_MAX_ELEMENT_INDEX	glext.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_EXT	glext.h	/^#define GL_MAX_EXT /;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	glext.h	/^#define GL_MAX_FOG_FUNC_POINTS_SGIS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	glext.h	/^#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	glext.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	glext.h	/^#define GL_MAX_FRAGMENT_LIGHTS_SGIX /;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	glext.h	/^#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	glext.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	glext.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	glext.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	glext.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	glext.h	/^#define GL_MAX_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_MAX_GENERAL_COMBINERS_NV	glext.h	/^#define GL_MAX_GENERAL_COMBINERS_NV /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	glext.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT /;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	glext.h	/^#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	glext.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_HEIGHT	glext.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	glext.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_SAMPLES_EXT	glext.h	/^#define GL_MAX_IMAGE_SAMPLES_EXT /;"	d
GL_MAX_IMAGE_UNITS	glext.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_IMAGE_UNITS_EXT	glext.h	/^#define GL_MAX_IMAGE_UNITS_EXT /;"	d
GL_MAX_INTEGER_SAMPLES	glext.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_LABEL_LENGTH	glext.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LAYERS	glext.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_MAP_TESSELLATION_NV	glext.h	/^#define GL_MAX_MAP_TESSELLATION_NV /;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	glext.h	/^#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB /;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	glext.h	/^#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MAX_NAME_LENGTH	glext.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	glext.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	glext.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_PALETTE_MATRICES_ARB	glext.h	/^#define GL_MAX_PALETTE_MATRICES_ARB /;"	d
GL_MAX_PATCH_VERTICES	glext.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	glext.h	/^#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	glext.h	/^#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	glext.h	/^#define GL_MAX_PROGRAM_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	glext.h	/^#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	glext.h	/^#define GL_MAX_PROGRAM_CALL_DEPTH_NV /;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	glext.h	/^#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	glext.h	/^#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	glext.h	/^#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV /;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	glext.h	/^#define GL_MAX_PROGRAM_IF_DEPTH_NV /;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	glext.h	/^#define GL_MAX_PROGRAM_LOOP_COUNT_NV /;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	glext.h	/^#define GL_MAX_PROGRAM_LOOP_DEPTH_NV /;"	d
GL_MAX_PROGRAM_MATRICES_ARB	glext.h	/^#define GL_MAX_PROGRAM_MATRICES_ARB /;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	glext.h	/^#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	glext.h	/^#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV /;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV /;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	glext.h	/^#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	glext.h	/^#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV	glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV /;"	d
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV	glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV /;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT	glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	glext.h	/^#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV /;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	glext.h	/^#define GL_MAX_RATIONAL_EVAL_ORDER_NV /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV /;"	d
GL_MAX_RENDERBUFFER_SIZE	glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE_EXT /;"	d
GL_MAX_SAMPLES	glext.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLES_EXT	glext.h	/^#define GL_MAX_SAMPLES_EXT /;"	d
GL_MAX_SAMPLE_MASK_WORDS	glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS_NV /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	glext.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	glext.h	/^#define GL_MAX_SHADER_BUFFER_ADDRESS_NV /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	glext.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	glext.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SHININESS_NV	glext.h	/^#define GL_MAX_SHININESS_NV /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPOT_EXPONENT_NV	glext.h	/^#define GL_MAX_SPOT_EXPONENT_NV /;"	d
GL_MAX_SUBROUTINES	glext.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	glext.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_GEN_LEVEL	glext.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	glext.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT /;"	d
GL_MAX_TEXTURE_COORDS	glext.h	/^#define GL_MAX_TEXTURE_COORDS /;"	d
GL_MAX_TEXTURE_COORDS_ARB	glext.h	/^#define GL_MAX_TEXTURE_COORDS_ARB /;"	d
GL_MAX_TEXTURE_COORDS_NV	glext.h	/^#define GL_MAX_TEXTURE_COORDS_NV /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TEXTURE_LOD_BIAS	glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS_EXT /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	glext.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_UNITS	glext.h	/^#define GL_MAX_TEXTURE_UNITS /;"	d
GL_MAX_TEXTURE_UNITS_ARB	glext.h	/^#define GL_MAX_TEXTURE_UNITS_ARB /;"	d
GL_MAX_TRACK_MATRICES_NV	glext.h	/^#define GL_MAX_TRACK_MATRICES_NV /;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	glext.h	/^#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	glext.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	glext.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	glext.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	glext.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_COMPONENTS_EXT	glext.h	/^#define GL_MAX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VARYING_FLOATS	glext.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_FLOATS_ARB	glext.h	/^#define GL_MAX_VARYING_FLOATS_ARB /;"	d
GL_MAX_VARYING_VECTORS	glext.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	glext.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	glext.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	glext.h	/^#define GL_MAX_VERTEX_ATTRIBS_ARB /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	glext.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	glext.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	glext.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	glext.h	/^#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_VERTEX_HINT_PGI	glext.h	/^#define GL_MAX_VERTEX_HINT_PGI /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_VERTEX_STREAMS	glext.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_STREAMS_ATI	glext.h	/^#define GL_MAX_VERTEX_STREAMS_ATI /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	glext.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_UNITS_ARB	glext.h	/^#define GL_MAX_VERTEX_UNITS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VIEWPORTS	glext.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_WIDTH	glext.h	/^#define GL_MAX_WIDTH /;"	d
GL_MEDIUM_FLOAT	glext.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	glext.h	/^#define GL_MEDIUM_INT /;"	d
GL_MESAX_texture_stack	glext.h	/^#define GL_MESAX_texture_stack /;"	d
GL_MESA_pack_invert	glext.h	/^#define GL_MESA_pack_invert /;"	d
GL_MESA_resize_buffers	glext.h	/^#define GL_MESA_resize_buffers /;"	d
GL_MESA_window_pos	glext.h	/^#define GL_MESA_window_pos /;"	d
GL_MESA_ycbcr_texture	glext.h	/^#define GL_MESA_ycbcr_texture /;"	d
GL_MIN	glext.h	/^#define GL_MIN /;"	d
GL_MINMAX	glext.h	/^#define GL_MINMAX /;"	d
GL_MINMAX_EXT	glext.h	/^#define GL_MINMAX_EXT /;"	d
GL_MINMAX_FORMAT	glext.h	/^#define GL_MINMAX_FORMAT /;"	d
GL_MINMAX_FORMAT_EXT	glext.h	/^#define GL_MINMAX_FORMAT_EXT /;"	d
GL_MINMAX_SINK	glext.h	/^#define GL_MINMAX_SINK /;"	d
GL_MINMAX_SINK_EXT	glext.h	/^#define GL_MINMAX_SINK_EXT /;"	d
GL_MINOR_VERSION	glext.h	/^#define GL_MINOR_VERSION /;"	d
GL_MINUS_CLAMPED_NV	glext.h	/^#define GL_MINUS_CLAMPED_NV /;"	d
GL_MINUS_NV	glext.h	/^#define GL_MINUS_NV /;"	d
GL_MIN_EXT	glext.h	/^#define GL_MIN_EXT /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MIN_LOD_WARNING_AMD	glext.h	/^#define GL_MIN_LOD_WARNING_AMD /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	glext.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT	glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIN_SPARSE_LEVEL_AMD	glext.h	/^#define GL_MIN_SPARSE_LEVEL_AMD /;"	d
GL_MIN_SPARSE_LEVEL_ARB	glext.h	/^#define GL_MIN_SPARSE_LEVEL_ARB /;"	d
GL_MIPMAP	glext.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	glext.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT_ARB	glext.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	d
GL_MIRRORED_REPEAT_IBM	glext.h	/^#define GL_MIRRORED_REPEAT_IBM /;"	d
GL_MIRROR_CLAMP_ATI	glext.h	/^#define GL_MIRROR_CLAMP_ATI /;"	d
GL_MIRROR_CLAMP_EXT	glext.h	/^#define GL_MIRROR_CLAMP_EXT /;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	glext.h	/^#define GL_MIRROR_CLAMP_TO_BORDER_EXT /;"	d
GL_MIRROR_CLAMP_TO_EDGE	glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_ATI /;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_EXT /;"	d
GL_MITER_REVERT_NV	glext.h	/^#define GL_MITER_REVERT_NV /;"	d
GL_MITER_TRUNCATE_NV	glext.h	/^#define GL_MITER_TRUNCATE_NV /;"	d
GL_MODELVIEW0_ARB	glext.h	/^#define GL_MODELVIEW0_ARB /;"	d
GL_MODELVIEW0_EXT	glext.h	/^#define GL_MODELVIEW0_EXT /;"	d
GL_MODELVIEW0_MATRIX_EXT	glext.h	/^#define GL_MODELVIEW0_MATRIX_EXT /;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	glext.h	/^#define GL_MODELVIEW0_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW10_ARB	glext.h	/^#define GL_MODELVIEW10_ARB /;"	d
GL_MODELVIEW11_ARB	glext.h	/^#define GL_MODELVIEW11_ARB /;"	d
GL_MODELVIEW12_ARB	glext.h	/^#define GL_MODELVIEW12_ARB /;"	d
GL_MODELVIEW13_ARB	glext.h	/^#define GL_MODELVIEW13_ARB /;"	d
GL_MODELVIEW14_ARB	glext.h	/^#define GL_MODELVIEW14_ARB /;"	d
GL_MODELVIEW15_ARB	glext.h	/^#define GL_MODELVIEW15_ARB /;"	d
GL_MODELVIEW16_ARB	glext.h	/^#define GL_MODELVIEW16_ARB /;"	d
GL_MODELVIEW17_ARB	glext.h	/^#define GL_MODELVIEW17_ARB /;"	d
GL_MODELVIEW18_ARB	glext.h	/^#define GL_MODELVIEW18_ARB /;"	d
GL_MODELVIEW19_ARB	glext.h	/^#define GL_MODELVIEW19_ARB /;"	d
GL_MODELVIEW1_ARB	glext.h	/^#define GL_MODELVIEW1_ARB /;"	d
GL_MODELVIEW1_EXT	glext.h	/^#define GL_MODELVIEW1_EXT /;"	d
GL_MODELVIEW1_MATRIX_EXT	glext.h	/^#define GL_MODELVIEW1_MATRIX_EXT /;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	glext.h	/^#define GL_MODELVIEW1_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW20_ARB	glext.h	/^#define GL_MODELVIEW20_ARB /;"	d
GL_MODELVIEW21_ARB	glext.h	/^#define GL_MODELVIEW21_ARB /;"	d
GL_MODELVIEW22_ARB	glext.h	/^#define GL_MODELVIEW22_ARB /;"	d
GL_MODELVIEW23_ARB	glext.h	/^#define GL_MODELVIEW23_ARB /;"	d
GL_MODELVIEW24_ARB	glext.h	/^#define GL_MODELVIEW24_ARB /;"	d
GL_MODELVIEW25_ARB	glext.h	/^#define GL_MODELVIEW25_ARB /;"	d
GL_MODELVIEW26_ARB	glext.h	/^#define GL_MODELVIEW26_ARB /;"	d
GL_MODELVIEW27_ARB	glext.h	/^#define GL_MODELVIEW27_ARB /;"	d
GL_MODELVIEW28_ARB	glext.h	/^#define GL_MODELVIEW28_ARB /;"	d
GL_MODELVIEW29_ARB	glext.h	/^#define GL_MODELVIEW29_ARB /;"	d
GL_MODELVIEW2_ARB	glext.h	/^#define GL_MODELVIEW2_ARB /;"	d
GL_MODELVIEW30_ARB	glext.h	/^#define GL_MODELVIEW30_ARB /;"	d
GL_MODELVIEW31_ARB	glext.h	/^#define GL_MODELVIEW31_ARB /;"	d
GL_MODELVIEW3_ARB	glext.h	/^#define GL_MODELVIEW3_ARB /;"	d
GL_MODELVIEW4_ARB	glext.h	/^#define GL_MODELVIEW4_ARB /;"	d
GL_MODELVIEW5_ARB	glext.h	/^#define GL_MODELVIEW5_ARB /;"	d
GL_MODELVIEW6_ARB	glext.h	/^#define GL_MODELVIEW6_ARB /;"	d
GL_MODELVIEW7_ARB	glext.h	/^#define GL_MODELVIEW7_ARB /;"	d
GL_MODELVIEW8_ARB	glext.h	/^#define GL_MODELVIEW8_ARB /;"	d
GL_MODELVIEW9_ARB	glext.h	/^#define GL_MODELVIEW9_ARB /;"	d
GL_MODELVIEW_PROJECTION_NV	glext.h	/^#define GL_MODELVIEW_PROJECTION_NV /;"	d
GL_MODULATE_ADD_ATI	glext.h	/^#define GL_MODULATE_ADD_ATI /;"	d
GL_MODULATE_SIGNED_ADD_ATI	glext.h	/^#define GL_MODULATE_SIGNED_ADD_ATI /;"	d
GL_MODULATE_SUBTRACT_ATI	glext.h	/^#define GL_MODULATE_SUBTRACT_ATI /;"	d
GL_MOVE_TO_CONTINUES_NV	glext.h	/^#define GL_MOVE_TO_CONTINUES_NV /;"	d
GL_MOVE_TO_NV	glext.h	/^#define GL_MOVE_TO_NV /;"	d
GL_MOVE_TO_RESETS_NV	glext.h	/^#define GL_MOVE_TO_RESETS_NV /;"	d
GL_MOV_ATI	glext.h	/^#define GL_MOV_ATI /;"	d
GL_MULTIPLY_NV	glext.h	/^#define GL_MULTIPLY_NV /;"	d
GL_MULTISAMPLE	glext.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLE_3DFX	glext.h	/^#define GL_MULTISAMPLE_3DFX /;"	d
GL_MULTISAMPLE_ARB	glext.h	/^#define GL_MULTISAMPLE_ARB /;"	d
GL_MULTISAMPLE_BIT	glext.h	/^#define GL_MULTISAMPLE_BIT /;"	d
GL_MULTISAMPLE_BIT_3DFX	glext.h	/^#define GL_MULTISAMPLE_BIT_3DFX /;"	d
GL_MULTISAMPLE_BIT_ARB	glext.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	d
GL_MULTISAMPLE_BIT_EXT	glext.h	/^#define GL_MULTISAMPLE_BIT_EXT /;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	glext.h	/^#define GL_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MULTISAMPLE_EXT	glext.h	/^#define GL_MULTISAMPLE_EXT /;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	glext.h	/^#define GL_MULTISAMPLE_FILTER_HINT_NV /;"	d
GL_MULTISAMPLE_SGIS	glext.h	/^#define GL_MULTISAMPLE_SGIS /;"	d
GL_MUL_ATI	glext.h	/^#define GL_MUL_ATI /;"	d
GL_MVP_MATRIX_EXT	glext.h	/^#define GL_MVP_MATRIX_EXT /;"	d
GL_NAMED_STRING_LENGTH_ARB	glext.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	glext.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	glext.h	/^#define GL_NAME_LENGTH /;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	glext.h	/^#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	glext.h	/^#define GL_NATIVE_GRAPHICS_END_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	glext.h	/^#define GL_NATIVE_GRAPHICS_HANDLE_PGI /;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	glext.h	/^#define GL_NEAREST_CLIPMAP_LINEAR_SGIX /;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	glext.h	/^#define GL_NEAREST_CLIPMAP_NEAREST_SGIX /;"	d
GL_NEGATE_BIT_ATI	glext.h	/^#define GL_NEGATE_BIT_ATI /;"	d
GL_NEGATIVE_ONE_EXT	glext.h	/^#define GL_NEGATIVE_ONE_EXT /;"	d
GL_NEGATIVE_W_EXT	glext.h	/^#define GL_NEGATIVE_W_EXT /;"	d
GL_NEGATIVE_X_EXT	glext.h	/^#define GL_NEGATIVE_X_EXT /;"	d
GL_NEGATIVE_Y_EXT	glext.h	/^#define GL_NEGATIVE_Y_EXT /;"	d
GL_NEGATIVE_Z_EXT	glext.h	/^#define GL_NEGATIVE_Z_EXT /;"	d
GL_NEXT_BUFFER_NV	glext.h	/^#define GL_NEXT_BUFFER_NV /;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	glext.h	/^#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV /;"	d
GL_NORMALIZED_RANGE_EXT	glext.h	/^#define GL_NORMALIZED_RANGE_EXT /;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	glext.h	/^#define GL_NORMAL_ARRAY_ADDRESS_NV /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_NORMAL_ARRAY_COUNT_EXT	glext.h	/^#define GL_NORMAL_ARRAY_COUNT_EXT /;"	d
GL_NORMAL_ARRAY_EXT	glext.h	/^#define GL_NORMAL_ARRAY_EXT /;"	d
GL_NORMAL_ARRAY_LENGTH_NV	glext.h	/^#define GL_NORMAL_ARRAY_LENGTH_NV /;"	d
GL_NORMAL_ARRAY_LIST_IBM	glext.h	/^#define GL_NORMAL_ARRAY_LIST_IBM /;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM /;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	glext.h	/^#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_NORMAL_ARRAY_POINTER_EXT	glext.h	/^#define GL_NORMAL_ARRAY_POINTER_EXT /;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	glext.h	/^#define GL_NORMAL_ARRAY_STRIDE_EXT /;"	d
GL_NORMAL_ARRAY_TYPE_EXT	glext.h	/^#define GL_NORMAL_ARRAY_TYPE_EXT /;"	d
GL_NORMAL_BIT_PGI	glext.h	/^#define GL_NORMAL_BIT_PGI /;"	d
GL_NORMAL_MAP	glext.h	/^#define GL_NORMAL_MAP /;"	d
GL_NORMAL_MAP_ARB	glext.h	/^#define GL_NORMAL_MAP_ARB /;"	d
GL_NORMAL_MAP_EXT	glext.h	/^#define GL_NORMAL_MAP_EXT /;"	d
GL_NORMAL_MAP_NV	glext.h	/^#define GL_NORMAL_MAP_NV /;"	d
GL_NO_RESET_NOTIFICATION_ARB	glext.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NUM_ACTIVE_VARIABLES	glext.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	glext.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_NUM_EXTENSIONS	glext.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_FILL_STREAMS_NV	glext.h	/^#define GL_NUM_FILL_STREAMS_NV /;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	glext.h	/^#define GL_NUM_FRAGMENT_CONSTANTS_ATI /;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	glext.h	/^#define GL_NUM_FRAGMENT_REGISTERS_ATI /;"	d
GL_NUM_GENERAL_COMBINERS_NV	glext.h	/^#define GL_NUM_GENERAL_COMBINERS_NV /;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	glext.h	/^#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI /;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	glext.h	/^#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI /;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	glext.h	/^#define GL_NUM_INSTRUCTIONS_TOTAL_ATI /;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	glext.h	/^#define GL_NUM_LOOPBACK_COMPONENTS_ATI /;"	d
GL_NUM_PASSES_ATI	glext.h	/^#define GL_NUM_PASSES_ATI /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	glext.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_SAMPLE_COUNTS	glext.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	glext.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	glext.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	glext.h	/^#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	glext.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	d
GL_NVX_conditional_render	glext.h	/^#define GL_NVX_conditional_render /;"	d
GL_NV_bindless_multi_draw_indirect	glext.h	/^#define GL_NV_bindless_multi_draw_indirect /;"	d
GL_NV_bindless_texture	glext.h	/^#define GL_NV_bindless_texture /;"	d
GL_NV_blend_equation_advanced	glext.h	/^#define GL_NV_blend_equation_advanced /;"	d
GL_NV_blend_equation_advanced_coherent	glext.h	/^#define GL_NV_blend_equation_advanced_coherent /;"	d
GL_NV_blend_square	glext.h	/^#define GL_NV_blend_square /;"	d
GL_NV_compute_program5	glext.h	/^#define GL_NV_compute_program5 /;"	d
GL_NV_conditional_render	glext.h	/^#define GL_NV_conditional_render /;"	d
GL_NV_copy_depth_to_color	glext.h	/^#define GL_NV_copy_depth_to_color /;"	d
GL_NV_copy_image	glext.h	/^#define GL_NV_copy_image /;"	d
GL_NV_deep_texture3D	glext.h	/^#define GL_NV_deep_texture3D /;"	d
GL_NV_depth_buffer_float	glext.h	/^#define GL_NV_depth_buffer_float /;"	d
GL_NV_depth_clamp	glext.h	/^#define GL_NV_depth_clamp /;"	d
GL_NV_draw_texture	glext.h	/^#define GL_NV_draw_texture /;"	d
GL_NV_evaluators	glext.h	/^#define GL_NV_evaluators /;"	d
GL_NV_explicit_multisample	glext.h	/^#define GL_NV_explicit_multisample /;"	d
GL_NV_fence	glext.h	/^#define GL_NV_fence /;"	d
GL_NV_float_buffer	glext.h	/^#define GL_NV_float_buffer /;"	d
GL_NV_fog_distance	glext.h	/^#define GL_NV_fog_distance /;"	d
GL_NV_fragment_program	glext.h	/^#define GL_NV_fragment_program /;"	d
GL_NV_fragment_program2	glext.h	/^#define GL_NV_fragment_program2 /;"	d
GL_NV_fragment_program4	glext.h	/^#define GL_NV_fragment_program4 /;"	d
GL_NV_fragment_program_option	glext.h	/^#define GL_NV_fragment_program_option /;"	d
GL_NV_framebuffer_multisample_coverage	glext.h	/^#define GL_NV_framebuffer_multisample_coverage /;"	d
GL_NV_geometry_program4	glext.h	/^#define GL_NV_geometry_program4 /;"	d
GL_NV_geometry_shader4	glext.h	/^#define GL_NV_geometry_shader4 /;"	d
GL_NV_gpu_program4	glext.h	/^#define GL_NV_gpu_program4 /;"	d
GL_NV_gpu_program5	glext.h	/^#define GL_NV_gpu_program5 /;"	d
GL_NV_gpu_program5_mem_extended	glext.h	/^#define GL_NV_gpu_program5_mem_extended /;"	d
GL_NV_gpu_shader5	glext.h	/^#define GL_NV_gpu_shader5 /;"	d
GL_NV_half_float	glext.h	/^#define GL_NV_half_float /;"	d
GL_NV_light_max_exponent	glext.h	/^#define GL_NV_light_max_exponent /;"	d
GL_NV_multisample_coverage	glext.h	/^#define GL_NV_multisample_coverage /;"	d
GL_NV_multisample_filter_hint	glext.h	/^#define GL_NV_multisample_filter_hint /;"	d
GL_NV_occlusion_query	glext.h	/^#define GL_NV_occlusion_query /;"	d
GL_NV_packed_depth_stencil	glext.h	/^#define GL_NV_packed_depth_stencil /;"	d
GL_NV_parameter_buffer_object	glext.h	/^#define GL_NV_parameter_buffer_object /;"	d
GL_NV_parameter_buffer_object2	glext.h	/^#define GL_NV_parameter_buffer_object2 /;"	d
GL_NV_path_rendering	glext.h	/^#define GL_NV_path_rendering /;"	d
GL_NV_pixel_data_range	glext.h	/^#define GL_NV_pixel_data_range /;"	d
GL_NV_point_sprite	glext.h	/^#define GL_NV_point_sprite /;"	d
GL_NV_present_video	glext.h	/^#define GL_NV_present_video /;"	d
GL_NV_primitive_restart	glext.h	/^#define GL_NV_primitive_restart /;"	d
GL_NV_register_combiners	glext.h	/^#define GL_NV_register_combiners /;"	d
GL_NV_register_combiners2	glext.h	/^#define GL_NV_register_combiners2 /;"	d
GL_NV_shader_atomic_counters	glext.h	/^#define GL_NV_shader_atomic_counters /;"	d
GL_NV_shader_atomic_float	glext.h	/^#define GL_NV_shader_atomic_float /;"	d
GL_NV_shader_buffer_load	glext.h	/^#define GL_NV_shader_buffer_load /;"	d
GL_NV_shader_buffer_store	glext.h	/^#define GL_NV_shader_buffer_store /;"	d
GL_NV_shader_storage_buffer_object	glext.h	/^#define GL_NV_shader_storage_buffer_object /;"	d
GL_NV_tessellation_program5	glext.h	/^#define GL_NV_tessellation_program5 /;"	d
GL_NV_texgen_emboss	glext.h	/^#define GL_NV_texgen_emboss /;"	d
GL_NV_texgen_reflection	glext.h	/^#define GL_NV_texgen_reflection /;"	d
GL_NV_texture_barrier	glext.h	/^#define GL_NV_texture_barrier /;"	d
GL_NV_texture_compression_vtc	glext.h	/^#define GL_NV_texture_compression_vtc /;"	d
GL_NV_texture_env_combine4	glext.h	/^#define GL_NV_texture_env_combine4 /;"	d
GL_NV_texture_expand_normal	glext.h	/^#define GL_NV_texture_expand_normal /;"	d
GL_NV_texture_multisample	glext.h	/^#define GL_NV_texture_multisample /;"	d
GL_NV_texture_rectangle	glext.h	/^#define GL_NV_texture_rectangle /;"	d
GL_NV_texture_shader	glext.h	/^#define GL_NV_texture_shader /;"	d
GL_NV_texture_shader2	glext.h	/^#define GL_NV_texture_shader2 /;"	d
GL_NV_texture_shader3	glext.h	/^#define GL_NV_texture_shader3 /;"	d
GL_NV_transform_feedback	glext.h	/^#define GL_NV_transform_feedback /;"	d
GL_NV_transform_feedback2	glext.h	/^#define GL_NV_transform_feedback2 /;"	d
GL_NV_vdpau_interop	glext.h	/^#define GL_NV_vdpau_interop /;"	d
GL_NV_vertex_array_range	glext.h	/^#define GL_NV_vertex_array_range /;"	d
GL_NV_vertex_array_range2	glext.h	/^#define GL_NV_vertex_array_range2 /;"	d
GL_NV_vertex_attrib_integer_64bit	glext.h	/^#define GL_NV_vertex_attrib_integer_64bit /;"	d
GL_NV_vertex_buffer_unified_memory	glext.h	/^#define GL_NV_vertex_buffer_unified_memory /;"	d
GL_NV_vertex_program	glext.h	/^#define GL_NV_vertex_program /;"	d
GL_NV_vertex_program1_1	glext.h	/^#define GL_NV_vertex_program1_1 /;"	d
GL_NV_vertex_program2	glext.h	/^#define GL_NV_vertex_program2 /;"	d
GL_NV_vertex_program2_option	glext.h	/^#define GL_NV_vertex_program2_option /;"	d
GL_NV_vertex_program3	glext.h	/^#define GL_NV_vertex_program3 /;"	d
GL_NV_vertex_program4	glext.h	/^#define GL_NV_vertex_program4 /;"	d
GL_NV_video_capture	glext.h	/^#define GL_NV_video_capture /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORMS_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	glext.h	/^#define GL_OBJECT_ATTACHED_OBJECTS_ARB /;"	d
GL_OBJECT_BUFFER_SIZE_ATI	glext.h	/^#define GL_OBJECT_BUFFER_SIZE_ATI /;"	d
GL_OBJECT_BUFFER_USAGE_ATI	glext.h	/^#define GL_OBJECT_BUFFER_USAGE_ATI /;"	d
GL_OBJECT_COMPILE_STATUS_ARB	glext.h	/^#define GL_OBJECT_COMPILE_STATUS_ARB /;"	d
GL_OBJECT_DELETE_STATUS_ARB	glext.h	/^#define GL_OBJECT_DELETE_STATUS_ARB /;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	glext.h	/^#define GL_OBJECT_DISTANCE_TO_LINE_SGIS /;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	glext.h	/^#define GL_OBJECT_DISTANCE_TO_POINT_SGIS /;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	glext.h	/^#define GL_OBJECT_INFO_LOG_LENGTH_ARB /;"	d
GL_OBJECT_LINE_SGIS	glext.h	/^#define GL_OBJECT_LINE_SGIS /;"	d
GL_OBJECT_LINK_STATUS_ARB	glext.h	/^#define GL_OBJECT_LINK_STATUS_ARB /;"	d
GL_OBJECT_POINT_SGIS	glext.h	/^#define GL_OBJECT_POINT_SGIS /;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	glext.h	/^#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB /;"	d
GL_OBJECT_SUBTYPE_ARB	glext.h	/^#define GL_OBJECT_SUBTYPE_ARB /;"	d
GL_OBJECT_TYPE	glext.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OBJECT_TYPE_ARB	glext.h	/^#define GL_OBJECT_TYPE_ARB /;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	glext.h	/^#define GL_OBJECT_VALIDATE_STATUS_ARB /;"	d
GL_OCCLUSION_QUERY_EVENT_MASK_AMD	glext.h	/^#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD /;"	d
GL_OCCLUSION_TEST_HP	glext.h	/^#define GL_OCCLUSION_TEST_HP /;"	d
GL_OCCLUSION_TEST_RESULT_HP	glext.h	/^#define GL_OCCLUSION_TEST_RESULT_HP /;"	d
GL_OES_byte_coordinates	glext.h	/^#define GL_OES_byte_coordinates /;"	d
GL_OES_compressed_paletted_texture	glext.h	/^#define GL_OES_compressed_paletted_texture /;"	d
GL_OES_fixed_point	glext.h	/^#define GL_OES_fixed_point /;"	d
GL_OES_query_matrix	glext.h	/^#define GL_OES_query_matrix /;"	d
GL_OES_read_format	glext.h	/^#define GL_OES_read_format /;"	d
GL_OES_single_precision	glext.h	/^#define GL_OES_single_precision /;"	d
GL_OFFSET	glext.h	/^#define GL_OFFSET /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	glext.h	/^#define GL_OFFSET_HILO_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	glext.h	/^#define GL_OFFSET_TEXTURE_2D_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	glext.h	/^#define GL_OFFSET_TEXTURE_2D_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_2D_NV	glext.h	/^#define GL_OFFSET_TEXTURE_2D_NV /;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	glext.h	/^#define GL_OFFSET_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_BIAS_NV	glext.h	/^#define GL_OFFSET_TEXTURE_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	glext.h	/^#define GL_OFFSET_TEXTURE_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_SCALE_NV	glext.h	/^#define GL_OFFSET_TEXTURE_SCALE_NV /;"	d
GL_OML_interlace	glext.h	/^#define GL_OML_interlace /;"	d
GL_OML_resample	glext.h	/^#define GL_OML_resample /;"	d
GL_OML_subsample	glext.h	/^#define GL_OML_subsample /;"	d
GL_ONE_EXT	glext.h	/^#define GL_ONE_EXT /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR_EXT /;"	d
GL_ONE_MINUS_SRC1_ALPHA	glext.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	glext.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_OPERAND0_ALPHA	glext.h	/^#define GL_OPERAND0_ALPHA /;"	d
GL_OPERAND0_ALPHA_ARB	glext.h	/^#define GL_OPERAND0_ALPHA_ARB /;"	d
GL_OPERAND0_ALPHA_EXT	glext.h	/^#define GL_OPERAND0_ALPHA_EXT /;"	d
GL_OPERAND0_RGB	glext.h	/^#define GL_OPERAND0_RGB /;"	d
GL_OPERAND0_RGB_ARB	glext.h	/^#define GL_OPERAND0_RGB_ARB /;"	d
GL_OPERAND0_RGB_EXT	glext.h	/^#define GL_OPERAND0_RGB_EXT /;"	d
GL_OPERAND1_ALPHA	glext.h	/^#define GL_OPERAND1_ALPHA /;"	d
GL_OPERAND1_ALPHA_ARB	glext.h	/^#define GL_OPERAND1_ALPHA_ARB /;"	d
GL_OPERAND1_ALPHA_EXT	glext.h	/^#define GL_OPERAND1_ALPHA_EXT /;"	d
GL_OPERAND1_RGB	glext.h	/^#define GL_OPERAND1_RGB /;"	d
GL_OPERAND1_RGB_ARB	glext.h	/^#define GL_OPERAND1_RGB_ARB /;"	d
GL_OPERAND1_RGB_EXT	glext.h	/^#define GL_OPERAND1_RGB_EXT /;"	d
GL_OPERAND2_ALPHA	glext.h	/^#define GL_OPERAND2_ALPHA /;"	d
GL_OPERAND2_ALPHA_ARB	glext.h	/^#define GL_OPERAND2_ALPHA_ARB /;"	d
GL_OPERAND2_ALPHA_EXT	glext.h	/^#define GL_OPERAND2_ALPHA_EXT /;"	d
GL_OPERAND2_RGB	glext.h	/^#define GL_OPERAND2_RGB /;"	d
GL_OPERAND2_RGB_ARB	glext.h	/^#define GL_OPERAND2_RGB_ARB /;"	d
GL_OPERAND2_RGB_EXT	glext.h	/^#define GL_OPERAND2_RGB_EXT /;"	d
GL_OPERAND3_ALPHA_NV	glext.h	/^#define GL_OPERAND3_ALPHA_NV /;"	d
GL_OPERAND3_RGB_NV	glext.h	/^#define GL_OPERAND3_RGB_NV /;"	d
GL_OP_ADD_EXT	glext.h	/^#define GL_OP_ADD_EXT /;"	d
GL_OP_CLAMP_EXT	glext.h	/^#define GL_OP_CLAMP_EXT /;"	d
GL_OP_CROSS_PRODUCT_EXT	glext.h	/^#define GL_OP_CROSS_PRODUCT_EXT /;"	d
GL_OP_DOT3_EXT	glext.h	/^#define GL_OP_DOT3_EXT /;"	d
GL_OP_DOT4_EXT	glext.h	/^#define GL_OP_DOT4_EXT /;"	d
GL_OP_EXP_BASE_2_EXT	glext.h	/^#define GL_OP_EXP_BASE_2_EXT /;"	d
GL_OP_FLOOR_EXT	glext.h	/^#define GL_OP_FLOOR_EXT /;"	d
GL_OP_FRAC_EXT	glext.h	/^#define GL_OP_FRAC_EXT /;"	d
GL_OP_INDEX_EXT	glext.h	/^#define GL_OP_INDEX_EXT /;"	d
GL_OP_LOG_BASE_2_EXT	glext.h	/^#define GL_OP_LOG_BASE_2_EXT /;"	d
GL_OP_MADD_EXT	glext.h	/^#define GL_OP_MADD_EXT /;"	d
GL_OP_MAX_EXT	glext.h	/^#define GL_OP_MAX_EXT /;"	d
GL_OP_MIN_EXT	glext.h	/^#define GL_OP_MIN_EXT /;"	d
GL_OP_MOV_EXT	glext.h	/^#define GL_OP_MOV_EXT /;"	d
GL_OP_MULTIPLY_MATRIX_EXT	glext.h	/^#define GL_OP_MULTIPLY_MATRIX_EXT /;"	d
GL_OP_MUL_EXT	glext.h	/^#define GL_OP_MUL_EXT /;"	d
GL_OP_NEGATE_EXT	glext.h	/^#define GL_OP_NEGATE_EXT /;"	d
GL_OP_POWER_EXT	glext.h	/^#define GL_OP_POWER_EXT /;"	d
GL_OP_RECIP_EXT	glext.h	/^#define GL_OP_RECIP_EXT /;"	d
GL_OP_RECIP_SQRT_EXT	glext.h	/^#define GL_OP_RECIP_SQRT_EXT /;"	d
GL_OP_ROUND_EXT	glext.h	/^#define GL_OP_ROUND_EXT /;"	d
GL_OP_SET_GE_EXT	glext.h	/^#define GL_OP_SET_GE_EXT /;"	d
GL_OP_SET_LT_EXT	glext.h	/^#define GL_OP_SET_LT_EXT /;"	d
GL_OP_SUB_EXT	glext.h	/^#define GL_OP_SUB_EXT /;"	d
GL_OUTPUT_COLOR0_EXT	glext.h	/^#define GL_OUTPUT_COLOR0_EXT /;"	d
GL_OUTPUT_COLOR1_EXT	glext.h	/^#define GL_OUTPUT_COLOR1_EXT /;"	d
GL_OUTPUT_FOG_EXT	glext.h	/^#define GL_OUTPUT_FOG_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD0_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD10_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD11_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD12_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD13_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD14_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD15_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD16_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD17_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD18_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD19_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD1_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD20_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD21_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD22_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD23_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD24_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD25_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD26_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD27_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD28_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD29_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD2_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD30_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD31_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD3_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD4_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD5_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD6_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD7_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD8_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD9_EXT /;"	d
GL_OUTPUT_VERTEX_EXT	glext.h	/^#define GL_OUTPUT_VERTEX_EXT /;"	d
GL_OVERLAY_NV	glext.h	/^#define GL_OVERLAY_NV /;"	d
GL_PACK_CMYK_HINT_EXT	glext.h	/^#define GL_PACK_CMYK_HINT_EXT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_DEPTH_SGIS	glext.h	/^#define GL_PACK_IMAGE_DEPTH_SGIS /;"	d
GL_PACK_IMAGE_HEIGHT	glext.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_IMAGE_HEIGHT_EXT	glext.h	/^#define GL_PACK_IMAGE_HEIGHT_EXT /;"	d
GL_PACK_INVERT_MESA	glext.h	/^#define GL_PACK_INVERT_MESA /;"	d
GL_PACK_RESAMPLE_OML	glext.h	/^#define GL_PACK_RESAMPLE_OML /;"	d
GL_PACK_RESAMPLE_SGIX	glext.h	/^#define GL_PACK_RESAMPLE_SGIX /;"	d
GL_PACK_ROW_BYTES_APPLE	glext.h	/^#define GL_PACK_ROW_BYTES_APPLE /;"	d
GL_PACK_SKIP_IMAGES	glext.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_IMAGES_EXT	glext.h	/^#define GL_PACK_SKIP_IMAGES_EXT /;"	d
GL_PACK_SKIP_VOLUMES_SGIS	glext.h	/^#define GL_PACK_SKIP_VOLUMES_SGIS /;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	glext.h	/^#define GL_PACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_PALETTE4_R5_G6_B5_OES	glext.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	d
GL_PALETTE4_RGB5_A1_OES	glext.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	d
GL_PALETTE4_RGB8_OES	glext.h	/^#define GL_PALETTE4_RGB8_OES /;"	d
GL_PALETTE4_RGBA4_OES	glext.h	/^#define GL_PALETTE4_RGBA4_OES /;"	d
GL_PALETTE4_RGBA8_OES	glext.h	/^#define GL_PALETTE4_RGBA8_OES /;"	d
GL_PALETTE8_R5_G6_B5_OES	glext.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	d
GL_PALETTE8_RGB5_A1_OES	glext.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	d
GL_PALETTE8_RGB8_OES	glext.h	/^#define GL_PALETTE8_RGB8_OES /;"	d
GL_PALETTE8_RGBA4_OES	glext.h	/^#define GL_PALETTE8_RGBA4_OES /;"	d
GL_PALETTE8_RGBA8_OES	glext.h	/^#define GL_PALETTE8_RGBA8_OES /;"	d
GL_PARALLEL_ARRAYS_INTEL	glext.h	/^#define GL_PARALLEL_ARRAYS_INTEL /;"	d
GL_PARAMETER_BUFFER_ARB	glext.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	glext.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	d
GL_PARTIAL_SUCCESS_NV	glext.h	/^#define GL_PARTIAL_SUCCESS_NV /;"	d
GL_PASS_THROUGH_NV	glext.h	/^#define GL_PASS_THROUGH_NV /;"	d
GL_PATCHES	glext.h	/^#define GL_PATCHES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	glext.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	glext.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	glext.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PATH_CLIENT_LENGTH_NV	glext.h	/^#define GL_PATH_CLIENT_LENGTH_NV /;"	d
GL_PATH_COMMAND_COUNT_NV	glext.h	/^#define GL_PATH_COMMAND_COUNT_NV /;"	d
GL_PATH_COMPUTED_LENGTH_NV	glext.h	/^#define GL_PATH_COMPUTED_LENGTH_NV /;"	d
GL_PATH_COORD_COUNT_NV	glext.h	/^#define GL_PATH_COORD_COUNT_NV /;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	glext.h	/^#define GL_PATH_COVER_DEPTH_FUNC_NV /;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	glext.h	/^#define GL_PATH_DASH_ARRAY_COUNT_NV /;"	d
GL_PATH_DASH_CAPS_NV	glext.h	/^#define GL_PATH_DASH_CAPS_NV /;"	d
GL_PATH_DASH_OFFSET_NV	glext.h	/^#define GL_PATH_DASH_OFFSET_NV /;"	d
GL_PATH_DASH_OFFSET_RESET_NV	glext.h	/^#define GL_PATH_DASH_OFFSET_RESET_NV /;"	d
GL_PATH_END_CAPS_NV	glext.h	/^#define GL_PATH_END_CAPS_NV /;"	d
GL_PATH_ERROR_POSITION_NV	glext.h	/^#define GL_PATH_ERROR_POSITION_NV /;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	glext.h	/^#define GL_PATH_FILL_BOUNDING_BOX_NV /;"	d
GL_PATH_FILL_COVER_MODE_NV	glext.h	/^#define GL_PATH_FILL_COVER_MODE_NV /;"	d
GL_PATH_FILL_MASK_NV	glext.h	/^#define GL_PATH_FILL_MASK_NV /;"	d
GL_PATH_FILL_MODE_NV	glext.h	/^#define GL_PATH_FILL_MODE_NV /;"	d
GL_PATH_FOG_GEN_MODE_NV	glext.h	/^#define GL_PATH_FOG_GEN_MODE_NV /;"	d
GL_PATH_FORMAT_PS_NV	glext.h	/^#define GL_PATH_FORMAT_PS_NV /;"	d
GL_PATH_FORMAT_SVG_NV	glext.h	/^#define GL_PATH_FORMAT_SVG_NV /;"	d
GL_PATH_GEN_COEFF_NV	glext.h	/^#define GL_PATH_GEN_COEFF_NV /;"	d
GL_PATH_GEN_COLOR_FORMAT_NV	glext.h	/^#define GL_PATH_GEN_COLOR_FORMAT_NV /;"	d
GL_PATH_GEN_COMPONENTS_NV	glext.h	/^#define GL_PATH_GEN_COMPONENTS_NV /;"	d
GL_PATH_GEN_MODE_NV	glext.h	/^#define GL_PATH_GEN_MODE_NV /;"	d
GL_PATH_INITIAL_DASH_CAP_NV	glext.h	/^#define GL_PATH_INITIAL_DASH_CAP_NV /;"	d
GL_PATH_INITIAL_END_CAP_NV	glext.h	/^#define GL_PATH_INITIAL_END_CAP_NV /;"	d
GL_PATH_JOIN_STYLE_NV	glext.h	/^#define GL_PATH_JOIN_STYLE_NV /;"	d
GL_PATH_MITER_LIMIT_NV	glext.h	/^#define GL_PATH_MITER_LIMIT_NV /;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	glext.h	/^#define GL_PATH_OBJECT_BOUNDING_BOX_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV /;"	d
GL_PATH_STENCIL_FUNC_NV	glext.h	/^#define GL_PATH_STENCIL_FUNC_NV /;"	d
GL_PATH_STENCIL_REF_NV	glext.h	/^#define GL_PATH_STENCIL_REF_NV /;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	glext.h	/^#define GL_PATH_STENCIL_VALUE_MASK_NV /;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	glext.h	/^#define GL_PATH_STROKE_BOUNDING_BOX_NV /;"	d
GL_PATH_STROKE_COVER_MODE_NV	glext.h	/^#define GL_PATH_STROKE_COVER_MODE_NV /;"	d
GL_PATH_STROKE_MASK_NV	glext.h	/^#define GL_PATH_STROKE_MASK_NV /;"	d
GL_PATH_STROKE_WIDTH_NV	glext.h	/^#define GL_PATH_STROKE_WIDTH_NV /;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	glext.h	/^#define GL_PATH_TERMINAL_DASH_CAP_NV /;"	d
GL_PATH_TERMINAL_END_CAP_NV	glext.h	/^#define GL_PATH_TERMINAL_END_CAP_NV /;"	d
GL_PERCENTAGE_AMD	glext.h	/^#define GL_PERCENTAGE_AMD /;"	d
GL_PERFMON_RESULT_AMD	glext.h	/^#define GL_PERFMON_RESULT_AMD /;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	glext.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	d
GL_PERFMON_RESULT_SIZE_AMD	glext.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	d
GL_PERFORMANCE_MONITOR_AMD	glext.h	/^#define GL_PERFORMANCE_MONITOR_AMD /;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL /;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_EVENT_INTEL /;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL /;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL /;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	glext.h	/^#define GL_PERFQUERY_DONOT_FLUSH_INTEL /;"	d
GL_PERFQUERY_FLUSH_INTEL	glext.h	/^#define GL_PERFQUERY_FLUSH_INTEL /;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	glext.h	/^#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL /;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	glext.h	/^#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL /;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	glext.h	/^#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	glext.h	/^#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL /;"	d
GL_PERFQUERY_WAIT_INTEL	glext.h	/^#define GL_PERFQUERY_WAIT_INTEL /;"	d
GL_PERTURB_EXT	glext.h	/^#define GL_PERTURB_EXT /;"	d
GL_PER_STAGE_CONSTANTS_NV	glext.h	/^#define GL_PER_STAGE_CONSTANTS_NV /;"	d
GL_PGI_misc_hints	glext.h	/^#define GL_PGI_misc_hints /;"	d
GL_PGI_vertex_hints	glext.h	/^#define GL_PGI_vertex_hints /;"	d
GL_PHONG_HINT_WIN	glext.h	/^#define GL_PHONG_HINT_WIN /;"	d
GL_PHONG_WIN	glext.h	/^#define GL_PHONG_WIN /;"	d
GL_PINLIGHT_NV	glext.h	/^#define GL_PINLIGHT_NV /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT /;"	d
GL_PIXEL_COUNTER_BITS_NV	glext.h	/^#define GL_PIXEL_COUNTER_BITS_NV /;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	glext.h	/^#define GL_PIXEL_COUNT_AVAILABLE_NV /;"	d
GL_PIXEL_COUNT_NV	glext.h	/^#define GL_PIXEL_COUNT_NV /;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	glext.h	/^#define GL_PIXEL_CUBIC_WEIGHT_EXT /;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	glext.h	/^#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS /;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	glext.h	/^#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS /;"	d
GL_PIXEL_GROUP_COLOR_SGIS	glext.h	/^#define GL_PIXEL_GROUP_COLOR_SGIS /;"	d
GL_PIXEL_MAG_FILTER_EXT	glext.h	/^#define GL_PIXEL_MAG_FILTER_EXT /;"	d
GL_PIXEL_MIN_FILTER_EXT	glext.h	/^#define GL_PIXEL_MIN_FILTER_EXT /;"	d
GL_PIXEL_PACK_BUFFER	glext.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_ARB	glext.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_PACK_BUFFER_EXT	glext.h	/^#define GL_PIXEL_PACK_BUFFER_EXT /;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	glext.h	/^#define GL_PIXEL_SUBSAMPLE_2424_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	glext.h	/^#define GL_PIXEL_SUBSAMPLE_4242_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	glext.h	/^#define GL_PIXEL_SUBSAMPLE_4444_SGIX /;"	d
GL_PIXEL_TEXTURE_SGIS	glext.h	/^#define GL_PIXEL_TEXTURE_SGIS /;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	glext.h	/^#define GL_PIXEL_TEX_GEN_MODE_SGIX /;"	d
GL_PIXEL_TEX_GEN_SGIX	glext.h	/^#define GL_PIXEL_TEX_GEN_SGIX /;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	glext.h	/^#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	glext.h	/^#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	glext.h	/^#define GL_PIXEL_TILE_CACHE_SIZE_SGIX /;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	glext.h	/^#define GL_PIXEL_TILE_GRID_DEPTH_SGIX /;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	glext.h	/^#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	glext.h	/^#define GL_PIXEL_TILE_GRID_WIDTH_SGIX /;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	glext.h	/^#define GL_PIXEL_TILE_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_WIDTH_SGIX	glext.h	/^#define GL_PIXEL_TILE_WIDTH_SGIX /;"	d
GL_PIXEL_TRANSFORM_2D_EXT	glext.h	/^#define GL_PIXEL_TRANSFORM_2D_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	glext.h	/^#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	glext.h	/^#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_EXT /;"	d
GL_PLUS_CLAMPED_ALPHA_NV	glext.h	/^#define GL_PLUS_CLAMPED_ALPHA_NV /;"	d
GL_PLUS_CLAMPED_NV	glext.h	/^#define GL_PLUS_CLAMPED_NV /;"	d
GL_PLUS_DARKER_NV	glext.h	/^#define GL_PLUS_DARKER_NV /;"	d
GL_PLUS_NV	glext.h	/^#define GL_PLUS_NV /;"	d
GL_PN_TRIANGLES_ATI	glext.h	/^#define GL_PN_TRIANGLES_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	glext.h	/^#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_POINT_DISTANCE_ATTENUATION	glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_EXT /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS /;"	d
GL_POINT_SIZE_MAX	glext.h	/^#define GL_POINT_SIZE_MAX /;"	d
GL_POINT_SIZE_MAX_ARB	glext.h	/^#define GL_POINT_SIZE_MAX_ARB /;"	d
GL_POINT_SIZE_MAX_EXT	glext.h	/^#define GL_POINT_SIZE_MAX_EXT /;"	d
GL_POINT_SIZE_MAX_SGIS	glext.h	/^#define GL_POINT_SIZE_MAX_SGIS /;"	d
GL_POINT_SIZE_MIN	glext.h	/^#define GL_POINT_SIZE_MIN /;"	d
GL_POINT_SIZE_MIN_ARB	glext.h	/^#define GL_POINT_SIZE_MIN_ARB /;"	d
GL_POINT_SIZE_MIN_EXT	glext.h	/^#define GL_POINT_SIZE_MIN_EXT /;"	d
GL_POINT_SIZE_MIN_SGIS	glext.h	/^#define GL_POINT_SIZE_MIN_SGIS /;"	d
GL_POINT_SPRITE	glext.h	/^#define GL_POINT_SPRITE /;"	d
GL_POINT_SPRITE_ARB	glext.h	/^#define GL_POINT_SPRITE_ARB /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	glext.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_SPRITE_NV	glext.h	/^#define GL_POINT_SPRITE_NV /;"	d
GL_POINT_SPRITE_R_MODE_NV	glext.h	/^#define GL_POINT_SPRITE_R_MODE_NV /;"	d
GL_POLYGON_OFFSET_BIAS_EXT	glext.h	/^#define GL_POLYGON_OFFSET_BIAS_EXT /;"	d
GL_POLYGON_OFFSET_EXT	glext.h	/^#define GL_POLYGON_OFFSET_EXT /;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	glext.h	/^#define GL_POLYGON_OFFSET_FACTOR_EXT /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_RED_BIAS	glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS /;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_RED_SCALE	glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE /;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE_EXT /;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	glext.h	/^#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_SGIX /;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	glext.h	/^#define GL_PREFER_DOUBLEBUFFER_HINT_PGI /;"	d
GL_PRESENT_DURATION_NV	glext.h	/^#define GL_PRESENT_DURATION_NV /;"	d
GL_PRESENT_TIME_NV	glext.h	/^#define GL_PRESENT_TIME_NV /;"	d
GL_PRESERVE_ATI	glext.h	/^#define GL_PRESERVE_ATI /;"	d
GL_PREVIOUS	glext.h	/^#define GL_PREVIOUS /;"	d
GL_PREVIOUS_ARB	glext.h	/^#define GL_PREVIOUS_ARB /;"	d
GL_PREVIOUS_EXT	glext.h	/^#define GL_PREVIOUS_EXT /;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	glext.h	/^#define GL_PREVIOUS_TEXTURE_INPUT_NV /;"	d
GL_PRIMARY_COLOR	glext.h	/^#define GL_PRIMARY_COLOR /;"	d
GL_PRIMARY_COLOR_ARB	glext.h	/^#define GL_PRIMARY_COLOR_ARB /;"	d
GL_PRIMARY_COLOR_EXT	glext.h	/^#define GL_PRIMARY_COLOR_EXT /;"	d
GL_PRIMARY_COLOR_NV	glext.h	/^#define GL_PRIMARY_COLOR_NV /;"	d
GL_PRIMITIVES_GENERATED	glext.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_GENERATED_EXT	glext.h	/^#define GL_PRIMITIVES_GENERATED_EXT /;"	d
GL_PRIMITIVES_GENERATED_NV	glext.h	/^#define GL_PRIMITIVES_GENERATED_NV /;"	d
GL_PRIMITIVE_ID_NV	glext.h	/^#define GL_PRIMITIVE_ID_NV /;"	d
GL_PRIMITIVE_RESTART	glext.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	glext.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	glext.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	d
GL_PRIMITIVE_RESTART_INDEX	glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX_NV /;"	d
GL_PRIMITIVE_RESTART_NV	glext.h	/^#define GL_PRIMITIVE_RESTART_NV /;"	d
GL_PROGRAM	glext.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	glext.h	/^#define GL_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_ATTRIBS_ARB	glext.h	/^#define GL_PROGRAM_ATTRIBS_ARB /;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	glext.h	/^#define GL_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_PROGRAM_BINARY_FORMATS	glext.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_LENGTH	glext.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	glext.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_BINDING_ARB	glext.h	/^#define GL_PROGRAM_BINDING_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_ARB	glext.h	/^#define GL_PROGRAM_ERROR_POSITION_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_NV	glext.h	/^#define GL_PROGRAM_ERROR_POSITION_NV /;"	d
GL_PROGRAM_ERROR_STRING_ARB	glext.h	/^#define GL_PROGRAM_ERROR_STRING_ARB /;"	d
GL_PROGRAM_ERROR_STRING_NV	glext.h	/^#define GL_PROGRAM_ERROR_STRING_NV /;"	d
GL_PROGRAM_FORMAT_ARB	glext.h	/^#define GL_PROGRAM_FORMAT_ARB /;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	glext.h	/^#define GL_PROGRAM_FORMAT_ASCII_ARB /;"	d
GL_PROGRAM_INPUT	glext.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_LENGTH_ARB	glext.h	/^#define GL_PROGRAM_LENGTH_ARB /;"	d
GL_PROGRAM_LENGTH_NV	glext.h	/^#define GL_PROGRAM_LENGTH_NV /;"	d
GL_PROGRAM_MATRIX_EXT	glext.h	/^#define GL_PROGRAM_MATRIX_EXT /;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	glext.h	/^#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT /;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_OBJECT_ARB	glext.h	/^#define GL_PROGRAM_OBJECT_ARB /;"	d
GL_PROGRAM_OBJECT_EXT	glext.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	d
GL_PROGRAM_OUTPUT	glext.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PARAMETERS_ARB	glext.h	/^#define GL_PROGRAM_PARAMETERS_ARB /;"	d
GL_PROGRAM_PARAMETER_NV	glext.h	/^#define GL_PROGRAM_PARAMETER_NV /;"	d
GL_PROGRAM_PIPELINE	glext.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	glext.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	glext.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	d
GL_PROGRAM_POINT_SIZE	glext.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_POINT_SIZE_ARB	glext.h	/^#define GL_PROGRAM_POINT_SIZE_ARB /;"	d
GL_PROGRAM_POINT_SIZE_EXT	glext.h	/^#define GL_PROGRAM_POINT_SIZE_EXT /;"	d
GL_PROGRAM_RESIDENT_NV	glext.h	/^#define GL_PROGRAM_RESIDENT_NV /;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	glext.h	/^#define GL_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_PROGRAM_SEPARABLE	glext.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROGRAM_STRING_ARB	glext.h	/^#define GL_PROGRAM_STRING_ARB /;"	d
GL_PROGRAM_STRING_NV	glext.h	/^#define GL_PROGRAM_STRING_NV /;"	d
GL_PROGRAM_TARGET_NV	glext.h	/^#define GL_PROGRAM_TARGET_NV /;"	d
GL_PROGRAM_TEMPORARIES_ARB	glext.h	/^#define GL_PROGRAM_TEMPORARIES_ARB /;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	glext.h	/^#define GL_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	glext.h	/^#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB /;"	d
GL_PROVOKING_VERTEX	glext.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROVOKING_VERTEX_EXT	glext.h	/^#define GL_PROVOKING_VERTEX_EXT /;"	d
GL_PROXY_COLOR_TABLE	glext.h	/^#define GL_PROXY_COLOR_TABLE /;"	d
GL_PROXY_COLOR_TABLE_SGI	glext.h	/^#define GL_PROXY_COLOR_TABLE_SGI /;"	d
GL_PROXY_HISTOGRAM	glext.h	/^#define GL_PROXY_HISTOGRAM /;"	d
GL_PROXY_HISTOGRAM_EXT	glext.h	/^#define GL_PROXY_HISTOGRAM_EXT /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	glext.h	/^#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_1D_EXT	glext.h	/^#define GL_PROXY_TEXTURE_1D_EXT /;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	glext.h	/^#define GL_PROXY_TEXTURE_1D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_2D_EXT	glext.h	/^#define GL_PROXY_TEXTURE_2D_EXT /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	glext.h	/^#define GL_PROXY_TEXTURE_2D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_3D	glext.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_3D_EXT	glext.h	/^#define GL_PROXY_TEXTURE_3D_EXT /;"	d
GL_PROXY_TEXTURE_4D_SGIS	glext.h	/^#define GL_PROXY_TEXTURE_4D_SGIS /;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	glext.h	/^#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE	glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_NV /;"	d
GL_PURGEABLE_APPLE	glext.h	/^#define GL_PURGEABLE_APPLE /;"	d
GL_QUADRATIC_CURVE_TO_NV	glext.h	/^#define GL_QUADRATIC_CURVE_TO_NV /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT /;"	d
GL_QUAD_ALPHA4_SGIS	glext.h	/^#define GL_QUAD_ALPHA4_SGIS /;"	d
GL_QUAD_ALPHA8_SGIS	glext.h	/^#define GL_QUAD_ALPHA8_SGIS /;"	d
GL_QUAD_INTENSITY4_SGIS	glext.h	/^#define GL_QUAD_INTENSITY4_SGIS /;"	d
GL_QUAD_INTENSITY8_SGIS	glext.h	/^#define GL_QUAD_INTENSITY8_SGIS /;"	d
GL_QUAD_LUMINANCE4_SGIS	glext.h	/^#define GL_QUAD_LUMINANCE4_SGIS /;"	d
GL_QUAD_LUMINANCE8_SGIS	glext.h	/^#define GL_QUAD_LUMINANCE8_SGIS /;"	d
GL_QUAD_MESH_SUN	glext.h	/^#define GL_QUAD_MESH_SUN /;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	glext.h	/^#define GL_QUAD_TEXTURE_SELECT_SGIS /;"	d
GL_QUARTER_BIT_ATI	glext.h	/^#define GL_QUARTER_BIT_ATI /;"	d
GL_QUERY	glext.h	/^#define GL_QUERY /;"	d
GL_QUERY_ALL_EVENT_BITS_AMD	glext.h	/^#define GL_QUERY_ALL_EVENT_BITS_AMD /;"	d
GL_QUERY_BUFFER	glext.h	/^#define GL_QUERY_BUFFER /;"	d
GL_QUERY_BUFFER_AMD	glext.h	/^#define GL_QUERY_BUFFER_AMD /;"	d
GL_QUERY_BUFFER_BARRIER_BIT	glext.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	d
GL_QUERY_BUFFER_BINDING	glext.h	/^#define GL_QUERY_BUFFER_BINDING /;"	d
GL_QUERY_BUFFER_BINDING_AMD	glext.h	/^#define GL_QUERY_BUFFER_BINDING_AMD /;"	d
GL_QUERY_BY_REGION_NO_WAIT	glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_NV /;"	d
GL_QUERY_BY_REGION_WAIT	glext.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT_NV	glext.h	/^#define GL_QUERY_BY_REGION_WAIT_NV /;"	d
GL_QUERY_COUNTER_BITS	glext.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_COUNTER_BITS_ARB	glext.h	/^#define GL_QUERY_COUNTER_BITS_ARB /;"	d
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD	glext.h	/^#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD	glext.h	/^#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD	glext.h	/^#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD /;"	d
GL_QUERY_NO_WAIT	glext.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT_NV	glext.h	/^#define GL_QUERY_NO_WAIT_NV /;"	d
GL_QUERY_OBJECT_AMD	glext.h	/^#define GL_QUERY_OBJECT_AMD /;"	d
GL_QUERY_OBJECT_EXT	glext.h	/^#define GL_QUERY_OBJECT_EXT /;"	d
GL_QUERY_RESULT	glext.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_ARB	glext.h	/^#define GL_QUERY_RESULT_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE	glext.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	glext.h	/^#define GL_QUERY_RESULT_AVAILABLE_ARB /;"	d
GL_QUERY_RESULT_NO_WAIT	glext.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	d
GL_QUERY_RESULT_NO_WAIT_AMD	glext.h	/^#define GL_QUERY_RESULT_NO_WAIT_AMD /;"	d
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD	glext.h	/^#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_WAIT	glext.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT_NV	glext.h	/^#define GL_QUERY_WAIT_NV /;"	d
GL_R11F_G11F_B10F	glext.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R11F_G11F_B10F_EXT	glext.h	/^#define GL_R11F_G11F_B10F_EXT /;"	d
GL_R16	glext.h	/^#define GL_R16 /;"	d
GL_R16F	glext.h	/^#define GL_R16F /;"	d
GL_R16I	glext.h	/^#define GL_R16I /;"	d
GL_R16UI	glext.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	glext.h	/^#define GL_R16_SNORM /;"	d
GL_R1UI_C3F_V3F_SUN	glext.h	/^#define GL_R1UI_C3F_V3F_SUN /;"	d
GL_R1UI_C4F_N3F_V3F_SUN	glext.h	/^#define GL_R1UI_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_C4UB_V3F_SUN	glext.h	/^#define GL_R1UI_C4UB_V3F_SUN /;"	d
GL_R1UI_N3F_V3F_SUN	glext.h	/^#define GL_R1UI_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	glext.h	/^#define GL_R1UI_T2F_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_N3F_V3F_SUN	glext.h	/^#define GL_R1UI_T2F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_V3F_SUN	glext.h	/^#define GL_R1UI_T2F_V3F_SUN /;"	d
GL_R1UI_V3F_SUN	glext.h	/^#define GL_R1UI_V3F_SUN /;"	d
GL_R32F	glext.h	/^#define GL_R32F /;"	d
GL_R32I	glext.h	/^#define GL_R32I /;"	d
GL_R32UI	glext.h	/^#define GL_R32UI /;"	d
GL_R8	glext.h	/^#define GL_R8 /;"	d
GL_R8I	glext.h	/^#define GL_R8I /;"	d
GL_R8UI	glext.h	/^#define GL_R8UI /;"	d
GL_R8_SNORM	glext.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	glext.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_RASTERIZER_DISCARD_EXT	glext.h	/^#define GL_RASTERIZER_DISCARD_EXT /;"	d
GL_RASTERIZER_DISCARD_NV	glext.h	/^#define GL_RASTERIZER_DISCARD_NV /;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	glext.h	/^#define GL_RASTER_POSITION_UNCLIPPED_IBM /;"	d
GL_READ_FRAMEBUFFER	glext.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_BINDING	glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_EXT /;"	d
GL_READ_FRAMEBUFFER_EXT	glext.h	/^#define GL_READ_FRAMEBUFFER_EXT /;"	d
GL_READ_ONLY	glext.h	/^#define GL_READ_ONLY /;"	d
GL_READ_ONLY_ARB	glext.h	/^#define GL_READ_ONLY_ARB /;"	d
GL_READ_PIXELS	glext.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	glext.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	glext.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_NV	glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_READ_WRITE	glext.h	/^#define GL_READ_WRITE /;"	d
GL_READ_WRITE_ARB	glext.h	/^#define GL_READ_WRITE_ARB /;"	d
GL_RECLAIM_MEMORY_HINT_PGI	glext.h	/^#define GL_RECLAIM_MEMORY_HINT_PGI /;"	d
GL_RECT_NV	glext.h	/^#define GL_RECT_NV /;"	d
GL_REDUCE	glext.h	/^#define GL_REDUCE /;"	d
GL_REDUCE_EXT	glext.h	/^#define GL_REDUCE_EXT /;"	d
GL_RED_BIT_ATI	glext.h	/^#define GL_RED_BIT_ATI /;"	d
GL_RED_INTEGER	glext.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_INTEGER_EXT	glext.h	/^#define GL_RED_INTEGER_EXT /;"	d
GL_RED_MAX_CLAMP_INGR	glext.h	/^#define GL_RED_MAX_CLAMP_INGR /;"	d
GL_RED_MIN_CLAMP_INGR	glext.h	/^#define GL_RED_MIN_CLAMP_INGR /;"	d
GL_RED_NV	glext.h	/^#define GL_RED_NV /;"	d
GL_RED_SNORM	glext.h	/^#define GL_RED_SNORM /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	glext.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	glext.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	glext.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	glext.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	glext.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	glext.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	glext.h	/^#define GL_REFERENCE_PLANE_EQUATION_SGIX /;"	d
GL_REFERENCE_PLANE_SGIX	glext.h	/^#define GL_REFERENCE_PLANE_SGIX /;"	d
GL_REFLECTION_MAP	glext.h	/^#define GL_REFLECTION_MAP /;"	d
GL_REFLECTION_MAP_ARB	glext.h	/^#define GL_REFLECTION_MAP_ARB /;"	d
GL_REFLECTION_MAP_EXT	glext.h	/^#define GL_REFLECTION_MAP_EXT /;"	d
GL_REFLECTION_MAP_NV	glext.h	/^#define GL_REFLECTION_MAP_NV /;"	d
GL_REGISTER_COMBINERS_NV	glext.h	/^#define GL_REGISTER_COMBINERS_NV /;"	d
GL_REG_0_ATI	glext.h	/^#define GL_REG_0_ATI /;"	d
GL_REG_10_ATI	glext.h	/^#define GL_REG_10_ATI /;"	d
GL_REG_11_ATI	glext.h	/^#define GL_REG_11_ATI /;"	d
GL_REG_12_ATI	glext.h	/^#define GL_REG_12_ATI /;"	d
GL_REG_13_ATI	glext.h	/^#define GL_REG_13_ATI /;"	d
GL_REG_14_ATI	glext.h	/^#define GL_REG_14_ATI /;"	d
GL_REG_15_ATI	glext.h	/^#define GL_REG_15_ATI /;"	d
GL_REG_16_ATI	glext.h	/^#define GL_REG_16_ATI /;"	d
GL_REG_17_ATI	glext.h	/^#define GL_REG_17_ATI /;"	d
GL_REG_18_ATI	glext.h	/^#define GL_REG_18_ATI /;"	d
GL_REG_19_ATI	glext.h	/^#define GL_REG_19_ATI /;"	d
GL_REG_1_ATI	glext.h	/^#define GL_REG_1_ATI /;"	d
GL_REG_20_ATI	glext.h	/^#define GL_REG_20_ATI /;"	d
GL_REG_21_ATI	glext.h	/^#define GL_REG_21_ATI /;"	d
GL_REG_22_ATI	glext.h	/^#define GL_REG_22_ATI /;"	d
GL_REG_23_ATI	glext.h	/^#define GL_REG_23_ATI /;"	d
GL_REG_24_ATI	glext.h	/^#define GL_REG_24_ATI /;"	d
GL_REG_25_ATI	glext.h	/^#define GL_REG_25_ATI /;"	d
GL_REG_26_ATI	glext.h	/^#define GL_REG_26_ATI /;"	d
GL_REG_27_ATI	glext.h	/^#define GL_REG_27_ATI /;"	d
GL_REG_28_ATI	glext.h	/^#define GL_REG_28_ATI /;"	d
GL_REG_29_ATI	glext.h	/^#define GL_REG_29_ATI /;"	d
GL_REG_2_ATI	glext.h	/^#define GL_REG_2_ATI /;"	d
GL_REG_30_ATI	glext.h	/^#define GL_REG_30_ATI /;"	d
GL_REG_31_ATI	glext.h	/^#define GL_REG_31_ATI /;"	d
GL_REG_3_ATI	glext.h	/^#define GL_REG_3_ATI /;"	d
GL_REG_4_ATI	glext.h	/^#define GL_REG_4_ATI /;"	d
GL_REG_5_ATI	glext.h	/^#define GL_REG_5_ATI /;"	d
GL_REG_6_ATI	glext.h	/^#define GL_REG_6_ATI /;"	d
GL_REG_7_ATI	glext.h	/^#define GL_REG_7_ATI /;"	d
GL_REG_8_ATI	glext.h	/^#define GL_REG_8_ATI /;"	d
GL_REG_9_ATI	glext.h	/^#define GL_REG_9_ATI /;"	d
GL_RELATIVE_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_ARC_TO_NV /;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	glext.h	/^#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV /;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_LARGE_CW_ARC_TO_NV /;"	d
GL_RELATIVE_LINE_TO_NV	glext.h	/^#define GL_RELATIVE_LINE_TO_NV /;"	d
GL_RELATIVE_MOVE_TO_NV	glext.h	/^#define GL_RELATIVE_MOVE_TO_NV /;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_SMALL_CW_ARC_TO_NV /;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	glext.h	/^#define GL_RELATIVE_VERTICAL_LINE_TO_NV /;"	d
GL_RELEASED_APPLE	glext.h	/^#define GL_RELEASED_APPLE /;"	d
GL_RENDERBUFFER	glext.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_EXT /;"	d
GL_RENDERBUFFER_BINDING	glext.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BINDING_EXT	glext.h	/^#define GL_RENDERBUFFER_BINDING_EXT /;"	d
GL_RENDERBUFFER_BLUE_SIZE	glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_EXT /;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	glext.h	/^#define GL_RENDERBUFFER_COLOR_SAMPLES_NV /;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	glext.h	/^#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_EXT /;"	d
GL_RENDERBUFFER_EXT	glext.h	/^#define GL_RENDERBUFFER_EXT /;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	glext.h	/^#define GL_RENDERBUFFER_FREE_MEMORY_ATI /;"	d
GL_RENDERBUFFER_GREEN_SIZE	glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_EXT /;"	d
GL_RENDERBUFFER_HEIGHT	glext.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_HEIGHT_EXT	glext.h	/^#define GL_RENDERBUFFER_HEIGHT_EXT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT /;"	d
GL_RENDERBUFFER_RED_SIZE	glext.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_RED_SIZE_EXT /;"	d
GL_RENDERBUFFER_SAMPLES	glext.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_SAMPLES_EXT	glext.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_EXT /;"	d
GL_RENDERBUFFER_WIDTH	glext.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERBUFFER_WIDTH_EXT	glext.h	/^#define GL_RENDERBUFFER_WIDTH_EXT /;"	d
GL_REND_screen_coordinates	glext.h	/^#define GL_REND_screen_coordinates /;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN /;"	d
GL_REPLACEMENT_CODE_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_SUN /;"	d
GL_REPLACE_EXT	glext.h	/^#define GL_REPLACE_EXT /;"	d
GL_REPLACE_MIDDLE_SUN	glext.h	/^#define GL_REPLACE_MIDDLE_SUN /;"	d
GL_REPLACE_OLDEST_SUN	glext.h	/^#define GL_REPLACE_OLDEST_SUN /;"	d
GL_REPLACE_VALUE_AMD	glext.h	/^#define GL_REPLACE_VALUE_AMD /;"	d
GL_REPLICATE_BORDER	glext.h	/^#define GL_REPLICATE_BORDER /;"	d
GL_REPLICATE_BORDER_HP	glext.h	/^#define GL_REPLICATE_BORDER_HP /;"	d
GL_RESAMPLE_AVERAGE_OML	glext.h	/^#define GL_RESAMPLE_AVERAGE_OML /;"	d
GL_RESAMPLE_DECIMATE_OML	glext.h	/^#define GL_RESAMPLE_DECIMATE_OML /;"	d
GL_RESAMPLE_DECIMATE_SGIX	glext.h	/^#define GL_RESAMPLE_DECIMATE_SGIX /;"	d
GL_RESAMPLE_REPLICATE_OML	glext.h	/^#define GL_RESAMPLE_REPLICATE_OML /;"	d
GL_RESAMPLE_REPLICATE_SGIX	glext.h	/^#define GL_RESAMPLE_REPLICATE_SGIX /;"	d
GL_RESAMPLE_ZERO_FILL_OML	glext.h	/^#define GL_RESAMPLE_ZERO_FILL_OML /;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	glext.h	/^#define GL_RESAMPLE_ZERO_FILL_SGIX /;"	d
GL_RESCALE_NORMAL	glext.h	/^#define GL_RESCALE_NORMAL /;"	d
GL_RESCALE_NORMAL_EXT	glext.h	/^#define GL_RESCALE_NORMAL_EXT /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	glext.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESTART_PATH_NV	glext.h	/^#define GL_RESTART_PATH_NV /;"	d
GL_RESTART_SUN	glext.h	/^#define GL_RESTART_SUN /;"	d
GL_RETAINED_APPLE	glext.h	/^#define GL_RETAINED_APPLE /;"	d
GL_RG	glext.h	/^#define GL_RG /;"	d
GL_RG16	glext.h	/^#define GL_RG16 /;"	d
GL_RG16F	glext.h	/^#define GL_RG16F /;"	d
GL_RG16I	glext.h	/^#define GL_RG16I /;"	d
GL_RG16UI	glext.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	glext.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	glext.h	/^#define GL_RG32F /;"	d
GL_RG32I	glext.h	/^#define GL_RG32I /;"	d
GL_RG32UI	glext.h	/^#define GL_RG32UI /;"	d
GL_RG8	glext.h	/^#define GL_RG8 /;"	d
GL_RG8I	glext.h	/^#define GL_RG8I /;"	d
GL_RG8UI	glext.h	/^#define GL_RG8UI /;"	d
GL_RG8_SNORM	glext.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB10_A2UI	glext.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB10_A2_EXT	glext.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_EXT	glext.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB12_EXT	glext.h	/^#define GL_RGB12_EXT /;"	d
GL_RGB16F	glext.h	/^#define GL_RGB16F /;"	d
GL_RGB16F_ARB	glext.h	/^#define GL_RGB16F_ARB /;"	d
GL_RGB16I	glext.h	/^#define GL_RGB16I /;"	d
GL_RGB16I_EXT	glext.h	/^#define GL_RGB16I_EXT /;"	d
GL_RGB16UI	glext.h	/^#define GL_RGB16UI /;"	d
GL_RGB16UI_EXT	glext.h	/^#define GL_RGB16UI_EXT /;"	d
GL_RGB16_EXT	glext.h	/^#define GL_RGB16_EXT /;"	d
GL_RGB16_SNORM	glext.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB2_EXT	glext.h	/^#define GL_RGB2_EXT /;"	d
GL_RGB32F	glext.h	/^#define GL_RGB32F /;"	d
GL_RGB32F_ARB	glext.h	/^#define GL_RGB32F_ARB /;"	d
GL_RGB32I	glext.h	/^#define GL_RGB32I /;"	d
GL_RGB32I_EXT	glext.h	/^#define GL_RGB32I_EXT /;"	d
GL_RGB32UI	glext.h	/^#define GL_RGB32UI /;"	d
GL_RGB32UI_EXT	glext.h	/^#define GL_RGB32UI_EXT /;"	d
GL_RGB4_EXT	glext.h	/^#define GL_RGB4_EXT /;"	d
GL_RGB4_S3TC	glext.h	/^#define GL_RGB4_S3TC /;"	d
GL_RGB565	glext.h	/^#define GL_RGB565 /;"	d
GL_RGB5_A1_EXT	glext.h	/^#define GL_RGB5_A1_EXT /;"	d
GL_RGB5_EXT	glext.h	/^#define GL_RGB5_EXT /;"	d
GL_RGB8I	glext.h	/^#define GL_RGB8I /;"	d
GL_RGB8I_EXT	glext.h	/^#define GL_RGB8I_EXT /;"	d
GL_RGB8UI	glext.h	/^#define GL_RGB8UI /;"	d
GL_RGB8UI_EXT	glext.h	/^#define GL_RGB8UI_EXT /;"	d
GL_RGB8_EXT	glext.h	/^#define GL_RGB8_EXT /;"	d
GL_RGB8_SNORM	glext.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	glext.h	/^#define GL_RGB9_E5 /;"	d
GL_RGB9_E5_EXT	glext.h	/^#define GL_RGB9_E5_EXT /;"	d
GL_RGBA12_EXT	glext.h	/^#define GL_RGBA12_EXT /;"	d
GL_RGBA16F	glext.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16F_ARB	glext.h	/^#define GL_RGBA16F_ARB /;"	d
GL_RGBA16I	glext.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16I_EXT	glext.h	/^#define GL_RGBA16I_EXT /;"	d
GL_RGBA16UI	glext.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16UI_EXT	glext.h	/^#define GL_RGBA16UI_EXT /;"	d
GL_RGBA16_EXT	glext.h	/^#define GL_RGBA16_EXT /;"	d
GL_RGBA16_SNORM	glext.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2_EXT	glext.h	/^#define GL_RGBA2_EXT /;"	d
GL_RGBA32F	glext.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32F_ARB	glext.h	/^#define GL_RGBA32F_ARB /;"	d
GL_RGBA32I	glext.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32I_EXT	glext.h	/^#define GL_RGBA32I_EXT /;"	d
GL_RGBA32UI	glext.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA32UI_EXT	glext.h	/^#define GL_RGBA32UI_EXT /;"	d
GL_RGBA4_DXT5_S3TC	glext.h	/^#define GL_RGBA4_DXT5_S3TC /;"	d
GL_RGBA4_EXT	glext.h	/^#define GL_RGBA4_EXT /;"	d
GL_RGBA4_S3TC	glext.h	/^#define GL_RGBA4_S3TC /;"	d
GL_RGBA8I	glext.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8I_EXT	glext.h	/^#define GL_RGBA8I_EXT /;"	d
GL_RGBA8UI	glext.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8UI_EXT	glext.h	/^#define GL_RGBA8UI_EXT /;"	d
GL_RGBA8_EXT	glext.h	/^#define GL_RGBA8_EXT /;"	d
GL_RGBA8_SNORM	glext.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_DXT5_S3TC	glext.h	/^#define GL_RGBA_DXT5_S3TC /;"	d
GL_RGBA_FLOAT16_APPLE	glext.h	/^#define GL_RGBA_FLOAT16_APPLE /;"	d
GL_RGBA_FLOAT16_ATI	glext.h	/^#define GL_RGBA_FLOAT16_ATI /;"	d
GL_RGBA_FLOAT32_APPLE	glext.h	/^#define GL_RGBA_FLOAT32_APPLE /;"	d
GL_RGBA_FLOAT32_ATI	glext.h	/^#define GL_RGBA_FLOAT32_ATI /;"	d
GL_RGBA_FLOAT_MODE_ARB	glext.h	/^#define GL_RGBA_FLOAT_MODE_ARB /;"	d
GL_RGBA_FLOAT_MODE_ATI	glext.h	/^#define GL_RGBA_FLOAT_MODE_ATI /;"	d
GL_RGBA_INTEGER	glext.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_INTEGER_EXT	glext.h	/^#define GL_RGBA_INTEGER_EXT /;"	d
GL_RGBA_INTEGER_MODE_EXT	glext.h	/^#define GL_RGBA_INTEGER_MODE_EXT /;"	d
GL_RGBA_S3TC	glext.h	/^#define GL_RGBA_S3TC /;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	glext.h	/^#define GL_RGBA_SIGNED_COMPONENTS_EXT /;"	d
GL_RGBA_SNORM	glext.h	/^#define GL_RGBA_SNORM /;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	glext.h	/^#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV /;"	d
GL_RGB_422_APPLE	glext.h	/^#define GL_RGB_422_APPLE /;"	d
GL_RGB_FLOAT16_APPLE	glext.h	/^#define GL_RGB_FLOAT16_APPLE /;"	d
GL_RGB_FLOAT16_ATI	glext.h	/^#define GL_RGB_FLOAT16_ATI /;"	d
GL_RGB_FLOAT32_APPLE	glext.h	/^#define GL_RGB_FLOAT32_APPLE /;"	d
GL_RGB_FLOAT32_ATI	glext.h	/^#define GL_RGB_FLOAT32_ATI /;"	d
GL_RGB_INTEGER	glext.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_INTEGER_EXT	glext.h	/^#define GL_RGB_INTEGER_EXT /;"	d
GL_RGB_RAW_422_APPLE	glext.h	/^#define GL_RGB_RAW_422_APPLE /;"	d
GL_RGB_S3TC	glext.h	/^#define GL_RGB_S3TC /;"	d
GL_RGB_SCALE	glext.h	/^#define GL_RGB_SCALE /;"	d
GL_RGB_SCALE_ARB	glext.h	/^#define GL_RGB_SCALE_ARB /;"	d
GL_RGB_SCALE_EXT	glext.h	/^#define GL_RGB_SCALE_EXT /;"	d
GL_RGB_SNORM	glext.h	/^#define GL_RGB_SNORM /;"	d
GL_RG_INTEGER	glext.h	/^#define GL_RG_INTEGER /;"	d
GL_RG_SNORM	glext.h	/^#define GL_RG_SNORM /;"	d
GL_ROUND_NV	glext.h	/^#define GL_ROUND_NV /;"	d
GL_S3_s3tc	glext.h	/^#define GL_S3_s3tc /;"	d
GL_SAMPLER	glext.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	glext.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARB	glext.h	/^#define GL_SAMPLER_1D_ARB /;"	d
GL_SAMPLER_1D_ARRAY	glext.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_EXT	glext.h	/^#define GL_SAMPLER_1D_ARRAY_EXT /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_1D_SHADOW	glext.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW_ARB	glext.h	/^#define GL_SAMPLER_1D_SHADOW_ARB /;"	d
GL_SAMPLER_2D	glext.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARB	glext.h	/^#define GL_SAMPLER_2D_ARB /;"	d
GL_SAMPLER_2D_ARRAY	glext.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_EXT	glext.h	/^#define GL_SAMPLER_2D_ARRAY_EXT /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_2D_MULTISAMPLE	glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	glext.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_ARB	glext.h	/^#define GL_SAMPLER_2D_RECT_ARB /;"	d
GL_SAMPLER_2D_RECT_SHADOW	glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW	glext.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW_ARB	glext.h	/^#define GL_SAMPLER_2D_SHADOW_ARB /;"	d
GL_SAMPLER_3D	glext.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_3D_ARB	glext.h	/^#define GL_SAMPLER_3D_ARB /;"	d
GL_SAMPLER_BINDING	glext.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	glext.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_BUFFER_AMD	glext.h	/^#define GL_SAMPLER_BUFFER_AMD /;"	d
GL_SAMPLER_BUFFER_EXT	glext.h	/^#define GL_SAMPLER_BUFFER_EXT /;"	d
GL_SAMPLER_CUBE	glext.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_ARB	glext.h	/^#define GL_SAMPLER_CUBE_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_SHADOW	glext.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	glext.h	/^#define GL_SAMPLER_CUBE_SHADOW_EXT /;"	d
GL_SAMPLER_OBJECT_AMD	glext.h	/^#define GL_SAMPLER_OBJECT_AMD /;"	d
GL_SAMPLER_RENDERBUFFER_NV	glext.h	/^#define GL_SAMPLER_RENDERBUFFER_NV /;"	d
GL_SAMPLES	glext.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_3DFX	glext.h	/^#define GL_SAMPLES_3DFX /;"	d
GL_SAMPLES_ARB	glext.h	/^#define GL_SAMPLES_ARB /;"	d
GL_SAMPLES_EXT	glext.h	/^#define GL_SAMPLES_EXT /;"	d
GL_SAMPLES_PASSED	glext.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLES_PASSED_ARB	glext.h	/^#define GL_SAMPLES_PASSED_ARB /;"	d
GL_SAMPLES_SGIS	glext.h	/^#define GL_SAMPLES_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_EXT /;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_ONE	glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_EXT /;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_SGIS /;"	d
GL_SAMPLE_BUFFERS	glext.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS_3DFX	glext.h	/^#define GL_SAMPLE_BUFFERS_3DFX /;"	d
GL_SAMPLE_BUFFERS_ARB	glext.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	d
GL_SAMPLE_BUFFERS_EXT	glext.h	/^#define GL_SAMPLE_BUFFERS_EXT /;"	d
GL_SAMPLE_BUFFERS_SGIS	glext.h	/^#define GL_SAMPLE_BUFFERS_SGIS /;"	d
GL_SAMPLE_COVERAGE	glext.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_ARB	glext.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	d
GL_SAMPLE_COVERAGE_INVERT	glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	d
GL_SAMPLE_COVERAGE_VALUE	glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	d
GL_SAMPLE_MASK	glext.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_EXT	glext.h	/^#define GL_SAMPLE_MASK_EXT /;"	d
GL_SAMPLE_MASK_INVERT_EXT	glext.h	/^#define GL_SAMPLE_MASK_INVERT_EXT /;"	d
GL_SAMPLE_MASK_INVERT_SGIS	glext.h	/^#define GL_SAMPLE_MASK_INVERT_SGIS /;"	d
GL_SAMPLE_MASK_NV	glext.h	/^#define GL_SAMPLE_MASK_NV /;"	d
GL_SAMPLE_MASK_SGIS	glext.h	/^#define GL_SAMPLE_MASK_SGIS /;"	d
GL_SAMPLE_MASK_VALUE	glext.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_MASK_VALUE_EXT	glext.h	/^#define GL_SAMPLE_MASK_VALUE_EXT /;"	d
GL_SAMPLE_MASK_VALUE_NV	glext.h	/^#define GL_SAMPLE_MASK_VALUE_NV /;"	d
GL_SAMPLE_MASK_VALUE_SGIS	glext.h	/^#define GL_SAMPLE_MASK_VALUE_SGIS /;"	d
GL_SAMPLE_PATTERN_EXT	glext.h	/^#define GL_SAMPLE_PATTERN_EXT /;"	d
GL_SAMPLE_PATTERN_SGIS	glext.h	/^#define GL_SAMPLE_PATTERN_SGIS /;"	d
GL_SAMPLE_POSITION	glext.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_POSITION_NV	glext.h	/^#define GL_SAMPLE_POSITION_NV /;"	d
GL_SAMPLE_SHADING	glext.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	glext.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SATURATE_BIT_ATI	glext.h	/^#define GL_SATURATE_BIT_ATI /;"	d
GL_SCALAR_EXT	glext.h	/^#define GL_SCALAR_EXT /;"	d
GL_SCALEBIAS_HINT_SGIX	glext.h	/^#define GL_SCALEBIAS_HINT_SGIX /;"	d
GL_SCALED_RESOLVE_FASTEST_EXT	glext.h	/^#define GL_SCALED_RESOLVE_FASTEST_EXT /;"	d
GL_SCALED_RESOLVE_NICEST_EXT	glext.h	/^#define GL_SCALED_RESOLVE_NICEST_EXT /;"	d
GL_SCALE_BY_FOUR_NV	glext.h	/^#define GL_SCALE_BY_FOUR_NV /;"	d
GL_SCALE_BY_ONE_HALF_NV	glext.h	/^#define GL_SCALE_BY_ONE_HALF_NV /;"	d
GL_SCALE_BY_TWO_NV	glext.h	/^#define GL_SCALE_BY_TWO_NV /;"	d
GL_SCREEN_COORDINATES_REND	glext.h	/^#define GL_SCREEN_COORDINATES_REND /;"	d
GL_SCREEN_NV	glext.h	/^#define GL_SCREEN_NV /;"	d
GL_SECONDARY_COLOR_ARRAY	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT /;"	d
GL_SECONDARY_COLOR_NV	glext.h	/^#define GL_SECONDARY_COLOR_NV /;"	d
GL_SECONDARY_INTERPOLATOR_ATI	glext.h	/^#define GL_SECONDARY_INTERPOLATOR_ATI /;"	d
GL_SEPARABLE_2D	glext.h	/^#define GL_SEPARABLE_2D /;"	d
GL_SEPARABLE_2D_EXT	glext.h	/^#define GL_SEPARABLE_2D_EXT /;"	d
GL_SEPARATE_ATTRIBS	glext.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SEPARATE_ATTRIBS_EXT	glext.h	/^#define GL_SEPARATE_ATTRIBS_EXT /;"	d
GL_SEPARATE_ATTRIBS_NV	glext.h	/^#define GL_SEPARATE_ATTRIBS_NV /;"	d
GL_SEPARATE_SPECULAR_COLOR	glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	d
GL_SET_AMD	glext.h	/^#define GL_SET_AMD /;"	d
GL_SGIS_detail_texture	glext.h	/^#define GL_SGIS_detail_texture /;"	d
GL_SGIS_fog_function	glext.h	/^#define GL_SGIS_fog_function /;"	d
GL_SGIS_generate_mipmap	glext.h	/^#define GL_SGIS_generate_mipmap /;"	d
GL_SGIS_multisample	glext.h	/^#define GL_SGIS_multisample /;"	d
GL_SGIS_pixel_texture	glext.h	/^#define GL_SGIS_pixel_texture /;"	d
GL_SGIS_point_line_texgen	glext.h	/^#define GL_SGIS_point_line_texgen /;"	d
GL_SGIS_point_parameters	glext.h	/^#define GL_SGIS_point_parameters /;"	d
GL_SGIS_sharpen_texture	glext.h	/^#define GL_SGIS_sharpen_texture /;"	d
GL_SGIS_texture4D	glext.h	/^#define GL_SGIS_texture4D /;"	d
GL_SGIS_texture_border_clamp	glext.h	/^#define GL_SGIS_texture_border_clamp /;"	d
GL_SGIS_texture_color_mask	glext.h	/^#define GL_SGIS_texture_color_mask /;"	d
GL_SGIS_texture_edge_clamp	glext.h	/^#define GL_SGIS_texture_edge_clamp /;"	d
GL_SGIS_texture_filter4	glext.h	/^#define GL_SGIS_texture_filter4 /;"	d
GL_SGIS_texture_lod	glext.h	/^#define GL_SGIS_texture_lod /;"	d
GL_SGIS_texture_select	glext.h	/^#define GL_SGIS_texture_select /;"	d
GL_SGIX_async	glext.h	/^#define GL_SGIX_async /;"	d
GL_SGIX_async_histogram	glext.h	/^#define GL_SGIX_async_histogram /;"	d
GL_SGIX_async_pixel	glext.h	/^#define GL_SGIX_async_pixel /;"	d
GL_SGIX_blend_alpha_minmax	glext.h	/^#define GL_SGIX_blend_alpha_minmax /;"	d
GL_SGIX_calligraphic_fragment	glext.h	/^#define GL_SGIX_calligraphic_fragment /;"	d
GL_SGIX_clipmap	glext.h	/^#define GL_SGIX_clipmap /;"	d
GL_SGIX_convolution_accuracy	glext.h	/^#define GL_SGIX_convolution_accuracy /;"	d
GL_SGIX_depth_pass_instrument	glext.h	/^#define GL_SGIX_depth_pass_instrument /;"	d
GL_SGIX_depth_texture	glext.h	/^#define GL_SGIX_depth_texture /;"	d
GL_SGIX_flush_raster	glext.h	/^#define GL_SGIX_flush_raster /;"	d
GL_SGIX_fog_offset	glext.h	/^#define GL_SGIX_fog_offset /;"	d
GL_SGIX_fragment_lighting	glext.h	/^#define GL_SGIX_fragment_lighting /;"	d
GL_SGIX_framezoom	glext.h	/^#define GL_SGIX_framezoom /;"	d
GL_SGIX_igloo_interface	glext.h	/^#define GL_SGIX_igloo_interface /;"	d
GL_SGIX_instruments	glext.h	/^#define GL_SGIX_instruments /;"	d
GL_SGIX_interlace	glext.h	/^#define GL_SGIX_interlace /;"	d
GL_SGIX_ir_instrument1	glext.h	/^#define GL_SGIX_ir_instrument1 /;"	d
GL_SGIX_list_priority	glext.h	/^#define GL_SGIX_list_priority /;"	d
GL_SGIX_pixel_texture	glext.h	/^#define GL_SGIX_pixel_texture /;"	d
GL_SGIX_pixel_tiles	glext.h	/^#define GL_SGIX_pixel_tiles /;"	d
GL_SGIX_polynomial_ffd	glext.h	/^#define GL_SGIX_polynomial_ffd /;"	d
GL_SGIX_reference_plane	glext.h	/^#define GL_SGIX_reference_plane /;"	d
GL_SGIX_resample	glext.h	/^#define GL_SGIX_resample /;"	d
GL_SGIX_scalebias_hint	glext.h	/^#define GL_SGIX_scalebias_hint /;"	d
GL_SGIX_shadow	glext.h	/^#define GL_SGIX_shadow /;"	d
GL_SGIX_shadow_ambient	glext.h	/^#define GL_SGIX_shadow_ambient /;"	d
GL_SGIX_sprite	glext.h	/^#define GL_SGIX_sprite /;"	d
GL_SGIX_subsample	glext.h	/^#define GL_SGIX_subsample /;"	d
GL_SGIX_tag_sample_buffer	glext.h	/^#define GL_SGIX_tag_sample_buffer /;"	d
GL_SGIX_texture_add_env	glext.h	/^#define GL_SGIX_texture_add_env /;"	d
GL_SGIX_texture_coordinate_clamp	glext.h	/^#define GL_SGIX_texture_coordinate_clamp /;"	d
GL_SGIX_texture_lod_bias	glext.h	/^#define GL_SGIX_texture_lod_bias /;"	d
GL_SGIX_texture_multi_buffer	glext.h	/^#define GL_SGIX_texture_multi_buffer /;"	d
GL_SGIX_texture_scale_bias	glext.h	/^#define GL_SGIX_texture_scale_bias /;"	d
GL_SGIX_vertex_preclip	glext.h	/^#define GL_SGIX_vertex_preclip /;"	d
GL_SGIX_ycrcb	glext.h	/^#define GL_SGIX_ycrcb /;"	d
GL_SGIX_ycrcb_subsample	glext.h	/^#define GL_SGIX_ycrcb_subsample /;"	d
GL_SGIX_ycrcba	glext.h	/^#define GL_SGIX_ycrcba /;"	d
GL_SGI_color_matrix	glext.h	/^#define GL_SGI_color_matrix /;"	d
GL_SGI_color_table	glext.h	/^#define GL_SGI_color_table /;"	d
GL_SGI_texture_color_table	glext.h	/^#define GL_SGI_texture_color_table /;"	d
GL_SHADER	glext.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_FORMATS	glext.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_COMPILER	glext.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_CONSISTENT_NV	glext.h	/^#define GL_SHADER_CONSISTENT_NV /;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	glext.h	/^#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT /;"	d
GL_SHADER_IMAGE_ATOMIC	glext.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	glext.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	glext.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	glext.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_OBJECT_ARB	glext.h	/^#define GL_SHADER_OBJECT_ARB /;"	d
GL_SHADER_OBJECT_EXT	glext.h	/^#define GL_SHADER_OBJECT_EXT /;"	d
GL_SHADER_OPERATION_NV	glext.h	/^#define GL_SHADER_OPERATION_NV /;"	d
GL_SHADER_SOURCE_LENGTH	glext.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	glext.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	glext.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	glext.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	glext.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	glext.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	glext.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	glext.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	glext.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADING_LANGUAGE_VERSION	glext.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	glext.h	/^#define GL_SHADING_LANGUAGE_VERSION_ARB /;"	d
GL_SHADOW_AMBIENT_SGIX	glext.h	/^#define GL_SHADOW_AMBIENT_SGIX /;"	d
GL_SHADOW_ATTENUATION_EXT	glext.h	/^#define GL_SHADOW_ATTENUATION_EXT /;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	glext.h	/^#define GL_SHARED_TEXTURE_PALETTE_EXT /;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	glext.h	/^#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_SIGNALED	glext.h	/^#define GL_SIGNALED /;"	d
GL_SIGNED_ALPHA8_NV	glext.h	/^#define GL_SIGNED_ALPHA8_NV /;"	d
GL_SIGNED_ALPHA_NV	glext.h	/^#define GL_SIGNED_ALPHA_NV /;"	d
GL_SIGNED_HILO16_NV	glext.h	/^#define GL_SIGNED_HILO16_NV /;"	d
GL_SIGNED_HILO8_NV	glext.h	/^#define GL_SIGNED_HILO8_NV /;"	d
GL_SIGNED_HILO_NV	glext.h	/^#define GL_SIGNED_HILO_NV /;"	d
GL_SIGNED_IDENTITY_NV	glext.h	/^#define GL_SIGNED_IDENTITY_NV /;"	d
GL_SIGNED_INTENSITY8_NV	glext.h	/^#define GL_SIGNED_INTENSITY8_NV /;"	d
GL_SIGNED_INTENSITY_NV	glext.h	/^#define GL_SIGNED_INTENSITY_NV /;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	glext.h	/^#define GL_SIGNED_LUMINANCE8_ALPHA8_NV /;"	d
GL_SIGNED_LUMINANCE8_NV	glext.h	/^#define GL_SIGNED_LUMINANCE8_NV /;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	glext.h	/^#define GL_SIGNED_LUMINANCE_ALPHA_NV /;"	d
GL_SIGNED_LUMINANCE_NV	glext.h	/^#define GL_SIGNED_LUMINANCE_NV /;"	d
GL_SIGNED_NEGATE_NV	glext.h	/^#define GL_SIGNED_NEGATE_NV /;"	d
GL_SIGNED_NORMALIZED	glext.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIGNED_RGB8_NV	glext.h	/^#define GL_SIGNED_RGB8_NV /;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	glext.h	/^#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV /;"	d
GL_SIGNED_RGBA8_NV	glext.h	/^#define GL_SIGNED_RGBA8_NV /;"	d
GL_SIGNED_RGBA_NV	glext.h	/^#define GL_SIGNED_RGBA_NV /;"	d
GL_SIGNED_RGB_NV	glext.h	/^#define GL_SIGNED_RGB_NV /;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	glext.h	/^#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SINGLE_COLOR	glext.h	/^#define GL_SINGLE_COLOR /;"	d
GL_SINGLE_COLOR_EXT	glext.h	/^#define GL_SINGLE_COLOR_EXT /;"	d
GL_SKIP_COMPONENTS1_NV	glext.h	/^#define GL_SKIP_COMPONENTS1_NV /;"	d
GL_SKIP_COMPONENTS2_NV	glext.h	/^#define GL_SKIP_COMPONENTS2_NV /;"	d
GL_SKIP_COMPONENTS3_NV	glext.h	/^#define GL_SKIP_COMPONENTS3_NV /;"	d
GL_SKIP_COMPONENTS4_NV	glext.h	/^#define GL_SKIP_COMPONENTS4_NV /;"	d
GL_SKIP_DECODE_EXT	glext.h	/^#define GL_SKIP_DECODE_EXT /;"	d
GL_SKIP_MISSING_GLYPH_NV	glext.h	/^#define GL_SKIP_MISSING_GLYPH_NV /;"	d
GL_SLICE_ACCUM_SUN	glext.h	/^#define GL_SLICE_ACCUM_SUN /;"	d
GL_SLUMINANCE	glext.h	/^#define GL_SLUMINANCE /;"	d
GL_SLUMINANCE8	glext.h	/^#define GL_SLUMINANCE8 /;"	d
GL_SLUMINANCE8_ALPHA8	glext.h	/^#define GL_SLUMINANCE8_ALPHA8 /;"	d
GL_SLUMINANCE8_ALPHA8_EXT	glext.h	/^#define GL_SLUMINANCE8_ALPHA8_EXT /;"	d
GL_SLUMINANCE8_EXT	glext.h	/^#define GL_SLUMINANCE8_EXT /;"	d
GL_SLUMINANCE_ALPHA	glext.h	/^#define GL_SLUMINANCE_ALPHA /;"	d
GL_SLUMINANCE_ALPHA_EXT	glext.h	/^#define GL_SLUMINANCE_ALPHA_EXT /;"	d
GL_SLUMINANCE_EXT	glext.h	/^#define GL_SLUMINANCE_EXT /;"	d
GL_SMALL_CCW_ARC_TO_NV	glext.h	/^#define GL_SMALL_CCW_ARC_TO_NV /;"	d
GL_SMALL_CW_ARC_TO_NV	glext.h	/^#define GL_SMALL_CW_ARC_TO_NV /;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	glext.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	glext.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	glext.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	glext.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	glext.h	/^#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_SOFTLIGHT_NV	glext.h	/^#define GL_SOFTLIGHT_NV /;"	d
GL_SOURCE0_ALPHA	glext.h	/^#define GL_SOURCE0_ALPHA /;"	d
GL_SOURCE0_ALPHA_ARB	glext.h	/^#define GL_SOURCE0_ALPHA_ARB /;"	d
GL_SOURCE0_ALPHA_EXT	glext.h	/^#define GL_SOURCE0_ALPHA_EXT /;"	d
GL_SOURCE0_RGB	glext.h	/^#define GL_SOURCE0_RGB /;"	d
GL_SOURCE0_RGB_ARB	glext.h	/^#define GL_SOURCE0_RGB_ARB /;"	d
GL_SOURCE0_RGB_EXT	glext.h	/^#define GL_SOURCE0_RGB_EXT /;"	d
GL_SOURCE1_ALPHA	glext.h	/^#define GL_SOURCE1_ALPHA /;"	d
GL_SOURCE1_ALPHA_ARB	glext.h	/^#define GL_SOURCE1_ALPHA_ARB /;"	d
GL_SOURCE1_ALPHA_EXT	glext.h	/^#define GL_SOURCE1_ALPHA_EXT /;"	d
GL_SOURCE1_RGB	glext.h	/^#define GL_SOURCE1_RGB /;"	d
GL_SOURCE1_RGB_ARB	glext.h	/^#define GL_SOURCE1_RGB_ARB /;"	d
GL_SOURCE1_RGB_EXT	glext.h	/^#define GL_SOURCE1_RGB_EXT /;"	d
GL_SOURCE2_ALPHA	glext.h	/^#define GL_SOURCE2_ALPHA /;"	d
GL_SOURCE2_ALPHA_ARB	glext.h	/^#define GL_SOURCE2_ALPHA_ARB /;"	d
GL_SOURCE2_ALPHA_EXT	glext.h	/^#define GL_SOURCE2_ALPHA_EXT /;"	d
GL_SOURCE2_RGB	glext.h	/^#define GL_SOURCE2_RGB /;"	d
GL_SOURCE2_RGB_ARB	glext.h	/^#define GL_SOURCE2_RGB_ARB /;"	d
GL_SOURCE2_RGB_EXT	glext.h	/^#define GL_SOURCE2_RGB_EXT /;"	d
GL_SOURCE3_ALPHA_NV	glext.h	/^#define GL_SOURCE3_ALPHA_NV /;"	d
GL_SOURCE3_RGB_NV	glext.h	/^#define GL_SOURCE3_RGB_NV /;"	d
GL_SPARE0_NV	glext.h	/^#define GL_SPARE0_NV /;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	glext.h	/^#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV /;"	d
GL_SPARE1_NV	glext.h	/^#define GL_SPARE1_NV /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	glext.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	d
GL_SPRITE_AXIAL_SGIX	glext.h	/^#define GL_SPRITE_AXIAL_SGIX /;"	d
GL_SPRITE_AXIS_SGIX	glext.h	/^#define GL_SPRITE_AXIS_SGIX /;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	glext.h	/^#define GL_SPRITE_EYE_ALIGNED_SGIX /;"	d
GL_SPRITE_MODE_SGIX	glext.h	/^#define GL_SPRITE_MODE_SGIX /;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	glext.h	/^#define GL_SPRITE_OBJECT_ALIGNED_SGIX /;"	d
GL_SPRITE_SGIX	glext.h	/^#define GL_SPRITE_SGIX /;"	d
GL_SPRITE_TRANSLATION_SGIX	glext.h	/^#define GL_SPRITE_TRANSLATION_SGIX /;"	d
GL_SQUARE_NV	glext.h	/^#define GL_SQUARE_NV /;"	d
GL_SRC0_ALPHA	glext.h	/^#define GL_SRC0_ALPHA /;"	d
GL_SRC0_RGB	glext.h	/^#define GL_SRC0_RGB /;"	d
GL_SRC1_ALPHA	glext.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	glext.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC1_RGB	glext.h	/^#define GL_SRC1_RGB /;"	d
GL_SRC2_ALPHA	glext.h	/^#define GL_SRC2_ALPHA /;"	d
GL_SRC2_RGB	glext.h	/^#define GL_SRC2_RGB /;"	d
GL_SRC_ATOP_NV	glext.h	/^#define GL_SRC_ATOP_NV /;"	d
GL_SRC_IN_NV	glext.h	/^#define GL_SRC_IN_NV /;"	d
GL_SRC_NV	glext.h	/^#define GL_SRC_NV /;"	d
GL_SRC_OUT_NV	glext.h	/^#define GL_SRC_OUT_NV /;"	d
GL_SRC_OVER_NV	glext.h	/^#define GL_SRC_OVER_NV /;"	d
GL_SRGB	glext.h	/^#define GL_SRGB /;"	d
GL_SRGB8	glext.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	glext.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB8_ALPHA8_EXT	glext.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	d
GL_SRGB8_EXT	glext.h	/^#define GL_SRGB8_EXT /;"	d
GL_SRGB_ALPHA	glext.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_ALPHA_EXT	glext.h	/^#define GL_SRGB_ALPHA_EXT /;"	d
GL_SRGB_DECODE_ARB	glext.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_EXT	glext.h	/^#define GL_SRGB_EXT /;"	d
GL_SRGB_READ	glext.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	glext.h	/^#define GL_SRGB_WRITE /;"	d
GL_STANDARD_FONT_NAME_NV	glext.h	/^#define GL_STANDARD_FONT_NAME_NV /;"	d
GL_STATIC_ATI	glext.h	/^#define GL_STATIC_ATI /;"	d
GL_STATIC_COPY	glext.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_COPY_ARB	glext.h	/^#define GL_STATIC_COPY_ARB /;"	d
GL_STATIC_DRAW	glext.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW_ARB	glext.h	/^#define GL_STATIC_DRAW_ARB /;"	d
GL_STATIC_READ	glext.h	/^#define GL_STATIC_READ /;"	d
GL_STATIC_READ_ARB	glext.h	/^#define GL_STATIC_READ_ARB /;"	d
GL_STATIC_VERTEX_ARRAY_IBM	glext.h	/^#define GL_STATIC_VERTEX_ARRAY_IBM /;"	d
GL_STENCIL_ATTACHMENT	glext.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_ATTACHMENT_EXT	glext.h	/^#define GL_STENCIL_ATTACHMENT_EXT /;"	d
GL_STENCIL_BACK_FAIL	glext.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL_ATI	glext.h	/^#define GL_STENCIL_BACK_FAIL_ATI /;"	d
GL_STENCIL_BACK_FUNC	glext.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC_ATI	glext.h	/^#define GL_STENCIL_BACK_FUNC_ATI /;"	d
GL_STENCIL_BACK_OP_VALUE_AMD	glext.h	/^#define GL_STENCIL_BACK_OP_VALUE_AMD /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI /;"	d
GL_STENCIL_BACK_REF	glext.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	glext.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	glext.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	glext.h	/^#define GL_STENCIL_CLEAR_TAG_VALUE_EXT /;"	d
GL_STENCIL_COMPONENTS	glext.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_INDEX1	glext.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	glext.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX16_EXT	glext.h	/^#define GL_STENCIL_INDEX16_EXT /;"	d
GL_STENCIL_INDEX1_EXT	glext.h	/^#define GL_STENCIL_INDEX1_EXT /;"	d
GL_STENCIL_INDEX4	glext.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX4_EXT	glext.h	/^#define GL_STENCIL_INDEX4_EXT /;"	d
GL_STENCIL_INDEX8	glext.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_INDEX8_EXT	glext.h	/^#define GL_STENCIL_INDEX8_EXT /;"	d
GL_STENCIL_OP_VALUE_AMD	glext.h	/^#define GL_STENCIL_OP_VALUE_AMD /;"	d
GL_STENCIL_RENDERABLE	glext.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_TAG_BITS_EXT	glext.h	/^#define GL_STENCIL_TAG_BITS_EXT /;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	glext.h	/^#define GL_STENCIL_TEST_TWO_SIDE_EXT /;"	d
GL_STORAGE_CACHED_APPLE	glext.h	/^#define GL_STORAGE_CACHED_APPLE /;"	d
GL_STORAGE_CLIENT_APPLE	glext.h	/^#define GL_STORAGE_CLIENT_APPLE /;"	d
GL_STORAGE_PRIVATE_APPLE	glext.h	/^#define GL_STORAGE_PRIVATE_APPLE /;"	d
GL_STORAGE_SHARED_APPLE	glext.h	/^#define GL_STORAGE_SHARED_APPLE /;"	d
GL_STREAM_COPY	glext.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_COPY_ARB	glext.h	/^#define GL_STREAM_COPY_ARB /;"	d
GL_STREAM_DRAW	glext.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW_ARB	glext.h	/^#define GL_STREAM_DRAW_ARB /;"	d
GL_STREAM_READ	glext.h	/^#define GL_STREAM_READ /;"	d
GL_STREAM_READ_ARB	glext.h	/^#define GL_STREAM_READ_ARB /;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	glext.h	/^#define GL_STRICT_DEPTHFUNC_HINT_PGI /;"	d
GL_STRICT_LIGHTING_HINT_PGI	glext.h	/^#define GL_STRICT_LIGHTING_HINT_PGI /;"	d
GL_STRICT_SCISSOR_HINT_PGI	glext.h	/^#define GL_STRICT_SCISSOR_HINT_PGI /;"	d
GL_SUBSAMPLE_DISTANCE_AMD	glext.h	/^#define GL_SUBSAMPLE_DISTANCE_AMD /;"	d
GL_SUBTRACT	glext.h	/^#define GL_SUBTRACT /;"	d
GL_SUBTRACT_ARB	glext.h	/^#define GL_SUBTRACT_ARB /;"	d
GL_SUB_ATI	glext.h	/^#define GL_SUB_ATI /;"	d
GL_SUCCESS_NV	glext.h	/^#define GL_SUCCESS_NV /;"	d
GL_SUNX_constant_data	glext.h	/^#define GL_SUNX_constant_data /;"	d
GL_SUN_convolution_border_modes	glext.h	/^#define GL_SUN_convolution_border_modes /;"	d
GL_SUN_global_alpha	glext.h	/^#define GL_SUN_global_alpha /;"	d
GL_SUN_mesh_array	glext.h	/^#define GL_SUN_mesh_array /;"	d
GL_SUN_slice_accum	glext.h	/^#define GL_SUN_slice_accum /;"	d
GL_SUN_triangle_list	glext.h	/^#define GL_SUN_triangle_list /;"	d
GL_SUN_vertex	glext.h	/^#define GL_SUN_vertex /;"	d
GL_SURFACE_MAPPED_NV	glext.h	/^#define GL_SURFACE_MAPPED_NV /;"	d
GL_SURFACE_REGISTERED_NV	glext.h	/^#define GL_SURFACE_REGISTERED_NV /;"	d
GL_SURFACE_STATE_NV	glext.h	/^#define GL_SURFACE_STATE_NV /;"	d
GL_SWIZZLE_STQ_ATI	glext.h	/^#define GL_SWIZZLE_STQ_ATI /;"	d
GL_SWIZZLE_STQ_DQ_ATI	glext.h	/^#define GL_SWIZZLE_STQ_DQ_ATI /;"	d
GL_SWIZZLE_STRQ_ATI	glext.h	/^#define GL_SWIZZLE_STRQ_ATI /;"	d
GL_SWIZZLE_STRQ_DQ_ATI	glext.h	/^#define GL_SWIZZLE_STRQ_DQ_ATI /;"	d
GL_SWIZZLE_STR_ATI	glext.h	/^#define GL_SWIZZLE_STR_ATI /;"	d
GL_SWIZZLE_STR_DR_ATI	glext.h	/^#define GL_SWIZZLE_STR_DR_ATI /;"	d
GL_SYNC_CL_EVENT_ARB	glext.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	glext.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	glext.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	glext.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	glext.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	glext.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	glext.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	glext.h	/^#define GL_SYNC_STATUS /;"	d
GL_SYNC_X11_FENCE_EXT	glext.h	/^#define GL_SYNC_X11_FENCE_EXT /;"	d
GL_SYSTEM_FONT_NAME_NV	glext.h	/^#define GL_SYSTEM_FONT_NAME_NV /;"	d
GL_T2F_IUI_N3F_V2F_EXT	glext.h	/^#define GL_T2F_IUI_N3F_V2F_EXT /;"	d
GL_T2F_IUI_N3F_V3F_EXT	glext.h	/^#define GL_T2F_IUI_N3F_V3F_EXT /;"	d
GL_T2F_IUI_V2F_EXT	glext.h	/^#define GL_T2F_IUI_V2F_EXT /;"	d
GL_T2F_IUI_V3F_EXT	glext.h	/^#define GL_T2F_IUI_V3F_EXT /;"	d
GL_TABLE_TOO_LARGE	glext.h	/^#define GL_TABLE_TOO_LARGE /;"	d
GL_TABLE_TOO_LARGE_EXT	glext.h	/^#define GL_TABLE_TOO_LARGE_EXT /;"	d
GL_TANGENT_ARRAY_EXT	glext.h	/^#define GL_TANGENT_ARRAY_EXT /;"	d
GL_TANGENT_ARRAY_POINTER_EXT	glext.h	/^#define GL_TANGENT_ARRAY_POINTER_EXT /;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	glext.h	/^#define GL_TANGENT_ARRAY_STRIDE_EXT /;"	d
GL_TANGENT_ARRAY_TYPE_EXT	glext.h	/^#define GL_TANGENT_ARRAY_TYPE_EXT /;"	d
GL_TESSELLATION_FACTOR_AMD	glext.h	/^#define GL_TESSELLATION_FACTOR_AMD /;"	d
GL_TESSELLATION_MODE_AMD	glext.h	/^#define GL_TESSELLATION_MODE_AMD /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	glext.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_PROGRAM_NV	glext.h	/^#define GL_TESS_CONTROL_PROGRAM_NV /;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_CONTROL_SHADER	glext.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	glext.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SUBROUTINE	glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	glext.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_PROGRAM_NV	glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_NV /;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_EVALUATION_SHADER	glext.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	glext.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SUBROUTINE	glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	glext.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	glext.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_POINT_MODE	glext.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_SPACING	glext.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_VERTEX_ORDER	glext.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TEXCOORD1_BIT_PGI	glext.h	/^#define GL_TEXCOORD1_BIT_PGI /;"	d
GL_TEXCOORD2_BIT_PGI	glext.h	/^#define GL_TEXCOORD2_BIT_PGI /;"	d
GL_TEXCOORD3_BIT_PGI	glext.h	/^#define GL_TEXCOORD3_BIT_PGI /;"	d
GL_TEXCOORD4_BIT_PGI	glext.h	/^#define GL_TEXCOORD4_BIT_PGI /;"	d
GL_TEXTURE0	glext.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0_ARB	glext.h	/^#define GL_TEXTURE0_ARB /;"	d
GL_TEXTURE1	glext.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	glext.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10_ARB	glext.h	/^#define GL_TEXTURE10_ARB /;"	d
GL_TEXTURE11	glext.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11_ARB	glext.h	/^#define GL_TEXTURE11_ARB /;"	d
GL_TEXTURE12	glext.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12_ARB	glext.h	/^#define GL_TEXTURE12_ARB /;"	d
GL_TEXTURE13	glext.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13_ARB	glext.h	/^#define GL_TEXTURE13_ARB /;"	d
GL_TEXTURE14	glext.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14_ARB	glext.h	/^#define GL_TEXTURE14_ARB /;"	d
GL_TEXTURE15	glext.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15_ARB	glext.h	/^#define GL_TEXTURE15_ARB /;"	d
GL_TEXTURE16	glext.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16_ARB	glext.h	/^#define GL_TEXTURE16_ARB /;"	d
GL_TEXTURE17	glext.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17_ARB	glext.h	/^#define GL_TEXTURE17_ARB /;"	d
GL_TEXTURE18	glext.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18_ARB	glext.h	/^#define GL_TEXTURE18_ARB /;"	d
GL_TEXTURE19	glext.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19_ARB	glext.h	/^#define GL_TEXTURE19_ARB /;"	d
GL_TEXTURE1_ARB	glext.h	/^#define GL_TEXTURE1_ARB /;"	d
GL_TEXTURE2	glext.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	glext.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20_ARB	glext.h	/^#define GL_TEXTURE20_ARB /;"	d
GL_TEXTURE21	glext.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21_ARB	glext.h	/^#define GL_TEXTURE21_ARB /;"	d
GL_TEXTURE22	glext.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22_ARB	glext.h	/^#define GL_TEXTURE22_ARB /;"	d
GL_TEXTURE23	glext.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23_ARB	glext.h	/^#define GL_TEXTURE23_ARB /;"	d
GL_TEXTURE24	glext.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24_ARB	glext.h	/^#define GL_TEXTURE24_ARB /;"	d
GL_TEXTURE25	glext.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25_ARB	glext.h	/^#define GL_TEXTURE25_ARB /;"	d
GL_TEXTURE26	glext.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26_ARB	glext.h	/^#define GL_TEXTURE26_ARB /;"	d
GL_TEXTURE27	glext.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27_ARB	glext.h	/^#define GL_TEXTURE27_ARB /;"	d
GL_TEXTURE28	glext.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28_ARB	glext.h	/^#define GL_TEXTURE28_ARB /;"	d
GL_TEXTURE29	glext.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29_ARB	glext.h	/^#define GL_TEXTURE29_ARB /;"	d
GL_TEXTURE2_ARB	glext.h	/^#define GL_TEXTURE2_ARB /;"	d
GL_TEXTURE3	glext.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	glext.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30_ARB	glext.h	/^#define GL_TEXTURE30_ARB /;"	d
GL_TEXTURE31	glext.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31_ARB	glext.h	/^#define GL_TEXTURE31_ARB /;"	d
GL_TEXTURE3_ARB	glext.h	/^#define GL_TEXTURE3_ARB /;"	d
GL_TEXTURE4	glext.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4_ARB	glext.h	/^#define GL_TEXTURE4_ARB /;"	d
GL_TEXTURE5	glext.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5_ARB	glext.h	/^#define GL_TEXTURE5_ARB /;"	d
GL_TEXTURE6	glext.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6_ARB	glext.h	/^#define GL_TEXTURE6_ARB /;"	d
GL_TEXTURE7	glext.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7_ARB	glext.h	/^#define GL_TEXTURE7_ARB /;"	d
GL_TEXTURE8	glext.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8_ARB	glext.h	/^#define GL_TEXTURE8_ARB /;"	d
GL_TEXTURE9	glext.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9_ARB	glext.h	/^#define GL_TEXTURE9_ARB /;"	d
GL_TEXTURE_1D_ARRAY	glext.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_1D_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_1D_ARRAY_EXT /;"	d
GL_TEXTURE_1D_BINDING_EXT	glext.h	/^#define GL_TEXTURE_1D_BINDING_EXT /;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	glext.h	/^#define GL_TEXTURE_1D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_1D_STACK_MESAX	glext.h	/^#define GL_TEXTURE_1D_STACK_MESAX /;"	d
GL_TEXTURE_2D_ARRAY	glext.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_2D_ARRAY_EXT /;"	d
GL_TEXTURE_2D_BINDING_EXT	glext.h	/^#define GL_TEXTURE_2D_BINDING_EXT /;"	d
GL_TEXTURE_2D_MULTISAMPLE	glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	glext.h	/^#define GL_TEXTURE_2D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_2D_STACK_MESAX	glext.h	/^#define GL_TEXTURE_2D_STACK_MESAX /;"	d
GL_TEXTURE_3D	glext.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_3D_BINDING_EXT	glext.h	/^#define GL_TEXTURE_3D_BINDING_EXT /;"	d
GL_TEXTURE_3D_EXT	glext.h	/^#define GL_TEXTURE_3D_EXT /;"	d
GL_TEXTURE_4DSIZE_SGIS	glext.h	/^#define GL_TEXTURE_4DSIZE_SGIS /;"	d
GL_TEXTURE_4D_BINDING_SGIS	glext.h	/^#define GL_TEXTURE_4D_BINDING_SGIS /;"	d
GL_TEXTURE_4D_SGIS	glext.h	/^#define GL_TEXTURE_4D_SGIS /;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	glext.h	/^#define GL_TEXTURE_ALPHA_SIZE_EXT /;"	d
GL_TEXTURE_ALPHA_TYPE	glext.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	glext.h	/^#define GL_TEXTURE_ALPHA_TYPE_ARB /;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	glext.h	/^#define GL_TEXTURE_APPLICATION_MODE_EXT /;"	d
GL_TEXTURE_BASE_LEVEL	glext.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	glext.h	/^#define GL_TEXTURE_BASE_LEVEL_SGIS /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	glext.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	glext.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_ARB /;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_EXT /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_EXT /;"	d
GL_TEXTURE_BINDING_RECTANGLE	glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_NV /;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	glext.h	/^#define GL_TEXTURE_BINDING_RENDERBUFFER_NV /;"	d
GL_TEXTURE_BLUE_SIZE_EXT	glext.h	/^#define GL_TEXTURE_BLUE_SIZE_EXT /;"	d
GL_TEXTURE_BLUE_TYPE	glext.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BLUE_TYPE_ARB	glext.h	/^#define GL_TEXTURE_BLUE_TYPE_ARB /;"	d
GL_TEXTURE_BORDER_VALUES_NV	glext.h	/^#define GL_TEXTURE_BORDER_VALUES_NV /;"	d
GL_TEXTURE_BUFFER	glext.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_ARB	glext.h	/^#define GL_TEXTURE_BUFFER_ARB /;"	d
GL_TEXTURE_BUFFER_BINDING	glext.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT /;"	d
GL_TEXTURE_BUFFER_EXT	glext.h	/^#define GL_TEXTURE_BUFFER_EXT /;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_ARB /;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_EXT /;"	d
GL_TEXTURE_BUFFER_OFFSET	glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_SIZE	glext.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_CENTER_SGIX /;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX /;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_FRAME_SGIX /;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_TEXTURE_COLOR_SAMPLES_NV	glext.h	/^#define GL_TEXTURE_COLOR_SAMPLES_NV /;"	d
GL_TEXTURE_COLOR_TABLE_SGI	glext.h	/^#define GL_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	glext.h	/^#define GL_TEXTURE_COLOR_WRITEMASK_SGIS /;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	glext.h	/^#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC	glext.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	glext.h	/^#define GL_TEXTURE_COMPARE_FUNC_ARB /;"	d
GL_TEXTURE_COMPARE_MODE	glext.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPARE_MODE_ARB	glext.h	/^#define GL_TEXTURE_COMPARE_MODE_ARB /;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	glext.h	/^#define GL_TEXTURE_COMPARE_OPERATOR_SGIX /;"	d
GL_TEXTURE_COMPARE_SGIX	glext.h	/^#define GL_TEXTURE_COMPARE_SGIX /;"	d
GL_TEXTURE_COMPRESSED	glext.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_ARB	glext.h	/^#define GL_TEXTURE_COMPRESSED_ARB /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB /;"	d
GL_TEXTURE_COMPRESSION_HINT	glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT_ARB /;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	glext.h	/^#define GL_TEXTURE_CONSTANT_DATA_SUNX /;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT /;"	d
GL_TEXTURE_COORD_NV	glext.h	/^#define GL_TEXTURE_COORD_NV /;"	d
GL_TEXTURE_COVERAGE_SAMPLES_NV	glext.h	/^#define GL_TEXTURE_COVERAGE_SAMPLES_NV /;"	d
GL_TEXTURE_CUBE_MAP	glext.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARB /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	glext.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	glext.h	/^#define GL_TEXTURE_DEFORMATION_BIT_SGIX /;"	d
GL_TEXTURE_DEFORMATION_SGIX	glext.h	/^#define GL_TEXTURE_DEFORMATION_SGIX /;"	d
GL_TEXTURE_DEPTH	glext.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_EXT	glext.h	/^#define GL_TEXTURE_DEPTH_EXT /;"	d
GL_TEXTURE_DEPTH_SIZE	glext.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	glext.h	/^#define GL_TEXTURE_DEPTH_SIZE_ARB /;"	d
GL_TEXTURE_DEPTH_TYPE	glext.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	glext.h	/^#define GL_TEXTURE_DEPTH_TYPE_ARB /;"	d
GL_TEXTURE_DS_SIZE_NV	glext.h	/^#define GL_TEXTURE_DS_SIZE_NV /;"	d
GL_TEXTURE_DT_SIZE_NV	glext.h	/^#define GL_TEXTURE_DT_SIZE_NV /;"	d
GL_TEXTURE_ENV_BIAS_SGIX	glext.h	/^#define GL_TEXTURE_ENV_BIAS_SGIX /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	glext.h	/^#define GL_TEXTURE_FILTER4_SIZE_SGIS /;"	d
GL_TEXTURE_FILTER_CONTROL	glext.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	glext.h	/^#define GL_TEXTURE_FILTER_CONTROL_EXT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	glext.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	glext.h	/^#define GL_TEXTURE_FLOAT_COMPONENTS_NV /;"	d
GL_TEXTURE_FREE_MEMORY_ATI	glext.h	/^#define GL_TEXTURE_FREE_MEMORY_ATI /;"	d
GL_TEXTURE_GATHER	glext.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	glext.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GEQUAL_R_SGIX	glext.h	/^#define GL_TEXTURE_GEQUAL_R_SGIX /;"	d
GL_TEXTURE_GREEN_SIZE_EXT	glext.h	/^#define GL_TEXTURE_GREEN_SIZE_EXT /;"	d
GL_TEXTURE_GREEN_TYPE	glext.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_GREEN_TYPE_ARB	glext.h	/^#define GL_TEXTURE_GREEN_TYPE_ARB /;"	d
GL_TEXTURE_HI_SIZE_NV	glext.h	/^#define GL_TEXTURE_HI_SIZE_NV /;"	d
GL_TEXTURE_IMAGE_FORMAT	glext.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	glext.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	glext.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	glext.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INDEX_SIZE_EXT	glext.h	/^#define GL_TEXTURE_INDEX_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	glext.h	/^#define GL_TEXTURE_INTENSITY_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_TYPE	glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE /;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE_ARB /;"	d
GL_TEXTURE_LEQUAL_R_SGIX	glext.h	/^#define GL_TEXTURE_LEQUAL_R_SGIX /;"	d
GL_TEXTURE_LIGHTING_MODE_HP	glext.h	/^#define GL_TEXTURE_LIGHTING_MODE_HP /;"	d
GL_TEXTURE_LIGHT_EXT	glext.h	/^#define GL_TEXTURE_LIGHT_EXT /;"	d
GL_TEXTURE_LOD_BIAS	glext.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LOD_BIAS_EXT	glext.h	/^#define GL_TEXTURE_LOD_BIAS_EXT /;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	glext.h	/^#define GL_TEXTURE_LOD_BIAS_R_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	glext.h	/^#define GL_TEXTURE_LOD_BIAS_S_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	glext.h	/^#define GL_TEXTURE_LOD_BIAS_T_SGIX /;"	d
GL_TEXTURE_LO_SIZE_NV	glext.h	/^#define GL_TEXTURE_LO_SIZE_NV /;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	glext.h	/^#define GL_TEXTURE_LUMINANCE_SIZE_EXT /;"	d
GL_TEXTURE_LUMINANCE_TYPE	glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE /;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE_ARB /;"	d
GL_TEXTURE_MAG_SIZE_NV	glext.h	/^#define GL_TEXTURE_MAG_SIZE_NV /;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	glext.h	/^#define GL_TEXTURE_MATERIAL_FACE_EXT /;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	glext.h	/^#define GL_TEXTURE_MATERIAL_PARAMETER_EXT /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	glext.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	glext.h	/^#define GL_TEXTURE_MAX_CLAMP_R_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	glext.h	/^#define GL_TEXTURE_MAX_CLAMP_S_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	glext.h	/^#define GL_TEXTURE_MAX_CLAMP_T_SGIX /;"	d
GL_TEXTURE_MAX_LEVEL	glext.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	glext.h	/^#define GL_TEXTURE_MAX_LEVEL_SGIS /;"	d
GL_TEXTURE_MAX_LOD	glext.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MAX_LOD_SGIS	glext.h	/^#define GL_TEXTURE_MAX_LOD_SGIS /;"	d
GL_TEXTURE_MEMORY_LAYOUT_INTEL	glext.h	/^#define GL_TEXTURE_MEMORY_LAYOUT_INTEL /;"	d
GL_TEXTURE_MIN_LOD	glext.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_MIN_LOD_SGIS	glext.h	/^#define GL_TEXTURE_MIN_LOD_SGIS /;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	glext.h	/^#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX /;"	d
GL_TEXTURE_NORMAL_EXT	glext.h	/^#define GL_TEXTURE_NORMAL_EXT /;"	d
GL_TEXTURE_POST_SPECULAR_HP	glext.h	/^#define GL_TEXTURE_POST_SPECULAR_HP /;"	d
GL_TEXTURE_PRE_SPECULAR_HP	glext.h	/^#define GL_TEXTURE_PRE_SPECULAR_HP /;"	d
GL_TEXTURE_PRIORITY_EXT	glext.h	/^#define GL_TEXTURE_PRIORITY_EXT /;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	glext.h	/^#define GL_TEXTURE_RANGE_LENGTH_APPLE /;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	glext.h	/^#define GL_TEXTURE_RANGE_POINTER_APPLE /;"	d
GL_TEXTURE_RECTANGLE	glext.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RECTANGLE_ARB	glext.h	/^#define GL_TEXTURE_RECTANGLE_ARB /;"	d
GL_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_TEXTURE_RECTANGLE_NV /;"	d
GL_TEXTURE_RED_SIZE_EXT	glext.h	/^#define GL_TEXTURE_RED_SIZE_EXT /;"	d
GL_TEXTURE_RED_TYPE	glext.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_RED_TYPE_ARB	glext.h	/^#define GL_TEXTURE_RED_TYPE_ARB /;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	glext.h	/^#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV /;"	d
GL_TEXTURE_RENDERBUFFER_NV	glext.h	/^#define GL_TEXTURE_RENDERBUFFER_NV /;"	d
GL_TEXTURE_RESIDENT_EXT	glext.h	/^#define GL_TEXTURE_RESIDENT_EXT /;"	d
GL_TEXTURE_SAMPLES	glext.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHADER_NV	glext.h	/^#define GL_TEXTURE_SHADER_NV /;"	d
GL_TEXTURE_SHADOW	glext.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	glext.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SHARED_SIZE_EXT	glext.h	/^#define GL_TEXTURE_SHARED_SIZE_EXT /;"	d
GL_TEXTURE_SPARSE_ARB	glext.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	d
GL_TEXTURE_SRGB_DECODE_EXT	glext.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	d
GL_TEXTURE_STENCIL_SIZE	glext.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	glext.h	/^#define GL_TEXTURE_STENCIL_SIZE_EXT /;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	glext.h	/^#define GL_TEXTURE_STORAGE_HINT_APPLE /;"	d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	glext.h	/^#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD /;"	d
GL_TEXTURE_SWIZZLE_A	glext.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_A_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_A_EXT /;"	d
GL_TEXTURE_SWIZZLE_B	glext.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_B_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_B_EXT /;"	d
GL_TEXTURE_SWIZZLE_G	glext.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_G_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_G_EXT /;"	d
GL_TEXTURE_SWIZZLE_R	glext.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA_EXT /;"	d
GL_TEXTURE_SWIZZLE_R_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_R_EXT /;"	d
GL_TEXTURE_TOO_LARGE_EXT	glext.h	/^#define GL_TEXTURE_TOO_LARGE_EXT /;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	glext.h	/^#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_VIEW	glext.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	glext.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	glext.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	glext.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	glext.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_WRAP_Q_SGIS	glext.h	/^#define GL_TEXTURE_WRAP_Q_SGIS /;"	d
GL_TEXTURE_WRAP_R	glext.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_R_EXT	glext.h	/^#define GL_TEXTURE_WRAP_R_EXT /;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	glext.h	/^#define GL_TEXT_FRAGMENT_SHADER_ATI /;"	d
GL_TIMEOUT_EXPIRED	glext.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	glext.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	glext.h	/^#define GL_TIMESTAMP /;"	d
GL_TIME_ELAPSED	glext.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TIME_ELAPSED_EXT	glext.h	/^#define GL_TIME_ELAPSED_EXT /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	glext.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	glext.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRACK_MATRIX_NV	glext.h	/^#define GL_TRACK_MATRIX_NV /;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	glext.h	/^#define GL_TRACK_MATRIX_TRANSFORM_NV /;"	d
GL_TRANSFORM_FEEDBACK	glext.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_NV /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	glext.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV /;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_RECORD_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT /;"	d
GL_TRANSFORM_HINT_APPLE	glext.h	/^#define GL_TRANSFORM_HINT_APPLE /;"	d
GL_TRANSLATE_2D_NV	glext.h	/^#define GL_TRANSLATE_2D_NV /;"	d
GL_TRANSLATE_3D_NV	glext.h	/^#define GL_TRANSLATE_3D_NV /;"	d
GL_TRANSLATE_X_NV	glext.h	/^#define GL_TRANSLATE_X_NV /;"	d
GL_TRANSLATE_Y_NV	glext.h	/^#define GL_TRANSLATE_Y_NV /;"	d
GL_TRANSPOSE_AFFINE_2D_NV	glext.h	/^#define GL_TRANSPOSE_AFFINE_2D_NV /;"	d
GL_TRANSPOSE_AFFINE_3D_NV	glext.h	/^#define GL_TRANSPOSE_AFFINE_3D_NV /;"	d
GL_TRANSPOSE_COLOR_MATRIX	glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX_ARB /;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_CURRENT_MATRIX_ARB /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB /;"	d
GL_TRANSPOSE_NV	glext.h	/^#define GL_TRANSPOSE_NV /;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	glext.h	/^#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB /;"	d
GL_TRIANGLES_ADJACENCY	glext.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLES_ADJACENCY_ARB	glext.h	/^#define GL_TRIANGLES_ADJACENCY_ARB /;"	d
GL_TRIANGLES_ADJACENCY_EXT	glext.h	/^#define GL_TRIANGLES_ADJACENCY_EXT /;"	d
GL_TRIANGLE_LIST_SUN	glext.h	/^#define GL_TRIANGLE_LIST_SUN /;"	d
GL_TRIANGLE_MESH_SUN	glext.h	/^#define GL_TRIANGLE_MESH_SUN /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_ARB /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_EXT /;"	d
GL_TRIANGULAR_NV	glext.h	/^#define GL_TRIANGULAR_NV /;"	d
GL_TYPE	glext.h	/^#define GL_TYPE /;"	d
GL_UNCORRELATED_NV	glext.h	/^#define GL_UNCORRELATED_NV /;"	d
GL_UNDEFINED_APPLE	glext.h	/^#define GL_UNDEFINED_APPLE /;"	d
GL_UNDEFINED_VERTEX	glext.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNIFORM	glext.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ARRAY_STRIDE	glext.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	glext.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	glext.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BARRIER_BIT_EXT	glext.h	/^#define GL_UNIFORM_BARRIER_BIT_EXT /;"	d
GL_UNIFORM_BLOCK	glext.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	glext.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	glext.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	glext.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	glext.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	glext.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_BINDING	glext.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	glext.h	/^#define GL_UNIFORM_BUFFER_BINDING_EXT /;"	d
GL_UNIFORM_BUFFER_EXT	glext.h	/^#define GL_UNIFORM_BUFFER_EXT /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	glext.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	glext.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	glext.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_IS_ROW_MAJOR	glext.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	glext.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	glext.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	glext.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	glext.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	glext.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	glext.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	glext.h	/^#define GL_UNPACK_CLIENT_STORAGE_APPLE /;"	d
GL_UNPACK_CMYK_HINT_EXT	glext.h	/^#define GL_UNPACK_CMYK_HINT_EXT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	glext.h	/^#define GL_UNPACK_CONSTANT_DATA_SUNX /;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	glext.h	/^#define GL_UNPACK_IMAGE_DEPTH_SGIS /;"	d
GL_UNPACK_IMAGE_HEIGHT	glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT_EXT /;"	d
GL_UNPACK_RESAMPLE_OML	glext.h	/^#define GL_UNPACK_RESAMPLE_OML /;"	d
GL_UNPACK_RESAMPLE_SGIX	glext.h	/^#define GL_UNPACK_RESAMPLE_SGIX /;"	d
GL_UNPACK_ROW_BYTES_APPLE	glext.h	/^#define GL_UNPACK_ROW_BYTES_APPLE /;"	d
GL_UNPACK_SKIP_IMAGES	glext.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_IMAGES_EXT	glext.h	/^#define GL_UNPACK_SKIP_IMAGES_EXT /;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	glext.h	/^#define GL_UNPACK_SKIP_VOLUMES_SGIS /;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	glext.h	/^#define GL_UNPACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_UNSIGNALED	glext.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	glext.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2_EXT /;"	d
GL_UNSIGNED_IDENTITY_NV	glext.h	/^#define GL_UNSIGNED_IDENTITY_NV /;"	d
GL_UNSIGNED_INT16_NV	glext.h	/^#define GL_UNSIGNED_INT16_NV /;"	d
GL_UNSIGNED_INT16_VEC2_NV	glext.h	/^#define GL_UNSIGNED_INT16_VEC2_NV /;"	d
GL_UNSIGNED_INT16_VEC3_NV	glext.h	/^#define GL_UNSIGNED_INT16_VEC3_NV /;"	d
GL_UNSIGNED_INT16_VEC4_NV	glext.h	/^#define GL_UNSIGNED_INT16_VEC4_NV /;"	d
GL_UNSIGNED_INT64_AMD	glext.h	/^#define GL_UNSIGNED_INT64_AMD /;"	d
GL_UNSIGNED_INT64_ARB	glext.h	/^#define GL_UNSIGNED_INT64_ARB /;"	d
GL_UNSIGNED_INT64_NV	glext.h	/^#define GL_UNSIGNED_INT64_NV /;"	d
GL_UNSIGNED_INT64_VEC2_NV	glext.h	/^#define GL_UNSIGNED_INT64_VEC2_NV /;"	d
GL_UNSIGNED_INT64_VEC3_NV	glext.h	/^#define GL_UNSIGNED_INT64_VEC3_NV /;"	d
GL_UNSIGNED_INT64_VEC4_NV	glext.h	/^#define GL_UNSIGNED_INT64_VEC4_NV /;"	d
GL_UNSIGNED_INT8_NV	glext.h	/^#define GL_UNSIGNED_INT8_NV /;"	d
GL_UNSIGNED_INT8_VEC2_NV	glext.h	/^#define GL_UNSIGNED_INT8_VEC2_NV /;"	d
GL_UNSIGNED_INT8_VEC3_NV	glext.h	/^#define GL_UNSIGNED_INT8_VEC3_NV /;"	d
GL_UNSIGNED_INT8_VEC4_NV	glext.h	/^#define GL_UNSIGNED_INT8_VEC4_NV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT /;"	d
GL_UNSIGNED_INT_10_10_10_2	glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2_EXT /;"	d
GL_UNSIGNED_INT_24_8	glext.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_24_8_EXT	glext.h	/^#define GL_UNSIGNED_INT_24_8_EXT /;"	d
GL_UNSIGNED_INT_24_8_NV	glext.h	/^#define GL_UNSIGNED_INT_24_8_NV /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	glext.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8	glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	glext.h	/^#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	glext.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	glext.h	/^#define GL_UNSIGNED_INT_S8_S8_8_8_NV /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_UNSIGNED_INT_VEC2	glext.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC2_EXT	glext.h	/^#define GL_UNSIGNED_INT_VEC2_EXT /;"	d
GL_UNSIGNED_INT_VEC3	glext.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC3_EXT	glext.h	/^#define GL_UNSIGNED_INT_VEC3_EXT /;"	d
GL_UNSIGNED_INT_VEC4	glext.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_INT_VEC4_EXT	glext.h	/^#define GL_UNSIGNED_INT_VEC4_EXT /;"	d
GL_UNSIGNED_INVERT_NV	glext.h	/^#define GL_UNSIGNED_INVERT_NV /;"	d
GL_UNSIGNED_NORMALIZED	glext.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_NORMALIZED_ARB	glext.h	/^#define GL_UNSIGNED_NORMALIZED_ARB /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	glext.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1_EXT /;"	d
GL_UNSIGNED_SHORT_5_6_5	glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	glext.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_MESA	glext.h	/^#define GL_UNSIGNED_SHORT_8_8_MESA /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_MESA /;"	d
GL_UPPER_LEFT	glext.h	/^#define GL_UPPER_LEFT /;"	d
GL_USE_MISSING_GLYPH_NV	glext.h	/^#define GL_USE_MISSING_GLYPH_NV /;"	d
GL_UTF16_NV	glext.h	/^#define GL_UTF16_NV /;"	d
GL_UTF8_NV	glext.h	/^#define GL_UTF8_NV /;"	d
GL_VALIDATE_STATUS	glext.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VARIABLE_A_NV	glext.h	/^#define GL_VARIABLE_A_NV /;"	d
GL_VARIABLE_B_NV	glext.h	/^#define GL_VARIABLE_B_NV /;"	d
GL_VARIABLE_C_NV	glext.h	/^#define GL_VARIABLE_C_NV /;"	d
GL_VARIABLE_D_NV	glext.h	/^#define GL_VARIABLE_D_NV /;"	d
GL_VARIABLE_E_NV	glext.h	/^#define GL_VARIABLE_E_NV /;"	d
GL_VARIABLE_F_NV	glext.h	/^#define GL_VARIABLE_F_NV /;"	d
GL_VARIABLE_G_NV	glext.h	/^#define GL_VARIABLE_G_NV /;"	d
GL_VARIANT_ARRAY_EXT	glext.h	/^#define GL_VARIANT_ARRAY_EXT /;"	d
GL_VARIANT_ARRAY_POINTER_EXT	glext.h	/^#define GL_VARIANT_ARRAY_POINTER_EXT /;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	glext.h	/^#define GL_VARIANT_ARRAY_STRIDE_EXT /;"	d
GL_VARIANT_ARRAY_TYPE_EXT	glext.h	/^#define GL_VARIANT_ARRAY_TYPE_EXT /;"	d
GL_VARIANT_DATATYPE_EXT	glext.h	/^#define GL_VARIANT_DATATYPE_EXT /;"	d
GL_VARIANT_EXT	glext.h	/^#define GL_VARIANT_EXT /;"	d
GL_VARIANT_VALUE_EXT	glext.h	/^#define GL_VARIANT_VALUE_EXT /;"	d
GL_VBO_FREE_MEMORY_ATI	glext.h	/^#define GL_VBO_FREE_MEMORY_ATI /;"	d
GL_VECTOR_EXT	glext.h	/^#define GL_VECTOR_EXT /;"	d
GL_VERSION_1_2	glext.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	glext.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	glext.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	glext.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	glext.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	glext.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	glext.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	glext.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	glext.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	glext.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	glext.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	glext.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	glext.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	glext.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_4	glext.h	/^#define GL_VERSION_4_4 /;"	d
GL_VERTEX23_BIT_PGI	glext.h	/^#define GL_VERTEX23_BIT_PGI /;"	d
GL_VERTEX4_BIT_PGI	glext.h	/^#define GL_VERTEX4_BIT_PGI /;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	glext.h	/^#define GL_VERTEX_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ARRAY_BINDING	glext.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_BINDING_APPLE /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ARRAY_COUNT_EXT	glext.h	/^#define GL_VERTEX_ARRAY_COUNT_EXT /;"	d
GL_VERTEX_ARRAY_EXT	glext.h	/^#define GL_VERTEX_ARRAY_EXT /;"	d
GL_VERTEX_ARRAY_LENGTH_NV	glext.h	/^#define GL_VERTEX_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_LIST_IBM	glext.h	/^#define GL_VERTEX_ARRAY_LIST_IBM /;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_AMD /;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	glext.h	/^#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_VERTEX_ARRAY_POINTER_EXT	glext.h	/^#define GL_VERTEX_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_RANGE_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_NV /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_NV /;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_VALID_NV /;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV /;"	d
GL_VERTEX_ARRAY_SIZE_EXT	glext.h	/^#define GL_VERTEX_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE /;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	glext.h	/^#define GL_VERTEX_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_ARRAY_TYPE_EXT	glext.h	/^#define GL_VERTEX_ARRAY_TYPE_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY0_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY10_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY11_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY12_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY13_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY14_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY15_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY1_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY2_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY3_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY4_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY5_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY6_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY7_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY8_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY9_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV /;"	d
GL_VERTEX_ATTRIB_BINDING	glext.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	glext.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_DIVISOR	glext.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	glext.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	glext.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_BLEND_ARB	glext.h	/^#define GL_VERTEX_BLEND_ARB /;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	glext.h	/^#define GL_VERTEX_CONSISTENT_HINT_PGI /;"	d
GL_VERTEX_DATA_HINT_PGI	glext.h	/^#define GL_VERTEX_DATA_HINT_PGI /;"	d
GL_VERTEX_ELEMENT_SWIZZLE_AMD	glext.h	/^#define GL_VERTEX_ELEMENT_SWIZZLE_AMD /;"	d
GL_VERTEX_ID_NV	glext.h	/^#define GL_VERTEX_ID_NV /;"	d
GL_VERTEX_ID_SWIZZLE_AMD	glext.h	/^#define GL_VERTEX_ID_SWIZZLE_AMD /;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	glext.h	/^#define GL_VERTEX_PRECLIP_HINT_SGIX /;"	d
GL_VERTEX_PRECLIP_SGIX	glext.h	/^#define GL_VERTEX_PRECLIP_SGIX /;"	d
GL_VERTEX_PROGRAM_ARB	glext.h	/^#define GL_VERTEX_PROGRAM_ARB /;"	d
GL_VERTEX_PROGRAM_BINDING_NV	glext.h	/^#define GL_VERTEX_PROGRAM_BINDING_NV /;"	d
GL_VERTEX_PROGRAM_NV	glext.h	/^#define GL_VERTEX_PROGRAM_NV /;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_NV /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_NV /;"	d
GL_VERTEX_SHADER	glext.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_ARB	glext.h	/^#define GL_VERTEX_SHADER_ARB /;"	d
GL_VERTEX_SHADER_BINDING_EXT	glext.h	/^#define GL_VERTEX_SHADER_BINDING_EXT /;"	d
GL_VERTEX_SHADER_BIT	glext.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_EXT	glext.h	/^#define GL_VERTEX_SHADER_EXT /;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	glext.h	/^#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	glext.h	/^#define GL_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_VERTEX_SHADER_LOCALS_EXT	glext.h	/^#define GL_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glext.h	/^#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	glext.h	/^#define GL_VERTEX_SHADER_OPTIMIZED_EXT /;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	glext.h	/^#define GL_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_VERTEX_SOURCE_ATI	glext.h	/^#define GL_VERTEX_SOURCE_ATI /;"	d
GL_VERTEX_STATE_PROGRAM_NV	glext.h	/^#define GL_VERTEX_STATE_PROGRAM_NV /;"	d
GL_VERTEX_STREAM0_ATI	glext.h	/^#define GL_VERTEX_STREAM0_ATI /;"	d
GL_VERTEX_STREAM1_ATI	glext.h	/^#define GL_VERTEX_STREAM1_ATI /;"	d
GL_VERTEX_STREAM2_ATI	glext.h	/^#define GL_VERTEX_STREAM2_ATI /;"	d
GL_VERTEX_STREAM3_ATI	glext.h	/^#define GL_VERTEX_STREAM3_ATI /;"	d
GL_VERTEX_STREAM4_ATI	glext.h	/^#define GL_VERTEX_STREAM4_ATI /;"	d
GL_VERTEX_STREAM5_ATI	glext.h	/^#define GL_VERTEX_STREAM5_ATI /;"	d
GL_VERTEX_STREAM6_ATI	glext.h	/^#define GL_VERTEX_STREAM6_ATI /;"	d
GL_VERTEX_STREAM7_ATI	glext.h	/^#define GL_VERTEX_STREAM7_ATI /;"	d
GL_VERTEX_SUBROUTINE	glext.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	glext.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	glext.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTEX_WEIGHTING_EXT	glext.h	/^#define GL_VERTEX_WEIGHTING_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT /;"	d
GL_VERTICAL_LINE_TO_NV	glext.h	/^#define GL_VERTICAL_LINE_TO_NV /;"	d
GL_VIBRANCE_BIAS_NV	glext.h	/^#define GL_VIBRANCE_BIAS_NV /;"	d
GL_VIBRANCE_SCALE_NV	glext.h	/^#define GL_VIBRANCE_SCALE_NV /;"	d
GL_VIDEO_BUFFER_BINDING_NV	glext.h	/^#define GL_VIDEO_BUFFER_BINDING_NV /;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	glext.h	/^#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV /;"	d
GL_VIDEO_BUFFER_NV	glext.h	/^#define GL_VIDEO_BUFFER_NV /;"	d
GL_VIDEO_BUFFER_PITCH_NV	glext.h	/^#define GL_VIDEO_BUFFER_PITCH_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV /;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	glext.h	/^#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV /;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	glext.h	/^#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MAX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MIN_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV /;"	d
GL_VIEWPORT_BOUNDS_RANGE	glext.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	glext.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	glext.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEW_CLASS_128_BITS	glext.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	glext.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	glext.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	glext.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	glext.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	glext.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	glext.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	glext.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	glext.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	glext.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_RGTC1_RED	glext.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	glext.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	glext.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_X_AMD	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	d
GL_VIVIDLIGHT_NV	glext.h	/^#define GL_VIVIDLIGHT_NV /;"	d
GL_VOLATILE_APPLE	glext.h	/^#define GL_VOLATILE_APPLE /;"	d
GL_WAIT_FAILED	glext.h	/^#define GL_WAIT_FAILED /;"	d
GL_WEIGHT_ARRAY_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_ARB /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_POINTER_ARB /;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_SIZE_ARB /;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_STRIDE_ARB /;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_TYPE_ARB /;"	d
GL_WEIGHT_SUM_UNITY_ARB	glext.h	/^#define GL_WEIGHT_SUM_UNITY_ARB /;"	d
GL_WIDE_LINE_HINT_PGI	glext.h	/^#define GL_WIDE_LINE_HINT_PGI /;"	d
GL_WIN_phong_shading	glext.h	/^#define GL_WIN_phong_shading /;"	d
GL_WIN_specular_fog	glext.h	/^#define GL_WIN_specular_fog /;"	d
GL_WRAP_BORDER_SUN	glext.h	/^#define GL_WRAP_BORDER_SUN /;"	d
GL_WRITE_DISCARD_NV	glext.h	/^#define GL_WRITE_DISCARD_NV /;"	d
GL_WRITE_ONLY	glext.h	/^#define GL_WRITE_ONLY /;"	d
GL_WRITE_ONLY_ARB	glext.h	/^#define GL_WRITE_ONLY_ARB /;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_W_EXT	glext.h	/^#define GL_W_EXT /;"	d
GL_XOR_NV	glext.h	/^#define GL_XOR_NV /;"	d
GL_X_EXT	glext.h	/^#define GL_X_EXT /;"	d
GL_YCBAYCR8A_4224_NV	glext.h	/^#define GL_YCBAYCR8A_4224_NV /;"	d
GL_YCBCR_422_APPLE	glext.h	/^#define GL_YCBCR_422_APPLE /;"	d
GL_YCBCR_MESA	glext.h	/^#define GL_YCBCR_MESA /;"	d
GL_YCBYCR8_422_NV	glext.h	/^#define GL_YCBYCR8_422_NV /;"	d
GL_YCRCBA_SGIX	glext.h	/^#define GL_YCRCBA_SGIX /;"	d
GL_YCRCB_422_SGIX	glext.h	/^#define GL_YCRCB_422_SGIX /;"	d
GL_YCRCB_444_SGIX	glext.h	/^#define GL_YCRCB_444_SGIX /;"	d
GL_YCRCB_SGIX	glext.h	/^#define GL_YCRCB_SGIX /;"	d
GL_Y_EXT	glext.h	/^#define GL_Y_EXT /;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	glext.h	/^#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV /;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	glext.h	/^#define GL_Z4Y12Z4CB12Z4CR12_444_NV /;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	glext.h	/^#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV /;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	glext.h	/^#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV /;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	glext.h	/^#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV /;"	d
GL_ZERO_EXT	glext.h	/^#define GL_ZERO_EXT /;"	d
GL_Z_EXT	glext.h	/^#define GL_Z_EXT /;"	d
GLchar	glext.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLcharARB	glext.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLfixed	glext.h	/^typedef GLint GLfixed;$/;"	t	typeref:typename:GLint
GLhalf	glext.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhalfARB	glext.h	/^typedef unsigned short GLhalfARB;$/;"	t	typeref:typename:unsigned short
GLhalfNV	glext.h	/^typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhandleARB	glext.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLhandleARB	glext.h	/^typedef void *GLhandleARB;$/;"	t	typeref:typename:void *
GLint64	glext.h	/^typedef int64_t GLint64;$/;"	t	typeref:typename:int64_t
GLint64EXT	glext.h	/^typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLintptr	glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptr	glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsync	glext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLuint64	glext.h	/^typedef uint64_t GLuint64;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	glext.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLvdpauSurfaceNV	glext.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
How accurate is this as a Minecraft viewer?	README.md	/^### How accurate is this as a Minecraft viewer?$/;"	S	chapter:FAQ
How to run it?	README.md	/^### How to run it?$/;"	S	chapter:FAQ
INCLUDE	Makefile	/^INCLUDE=-I..\/..$/;"	m
INCLUDE_CAVEVIEW_H	caveview.h	/^#define INCLUDE_CAVEVIEW_H$/;"	d
INCLUDE_CAVE_PARSE_H	cave_parse.h	/^#define INCLUDE_CAVE_PARSE_H$/;"	d
INCLUDE_STB_GLPROG_H	stb_glprog.h	/^#define INCLUDE_STB_GLPROG_H$/;"	d
INCLUDE_STB_GL_H	stb_gl.h	/^#define INCLUDE_STB_GL_H$/;"	d
IN_PLACE	cave_mesher.c	/^#define IN_PLACE$/;"	d	file:
LIB	Makefile	/^LIB=-lmingw32 -lSDL2main -lSDL2 -lopengl32 -lGlu32$/;"	m
LIBDIR	Makefile	/^LIBDIR=-L$(SDLROOT)\/lib\/$/;"	m
LIBINCLUDEDIR	Makefile	/^LIBINCLUDEDIR=-I$(SDLROOT)\/include\/SDL2$/;"	m
MAX_CHUNK_LOAD_WORKERS	cave_render.c	/^#define MAX_CHUNK_LOAD_WORKERS /;"	d	file:
MAX_DECODED_CHUNK_X	cave_parse.c	/^#define MAX_DECODED_CHUNK_X /;"	d	file:
MAX_DECODED_CHUNK_Z	cave_parse.c	/^#define MAX_DECODED_CHUNK_Z /;"	d	file:
MAX_MAP_REGIONS	cave_parse.c	/^#define MAX_MAP_REGIONS /;"	d	file:
MAX_MESH_WORKERS	cave_render.c	/^#define MAX_MESH_WORKERS /;"	d	file:
MAX_QUEUE	cave_render.c	/^      #define MAX_QUEUE /;"	d	file:
MAX_VEL	cave_main.c	/^#define MAX_VEL /;"	d	file:
M_PI	stb_gl.h	/^#define M_PI /;"	d
NUM_CACHED_X	cave_parse.c	/^#define NUM_CACHED_X /;"	d	file:
NUM_CACHED_Z	cave_parse.c	/^#define NUM_CACHED_Z /;"	d	file:
NUM_CHUNKS_PER_REGION	cave_parse.c	/^#define NUM_CHUNKS_PER_REGION /;"	d	file:
NUM_CHUNKS_PER_REGION_LOG2	cave_parse.c	/^#define NUM_CHUNKS_PER_REGION_LOG2 /;"	d	file:
NUM_COLUMNS_PER_CHUNK	cave_parse.c	/^#define NUM_COLUMNS_PER_CHUNK /;"	d	file:
NUM_COLUMNS_PER_CHUNK_LOG2	cave_parse.c	/^#define NUM_COLUMNS_PER_CHUNK_LOG2 /;"	d	file:
NUM_SEGMENTS	cave_parse.h	/^#define NUM_SEGMENTS /;"	d
PFNGLACCUMXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLfixed value)
PFNGLACTIVEPROGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVESTENCILFACEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face)
PFNGLACTIVETEXTUREARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVEVARYINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLALPHAFRAGMENTOP1ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLALPHAFRAGMENTOP2ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLALPHAFRAGMENTOP3ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLALPHAFUNCXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLfixed ref)
PFNGLAPPLYTEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLAREPROGRAMSRESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * programs,GLboolean * residences)
PFNGLARETEXTURESRESIDENTEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLARRAYELEMENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t	typeref:typename:void (APIENTRYP)(GLint i)
PFNGLARRAYOBJECTATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLASYNCMARKERSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker)
PFNGLATTACHOBJECTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB obj)
PFNGLATTACHSHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERNVXPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINCONDITIONALRENDERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINFRAGMENTSHADERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINOCCLUSIONQUERYNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINPERFMONITORAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLBEGINPERFQUERYINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLBEGINQUERYARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINVERTEXSHADEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINVIDEOCAPTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLBINDATTRIBLOCATIONARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, c/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,const GLcharARB * name)
PFNGLBINDATTRIBLOCATIONPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERBASEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFEROFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFEROFFSETNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERSBASEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
PFNGLBINDBUFFERSRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
PFNGLBINDFRAGDATALOCATIONEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGMENTSHADERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDFRAMEBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
PFNGLBINDIMAGETEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTURESPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDLIGHTPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum light,GLenum value)
PFNGLBINDMATERIALPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum face,GLenum value)
PFNGLBINDMULTITEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint tex/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint texture)
PFNGLBINDPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum value)
PFNGLBINDPROGRAMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint program)
PFNGLBINDPROGRAMNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDPROGRAMPIPELINEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLBINDRENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *sampl/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * samplers)
PFNGLBINDTEXGENPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum va/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum coord,GLenum value)
PFNGLBINDTEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTEXTURESPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textu/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum value)
PFNGLBINDTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDTRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXARRAYPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLBINDVERTEXSHADEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
PFNGLBINORMAL3BEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte bx,GLbyte by,GLbyte bz)
PFNGLBINORMAL3BVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLBINORMAL3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble bx,GLdouble by,GLdouble bz)
PFNGLBINORMAL3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLBINORMAL3FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat bx,GLfloat by,GLfloat bz)
PFNGLBINORMAL3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLBINORMAL3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint bx,GLint by,GLint bz)
PFNGLBINORMAL3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLBINORMAL3SEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort bx,GLshort by,GLshort bz)
PFNGLBINORMAL3SVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLBINORMALPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLBITMAPXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte * bitmap)
PFNGLBLENDBARRIERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBLENDCOLOREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLBLENDEQUATIONEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONINDEXEDAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCINDEXEDAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCSEPARATEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINGRPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLBLITFRAMEBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERADDRESSRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
PFNGLBUFFERDATAARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
PFNGLBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERPARAMETERIAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLBUFFERSTORAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSUBDATAARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeipt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
PFNGLBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum t/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint framebuffer,GLenum target)
PFNGLCLAMPCOLORARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLAMPCOLORPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLEARACCUMXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARCOLORIIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alp/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue,GLint alpha)
PFNGLCLEARCOLORIUIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue,GLuint alpha)
PFNGLCLEARCOLORXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARDEPTHDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARDEPTHFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf depth)
PFNGLCLEARDEPTHFPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat d)
PFNGLCLEARDEPTHXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLIENTACTIVETEXTUREARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream)
PFNGLCLIENTATTRIBDEFAULTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLIENTWAITSYNCPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:GLenum (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPPLANEFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfixed * equation)
PFNGLCOLOR3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * v)
PFNGLCOLOR3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLCOLOR3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue)
PFNGLCOLOR3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, G/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLCOLOR4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)
PFNGLCOLOR4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR4UBVERTEX2FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
PFNGLCOLOR4UBVERTEX2FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4UBVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4UBVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed /;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCOLOR4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLORFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLCOLORFRAGMENTOP1ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLCOLORFRAGMENTOP2ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLCOLORFRAGMENTOP3ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLCOLORMASKINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLCOLORPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, co/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLCOLORPOINTERVINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **poin/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLCOLORSUBTABLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORSUBTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLEPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERFVSGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPARAMETERIVSGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei widt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLESGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOMBINERINPUTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLCOMBINEROUTPUTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutpu/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
PFNGLCOMBINERPARAMETERFNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLCOMBINERPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLCOMBINERPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLCOMBINERPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,const GLfloat * params)
PFNGLCOMPILESHADERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj)
PFNGLCOMPILESHADERINCLUDEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
PFNGLCOMPILESHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCONVOLUTIONFILTER1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLCONVOLUTIONPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLCOPYBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYCOLORSUBTABLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORSUBTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLESGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYCONVOLUTIONFILTER2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYIMAGESUBDATANVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint sr/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLCOPYIMAGESUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath)
PFNGLCOPYTEXIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOVERFILLPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTyp/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERFILLPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERSTROKEPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCREATEPERFQUERYINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * queryHandle)
PFNGLCREATEPROGRAMOBJECTARBPROC	glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(void)
PFNGLCREATEPROGRAMPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATESHADEROBJECTARBPROC	glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum shaderType)
PFNGLCREATESHADERPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCREATESHADERPROGRAMEXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,const GLchar * string)
PFNGLCREATESHADERPROGRAMVPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESYNCFROMCLEVENTARBPROC	glext.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struc/;"	t	typeref:typename:GLsync (APIENTRYP)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
PFNGLCULLPARAMETERDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * params)
PFNGLCULLPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLCURRENTPALETTEMATRIXARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLint index)
PFNGLDEBUGMESSAGECALLBACKAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCAMD callback,void * userParam)
PFNGLDEBUGMESSAGECALLBACKARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void */;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCARB callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEENABLEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEFORMATIONMAP3DSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble * points)
PFNGLDEFORMATIONMAP3FSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat * points)
PFNGLDEFORMSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLDELETEASYNCMARKERSSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker,GLsizei range)
PFNGLDELETEBUFFERSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEFENCESAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFRAGMENTSHADERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDELETEFRAMEBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETENAMEDSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLDELETENAMESAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *n/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,const GLuint * names)
PFNGLDELETEOBJECTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj)
PFNGLDELETEOCCLUSIONQUERIESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEPATHSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei range)
PFNGLDELETEPERFMONITORSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFQUERYINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLDELETEPROGRAMPIPELINESPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEPROGRAMSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEPROGRAMSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEQUERIESARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * samplers)
PFNGLDELETESHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETESYNCPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync)
PFNGLDELETETEXTURESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETETRANSFORMFEEDBACKSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXSHADEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDEPTHBOUNDSDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zmin,GLdouble zmax)
PFNGLDEPTHBOUNDSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampd zmin,GLclampd zmax)
PFNGLDEPTHRANGEARRAYVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zNear,GLdouble zFar)
PFNGLDEPTHRANGEFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEFPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat n,GLfloat f)
PFNGLDEPTHRANGEINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed n,GLfixed f)
PFNGLDETACHOBJECTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attache/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB attachedObj)
PFNGLDETACHSHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDETAILTEXFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLDISABLECLIENTSTATEIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLEINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_g/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWARRAYSINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect)
PFNGLDRAWARRAYSINSTANCEDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWBUFFERSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWELEMENTARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWELEMENTARRAYATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count)
PFNGLDRAWELEMENTSBASEVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect)
PFNGLDRAWELEMENTSINSTANCEDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
PFNGLDRAWMESHARRAYSSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei width)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
PFNGLDRAWRANGEELEMENTARRAYATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint en/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWRANGEELEMENTSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWTEXTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream)
PFNGLEDGEFLAGFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride)
PFNGLEDGEFLAGPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboo/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride,GLsizei count,const GLboolean * pointer)
PFNGLEDGEFLAGPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointe/;"	t	typeref:typename:void (APIENTRYP)(GLint stride,const GLboolean ** pointer,GLint ptrstride)
PFNGLELEMENTPOINTERAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLELEMENTPOINTERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLENABLECLIENTSTATEIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLEINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEIPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLENABLEVERTEXATTRIBAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENDCONDITIONALRENDERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERNVXPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDFRAGMENTSHADERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDOCCLUSIONQUERYNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDPERFMONITORAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLENDPERFQUERYINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLENDQUERYARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDQUERYINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDTRANSFORMFEEDBACKEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVERTEXSHADEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVIDEOCAPTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLEVALCOORD1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed u)
PFNGLEVALCOORD1XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALCOORD2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed u,GLfixed v)
PFNGLEVALCOORD2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALMAPSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLEXECUTEPROGRAMNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,const GLfloat * params)
PFNGLEXTRACTCOMPONENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLFEEDBACKBUFFERXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buf/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLenum type,const GLfixed * buffer)
PFNGLFENCESYNCPROC	glext.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFINALCOMBINERINPUTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum ma/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLFINISHASYNCSGIXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLFINISHFENCEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHFENCENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHOBJECTAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum object,GLint name)
PFNGLFINISHTEXTURESUNXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPIXELDATARANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHRASTERSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHSTATICDATAIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLFLUSHVERTEXARRAYRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFOGCOORDDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLFOGCOORDFPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV fog)
PFNGLFOGCOORDHVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * fog)
PFNGLFOGCOORDPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGCOORDPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLFOGCOORDPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *poin/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLfloat * points)
PFNGLFOGXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLFOGXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLFRAGMENTLIGHTFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLint * params)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTMODELISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLFRAGMENTMATERIALFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat para/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat param)
PFNGLFRAGMENTMATERIALFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint param)
PFNGLFRAGMENTMATERIALIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLFRAMEBUFFERPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTUREARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMETERMINATORGREMEDYPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFRAMEZOOMSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLFREEOBJECTBUFFERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLFRUSTUMFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLFRUSTUMXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfix/;"	t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLGENASYNCMARKERSSGIXPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENBUFFERSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMIPMAPPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target)
PFNGLGENERATETEXTUREMIPMAPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target)
PFNGLGENFENCESAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFRAGMENTSHADERSATIPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGENFRAMEBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENNAMESAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,GLuint * names)
PFNGLGENOCCLUSIONQUERIESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENPATHSNVPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENPERFMONITORSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLGENPROGRAMPIPELINESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENPROGRAMSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENQUERIESARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,GLuint * samplers)
PFNGLGENSYMBOLSEXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum r/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)
PFNGLGENTEXTURESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENTRANSFORMFEEDBACKSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXSHADERSEXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEATTRIBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETACTIVEVARYINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETARRAYOBJECTFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLfloat * params)
PFNGLGETARRAYOBJECTIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLint * params)
PFNGLGETATTACHEDOBJECTSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
PFNGLGETATTACHEDSHADERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONARBPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETATTRIBLOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint64EXT * params)
PFNGLGETBUFFERPOINTERVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERPOINTERVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
PFNGLGETBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCLIPPLANEFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfloat * equation)
PFNGLGETCLIPPLANEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfixed * equation)
PFNGLGETCOLORTABLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * data)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOLORTABLESGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLint * params)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,GLfloat * params)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *im/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint lod,void * img)
PFNGLGETCONVOLUTIONFILTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONFILTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETDEBUGMESSAGELOGAMDPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
PFNGLGETDEBUGMESSAGELOGARBPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *s/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDETAILTEXFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETDOUBLEINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *d/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETFENCEIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLint * params)
PFNGLGETFIRSTPERFQUERYIDINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint * queryId)
PFNGLGETFIXEDVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed * params)
PFNGLGETFLOATINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFOGFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat * points)
PFNGLGETFRAGDATAINDEXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONEXTPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint * params)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETHANDLEARBPROC	glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum pname)
PFNGLGETHISTOGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfix/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETHISTOGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETIMAGEHANDLEARBPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean /;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGEHANDLENVPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean l/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETINFOLOGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
PFNGLGETINSTRUMENTSSGIXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:GLint (APIENTRYP)(void)
PFNGLGETINTEGER64I_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint64 * data)
PFNGLGETINTEGERINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERUI64I_VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint index,GLuint64EXT * result)
PFNGLGETINTEGERUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint64EXT * result)
PFNGLGETINTERNALFORMATI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINVARIANTBOOLEANVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETINVARIANTFLOATVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETINVARIANTINTEGERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETLIGHTXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed * params)
PFNGLGETLISTPARAMETERFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat * params)
PFNGLGETLISTPARAMETERIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint * params)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETMAPCONTROLPOINTSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
PFNGLGETMAPPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMAPPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMAPXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLfixed * v)
PFNGLGETMATERIALXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLGETMINMAXEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMINMAXPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMULTISAMPLEFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTISAMPLEFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTITEXENVFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXENVIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXGENDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETMULTITEXGENFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXGENIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
PFNGLGETMULTITEXIMAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint leve/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
PFNGLGETMULTITEXPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLuint64EXT * params)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint * params)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,void * string)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOLORTABLEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCONVOLUTIONFILTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNEXTPERFQUERYIDINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * nextQueryId)
PFNGLGETNHISTOGRAMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum forma/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMAPDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMINMAXARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNPIXELMAPFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *value/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *val/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPOLYGONSTIPPLEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNSEPARABLEFILTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNTEXIMAGEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNUNIFORMDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTBUFFERFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLfloat * params)
PFNGLGETOBJECTBUFFERIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETOBJECTLABELEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPARAMETERFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLfloat * params)
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum objectType,GLuint name,GLenum pname,GLint * params)
PFNGLGETOBJECTPARAMETERIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLint * params)
PFNGLGETOBJECTPTRLABELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOCCLUSIONQUERYIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETPATHCOLORGENFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLfloat * value)
PFNGLGETPATHCOLORGENIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLint * value)
PFNGLGETPATHCOMMANDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLubyte * commands)
PFNGLGETPATHCOORDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * coords)
PFNGLGETPATHDASHARRAYNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * dashArray)
PFNGLGETPATHLENGTHNVPROC	glext.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei/;"	t	typeref:typename:GLfloat (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments)
PFNGLGETPATHMETRICRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint first/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHMETRICSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat * value)
PFNGLGETPATHPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint * value)
PFNGLGETPATHSPACINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
PFNGLGETPATHTEXGENFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLfloat * value)
PFNGLGETPATHTEXGENIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *va/;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLint * value)
PFNGLGETPERFCOUNTERINFOINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLenum pname,void * data)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, /;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORGROUPSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize,/;"	t	typeref:typename:void (APIENTRYP)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFQUERYDATAINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle,GLuint flags,GLsizei dataSize,GLvoid * data,GLuint * bytesWritten)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId)/;"	t	typeref:typename:void (APIENTRYP)(GLchar * queryName,GLuint * queryId)
PFNGLGETPERFQUERYINFOINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength,/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
PFNGLGETPIXELMAPXVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,GLfixed * values)
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * params)
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPOINTERINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,void ** data)
PFNGLGETPOINTERI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,void ** params)
PFNGLGETPOINTERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,void ** params)
PFNGLGETPROGRAMBINARYPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMINFOLOGPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
PFNGLGETPROGRAMPARAMETERDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLdouble * params)
PFNGLGETPROGRAMPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETPROGRAMSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void * string)
PFNGLGETPROGRAMSTRINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLubyte * program)
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint inde/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * param)
PFNGLGETQUERYINDEXEDIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSEPARABLEFILTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSEPARABLEFILTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSHADERINFOLOGPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERPRECISIONFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
PFNGLGETSHADERSOURCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSHARPENTEXFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETSTRINGIPROC	glext.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name,GLuint index)
PFNGLGETSUBROUTINEINDEXPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXBUMPPARAMETERFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * param)
PFNGLGETTEXBUMPPARAMETERIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * param)
PFNGLGETTEXENVXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXFILTERFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLfloat * weights)
PFNGLGETTEXGENXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed * params)
PFNGLGETTEXLEVELPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLfixed * params)
PFNGLGETTEXPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETTEXPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXTUREHANDLEARBPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREHANDLENVPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREIMAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLENVPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler)/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTRACKMATRIXIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLint * location)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETUNIFORMBLOCKINDEXPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT * params)
PFNGLGETUNIFORMINDICESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONARBPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharAR/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETUNIFORMLOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMOFFSETEXTPROC	glext.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLintptr (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT * params)
PFNGLGETUNIFORMUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLfloat * params)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETVARIANTBOOLEANVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *dat/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETVARIANTFLOATVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETVARIANTINTEGERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETVARIANTPOINTERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,void ** data)
PFNGLGETVARYINGLOCATIONNVPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,void ** param)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,void ** param)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **po/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVIDEOCAPTUREIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
PFNGLGETVIDEOI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint64EXT * params)
PFNGLGETVIDEOIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint64EXT * params)
PFNGLGETVIDEOUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint * params)
PFNGLGLOBALALPHAFACTORBSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte factor)
PFNGLGLOBALALPHAFACTORDSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble factor)
PFNGLGLOBALALPHAFACTORFSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLGLOBALALPHAFACTORISUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLGLOBALALPHAFACTORSSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort factor)
PFNGLGLOBALALPHAFACTORUBSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte factor)
PFNGLGLOBALALPHAFACTORUISUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint factor)
PFNGLGLOBALALPHAFACTORUSSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort factor)
PFNGLHINTPGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint mode)
PFNGLHISTOGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLHISTOGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLIGLOOINTERFACESGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const void * params)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLIMPORTSYNCEXTPROC	glext.h	/^typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
PFNGLINDEXFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLINDEXFUNCEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLclampf ref)
PFNGLINDEXMATERIALEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLINDEXPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLINDEXPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLINDEXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed component)
PFNGLINDEXXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * component)
PFNGLINSERTCOMPONENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLINSERTEVENTMARKEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLINSTRUMENTSBUFFERSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei size,GLint * buffer)
PFNGLINTERPOLATEPATHSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
PFNGLINVALIDATEBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISASYNCMARKERSGIXPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint marker)
PFNGLISBUFFERARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERRESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLISENABLEDINDEXEDEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISFENCEAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFENCENVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFRAMEBUFFEREXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISFRAMEBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISIMAGEHANDLERESIDENTARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISIMAGEHANDLERESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISNAMEAMDPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum identifier,GLuint name)
PFNGLISNAMEDBUFFERRESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISNAMEDSTRINGARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLISOBJECTBUFFERATIPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISOCCLUSIONQUERYNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPATHNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path)
PFNGLISPOINTINFILLPATHNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLuint mask,GLfloat x,GLfloat y)
PFNGLISPOINTINSTROKEPATHNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y)/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLfloat x,GLfloat y)
PFNGLISPROGRAMARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISPROGRAMNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPROGRAMPIPELINEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISQUERYARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISQUERYPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISRENDERBUFFEREXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISRENDERBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint sampler)
PFNGLISSHADERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISSYNCPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsync sync)
PFNGLISTEXTUREEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISTEXTUREHANDLERESIDENTARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTEXTUREHANDLERESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISTRANSFORMFEEDBACKPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISVARIANTENABLEDEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id,GLenum cap)
PFNGLISVERTEXARRAYAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXARRAYPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint index,GLenum pname)
PFNGLLABELOBJECTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLIGHTENVISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLLIGHTMODELXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLLIGHTMODELXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLLIGHTXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed param)
PFNGLLIGHTXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfixed * params)
PFNGLLINEWIDTHXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed width)
PFNGLLINKPROGRAMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLLINKPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLISTPARAMETERFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat param)
PFNGLLISTPARAMETERFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLfloat * params)
PFNGLLISTPARAMETERISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint param)
PFNGLLISTPARAMETERIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLint * params)
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLLOADMATRIXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOADPROGRAMNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
PFNGLLOADTRANSPOSEMATRIXDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXDPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXFARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXFPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOCKARRAYSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint first,GLsizei count)
PFNGLMAKEBUFFERNONRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLMAKEBUFFERRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAP1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)
PFNGLMAP2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)
PFNGLMAPBUFFERARBPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr le/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPCONTROLPOINTSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
PFNGLMAPGRID1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2)
PFNGLMAPGRID2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)
PFNGLMAPNAMEDBUFFEREXTPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPOBJECTBUFFERATIPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer)
PFNGLMAPPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLMAPPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLMAPTEXTURE2DINTELPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield ac/;"	t	typeref:typename:void * (APIENTRYP)(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
PFNGLMATERIALXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLMATERIALXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfixed * param)
PFNGLMATRIXFRUSTUMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXINDEXPOINTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMATRIXINDEXUBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * indices)
PFNGLMATRIXINDEXUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * indices)
PFNGLMATRIXINDEXUSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * indices)
PFNGLMATRIXLOADDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXLOADIDENTITYEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXORTHOEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXPOPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXPUSHEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXROTATEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXROTATEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXSCALEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXSCALEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXTRANSLATEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXTRANSLATEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMEMORYBARRIEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMINMAXEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINMAXPROC	glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINSAMPLESHADINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMULTIDRAWARRAYSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirec/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIMODEDRAWARRAYSIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *c/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
PFNGLMULTITEXBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLMULTITEXCOORD1BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s)
PFNGLMULTITEXCOORD1BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD1DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s)
PFNGLMULTITEXCOORD1HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD1IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s)
PFNGLMULTITEXCOORD1XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD2BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t)
PFNGLMULTITEXCOORD2BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t)
PFNGLMULTITEXCOORD2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD2IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t)
PFNGLMULTITEXCOORD2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD3BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r)
PFNGLMULTITEXCOORD3BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLMULTITEXCOORD3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD3IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r)
PFNGLMULTITEXCOORD3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD4BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLMULTITEXCOORD4BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD4DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLMULTITEXCOORD4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD4IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLMULTITEXCOORD4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORDP1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMULTITEXENVFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXENVFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXENVIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXENVIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXGENDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
PFNGLMULTITEXGENDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
PFNGLMULTITEXGENFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
PFNGLMULTITEXGENFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
PFNGLMULTITEXGENIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint param)
PFNGLMULTITEXGENIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
PFNGLMULTITEXIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
PFNGLMULTITEXPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXRENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint renderbuffer)
PFNGLMULTITEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLMULTMATRIXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLMULTTRANSPOSEMATRIXDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXDPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXFARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXFPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLNAMEDBUFFERDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERSTORAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSUBDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuff/;"	t	typeref:typename:void (APIENTRYP)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachm/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLdouble * params)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLuint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLNAMEDPROGRAMSTRINGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum f/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderb/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNEWOBJECTBUFFERATIPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenu/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei size,const void * pointer,GLenum usage)
PFNGLNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * n,const GLfloat * v)
PFNGLNORMAL3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)
PFNGLNORMAL3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLNORMAL3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed nx,GLfixed ny,GLfixed nz)
PFNGLNORMAL3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLNORMALFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLNORMALP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLNORMALPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLNORMALPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLNORMALPOINTERVINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void ** pointer)
PFNGLNORMALSTREAM3BATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)
PFNGLNORMALSTREAM3BVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLbyte * coords)
PFNGLNORMALSTREAM3DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)
PFNGLNORMALSTREAM3DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLNORMALSTREAM3FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)
PFNGLNORMALSTREAM3FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLNORMALSTREAM3IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint nx,GLint ny,GLint nz)
PFNGLNORMALSTREAM3IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLNORMALSTREAM3SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLsh/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort nx,GLshort ny,GLshort nz)
PFNGLNORMALSTREAM3SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLOBJECTLABELPROC	glext.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	glext.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPURGEABLEAPPLEPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLOBJECTUNPURGEABLEAPPLEPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLen/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLORTHOFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLORTHOXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed/;"	t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLPASSTEXCOORDATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint coord,GLenum swizzle)
PFNGLPASSTHROUGHXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed token)
PFNGLPATCHPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLPATHCOLORGENNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorForm/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
PFNGLPATHCOMMANDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOORDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOVERDEPTHFUNCNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLPATHDASHARRAYNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
PFNGLPATHFOGGENNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum genMode)
PFNGLPATHGLYPHRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHPARAMETERFNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat value)
PFNGLPATHPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLfloat * value)
PFNGLPATHPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint value)
PFNGLPATHPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLint * value)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPATHSTENCILFUNCNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLPATHSTRINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum format,GLsizei length,const void * pathString)
PFNGLPATHSUBCOMMANDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHSUBCOORDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numC/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHTEXGENNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint compon/;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPAUSETRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPIXELDATARANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLPIXELMAPXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,const GLfixed * values)
PFNGLPIXELSTOREXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTEXGENPARAMETERFSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPIXELTEXGENPARAMETERISGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPIXELTEXGENSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPIXELTRANSFERXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLPIXELZOOMXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed xfactor,GLfixed yfactor)
PFNGLPNTRIANGLESFATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPNTRIANGLESIATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTALONGPATHNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsi/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
PFNGLPOINTPARAMETERFARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * params)
PFNGLPOINTSIZEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed size)
PFNGLPOLLASYNCSGIXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLPOLLINSTRUMENTSSGIXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLint * marker_p)
PFNGLPOLYGONOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat bias)
PFNGLPOLYGONOFFSETXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed factor,GLfixed units)
PFNGLPOPDEBUGGROUPPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPGROUPMARKEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRESENTFRAMEDUALFILLNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPres/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
PFNGLPRESENTFRAMEKEYEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresent/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
PFNGLPRIMITIVERESTARTINDEXNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTINDEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRIORITIZETEXTURESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, cons/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLclampf * priorities)
PFNGLPRIORITIZETEXTURESXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, con/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLfixed * priorities)
PFNGLPROGRAMBINARYPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingInde/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat * params)
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingInd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint * params)
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIn/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint * params)
PFNGLPROGRAMENVPARAMETER4DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMENVPARAMETER4DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMENVPARAMETER4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMENVPARAMETER4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERI4INVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMENVPARAMETERI4UINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLdouble * v)
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLfloat * v)
PFNGLPROGRAMPARAMETER4DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMPARAMETER4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * v)
PFNGLPROGRAMPARAMETER4FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMPARAMETER4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * v)
PFNGLPROGRAMPARAMETERIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERS4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLdouble * v)
PFNGLPROGRAMPARAMETERS4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * v)
PFNGLPROGRAMSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei count,const GLuint * params)
PFNGLPROGRAMUNIFORM1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x)
PFNGLPROGRAMUNIFORM1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0)
PFNGLPROGRAMUNIFORM1DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x)
PFNGLPROGRAMUNIFORM1I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM1IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x)
PFNGLPROGRAMUNIFORM1UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM1UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y)
PFNGLPROGRAMUNIFORM2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
PFNGLPROGRAMUNIFORM2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
PFNGLPROGRAMUNIFORM2I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM2IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLPROGRAMUNIFORM2UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM2UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLPROGRAMUNIFORM3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
PFNGLPROGRAMUNIFORM3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLPROGRAMUNIFORM3I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLPROGRAMUNIFORM3UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM3UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMUNIFORM4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
PFNGLPROGRAMUNIFORM4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLPROGRAMUNIFORM4I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM4IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLPROGRAMUNIFORM4UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM4UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMUI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT value)
PFNGLPROGRAMUNIFORMUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMVERTEXLIMITNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint limit)
PFNGLPROVOKINGVERTEXEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPROVOKINGVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPPROC	glext.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHGROUPMARKEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLQUERYCOUNTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum target)
PFNGLQUERYMATRIXXOESPROC	glext.h	/^typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);$/;"	t	typeref:typename:GLbitfield (APIENTRYP)(GLfixed * mantissa,GLint * exponent)
PFNGLQUERYOBJECTPARAMETERUIAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLenum pname,GLuint param)
PFNGLRASTERPOS2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLRASTERPOS2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLRASTERPOS3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z,GLfixed w)
PFNGLRASTERPOS4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLREADINSTRUMENTSSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLREADNPIXELSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLRECTXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)
PFNGLRECTXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * v1,const GLfixed * v2)
PFNGLREFERENCEPLANESGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * equation)
PFNGLRELEASESHADERCOMPILERPROC	glext.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRENDERBUFFERSTORAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samp/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLREPLACEMENTCODEPOINTERSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void ** pointer)
PFNGLREPLACEMENTCODEUBSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte code)
PFNGLREPLACEMENTCODEUBVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * code)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLubyte * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUISUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint code)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, con/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * code)
PFNGLREPLACEMENTCODEUSSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort code)
PFNGLREPLACEMENTCODEUSVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * code)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLRESETHISTOGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETHISTOGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESIZEBUFFERSMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLROTATEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
PFNGLSAMPLECOVERAGEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLECOVERAGEOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEOESPROC) (GLfixed value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLEMAPATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint interp,GLenum swizzle)
PFNGLSAMPLEMASKEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMASKINDEXEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint maskNumber,GLbitfield mask)
PFNGLSAMPLEMASKSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEPATTERNEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLEPATTERNSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLERPARAMETERFPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSCALEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLSCISSORARRAYVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLSECONDARYCOLOR3BEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3BVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble bl/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue)/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue)/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blu/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLSECONDARYCOLOR3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLSECONDARYCOLOR3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3SEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue)/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3USEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort b/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLOR3USVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLORFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLSECONDARYCOLORP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint s/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLSECONDARYCOLORPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
PFNGLSEPARABLEFILTER2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSEPARABLEFILTER2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSETFENCEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLSETFENCENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum condition)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,const GLfloat * value)
PFNGLSETINVARIANTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETLOCALCONSTANTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETMULTISAMPLEFVAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,const GLfloat * val)
PFNGLSHADERBINARYPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
PFNGLSHADEROP1EXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1)
PFNGLSHADEROP2EXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2)/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
PFNGLSHADEROP3EXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
PFNGLSHADERSOURCEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
PFNGLSHADERSOURCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHARPENTEXFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLSPRITEPARAMETERFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLSPRITEPARAMETERFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLSPRITEPARAMETERISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLSPRITEPARAMETERIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLSTARTINSTRUMENTSSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLSTENCILCLEARTAGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClea/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stencilTagBits,GLuint stencilClearTag)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILFILLPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum fillMode,GLuint mask)
PFNGLSTENCILFUNCSEPARATEATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILOPSEPARATEATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPVALUEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint value)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNam/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILSTROKEPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLint reference,GLuint mask)
PFNGLSTOPINSTRUMENTSSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLSTRINGMARKERGREMEDYPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei len,const void * string)
PFNGLSWIZZLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLSYNCTEXTUREINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture)
PFNGLTAGSAMPLEBUFFERSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTANGENT3BEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte tx,GLbyte ty,GLbyte tz)
PFNGLTANGENT3BVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLTANGENT3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble tx,GLdouble ty,GLdouble tz)
PFNGLTANGENT3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLTANGENT3FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat tx,GLfloat ty,GLfloat tz)
PFNGLTANGENT3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLTANGENT3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint tx,GLint ty,GLint tz)
PFNGLTANGENT3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLTANGENT3SEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort tx,GLshort ty,GLshort tz)
PFNGLTANGENT3SVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLTANGENTPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLTBUFFERMASK3DFXPROC	glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLTESSELLATIONFACTORAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLTESSELLATIONMODEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTESTFENCEAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTFENCENVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTOBJECTAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum object,GLuint name)
PFNGLTEXBUFFERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUMPPARAMETERFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * param)
PFNGLTEXBUMPPARAMETERIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * param)
PFNGLTEXCOORD1BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s)
PFNGLTEXCOORD1BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD1HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s)
PFNGLTEXCOORD1HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s)
PFNGLTEXCOORD1XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD2BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t)
PFNGLTEXCOORD2BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r,/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat n/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD2HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t)
PFNGLTEXCOORD2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t)
PFNGLTEXCOORD2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD3BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r)
PFNGLTEXCOORD3BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLTEXCOORD3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r)
PFNGLTEXCOORD3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD4BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLTEXCOORD4BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD4FVERTEX4FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLTEXCOORD4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLTEXCOORD4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORDFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLTEXCOORDP1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, G/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLTEXCOORDPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLTEXCOORDPOINTERVINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **p/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLTEXENVXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXENVXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXFILTERFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
PFNGLTEXGENXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed param)
PFNGLTEXGENXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,const GLfixed * params)
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE4DSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPAGECOMMITMENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
PFNGLTEXPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXRENDERBUFFERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLTEXSTORAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGESPARSEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE4DSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREBARRIERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTEXTUREBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum intern/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERRANGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum i/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTURECOLORMASKSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLTEXTUREIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTURELIGHTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname)
PFNGLTEXTUREMATERIALEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLTEXTURENORMALEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
PFNGLTEXTUREPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXTUREPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTURERANGEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLTEXTURERENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint renderbuffer)
PFNGLTEXTURESTORAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGESPARSEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXTURESUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREVIEWPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRACKMATRIXNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum matrix,GLenum transform)
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs/;"	t	typeref:typename:void (APIENTRYP)(GLuint count,const GLint * attribs,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLint * attribs,GLsizei nbuffers,const GLint * bufstreams,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum tra/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
PFNGLTRANSLATEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLUNIFORM1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x)
PFNGLUNIFORM1I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM1IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x)
PFNGLUNIFORM1UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM1UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y)
PFNGLUNIFORM2I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM2IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLUNIFORM2UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM2UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLUNIFORM3I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM3IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLUNIFORM3UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM3UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLUNIFORM4I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM4IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLUNIFORM4UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM4UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint buffer)
PFNGLUNIFORMHANDLEUI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMMATRIX2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMUI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT value)
PFNGLUNIFORMUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNLOCKARRAYSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLUNMAPBUFFERARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPNAMEDBUFFEREXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLUNMAPOBJECTBUFFERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLUNMAPTEXTURE2DINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLUPDATEOBJECTBUFFERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei s/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
PFNGLUSEPROGRAMOBJECTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLUSEPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSESHADERPROGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint program)
PFNGLVALIDATEPROGRAMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLVALIDATEPROGRAMPIPELINEPROC	glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVARIANTARRAYOBJECTATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride,/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVARIANTBVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLbyte * addr)
PFNGLVARIANTDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLdouble * addr)
PFNGLVARIANTFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLfloat * addr)
PFNGLVARIANTIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLint * addr)
PFNGLVARIANTPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLuint stride,const void * addr)
PFNGLVARIANTSVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLshort * addr)
PFNGLVARIANTUBVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLubyte * addr)
PFNGLVARIANTUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLuint * addr)
PFNGLVARIANTUSVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLushort * addr)
PFNGLVDPAUFININVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLVDPAUGETSURFACEIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLVDPAUINITNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress/;"	t	typeref:typename:void (APIENTRYP)(const void * vdpDevice,const void * getProcAddress)
PFNGLVDPAUISSURFACENVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVDPAUMAPSURFACESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceN/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurfa/;"	t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurfac/;"	t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUSURFACEACCESSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access)/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum access)
PFNGLVDPAUUNMAPSURFACESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurface/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUUNREGISTERSURFACENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVERTEX2BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x)
PFNGLVERTEX2BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX2HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y)
PFNGLVERTEX2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x)
PFNGLVERTEX2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX3BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y)
PFNGLVERTEX3BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEX3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLVERTEX3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX4BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y,GLbyte z)
PFNGLVERTEX4BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEX4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLVERTEX4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingin/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXARRAYRANGEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const void * pointer)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLuint divisor)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXATTRIB1DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x)
PFNGLVERTEXATTRIB1HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB1SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y)
PFNGLVERTEXATTRIB2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB2SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEXATTRIB3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB3SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEXATTRIB4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB4IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4UBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVERTEXATTRIBBINDINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
PFNGLVERTEXATTRIBFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4BVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4BVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4SVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4UBVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4USVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBI4USVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBIFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBIFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBIPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBL1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x)
PFNGLVERTEXATTRIBL1I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL1UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL1UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y)
PFNGLVERTEXATTRIBL2I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL2UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y)
PFNGLVERTEXATTRIBL2UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLVERTEXATTRIBL3I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL3UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLVERTEXATTRIBL3UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL4DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLVERTEXATTRIBL4I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL4UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLVERTEXATTRIBL4UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBLFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBLFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBLPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPARAMETERIAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint param)
PFNGLVERTEXATTRIBPOINTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBS1DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS1FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS1HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS1SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS2DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS2FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS2SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS3DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS3FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS3SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS4SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4UBVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLubyte * v)
PFNGLVERTEXBINDINGDIVISORPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXBLENDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint count)
PFNGLVERTEXBLENDENVFATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLVERTEXBLENDENVIATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXP2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLVERTEXPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, c/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLVERTEXPOINTERVINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **poi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLVERTEXSTREAM1DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x)
PFNGLVERTEXSTREAM1DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM1FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x)
PFNGLVERTEXSTREAM1FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM1IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x)
PFNGLVERTEXSTREAM1IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM1SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x)
PFNGLVERTEXSTREAM1SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM2DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y)
PFNGLVERTEXSTREAM2DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM2FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y)
PFNGLVERTEXSTREAM2FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM2IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y)
PFNGLVERTEXSTREAM2IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM2SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y)
PFNGLVERTEXSTREAM2SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM3DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXSTREAM3DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM3FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXSTREAM3FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM3IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLVERTEXSTREAM3IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM3SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXSTREAM3SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM4DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXSTREAM4DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM4FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXSTREAM4FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM4IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXSTREAM4IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM4SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXSTREAM4SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXWEIGHTFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat weight)
PFNGLVERTEXWEIGHTFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * weight)
PFNGLVERTEXWEIGHTHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV weight)
PFNGLVERTEXWEIGHTHVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * weight)
PFNGLVERTEXWEIGHTPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVIDEOCAPTURENVPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
PFNGLVIEWPORTARRAYVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLWAITSYNCPROC	glext.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWEIGHTBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLbyte * weights)
PFNGLWEIGHTDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLdouble * weights)
PFNGLWEIGHTFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLfloat * weights)
PFNGLWEIGHTIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLint * weights)
PFNGLWEIGHTPATHSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLsizei numPaths,const GLuint * paths,const GLfloat * weights)
PFNGLWEIGHTPOINTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, con/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLWEIGHTSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLshort * weights)
PFNGLWEIGHTUBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * weights)
PFNGLWEIGHTUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * weights)
PFNGLWEIGHTUSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * weights)
PFNGLWINDOWPOS2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS4DMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLWINDOWPOS4DVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS4FMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLWINDOWPOS4FVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS4IMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z,GLint w)
PFNGLWINDOWPOS4IVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS4SMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLWINDOWPOS4SVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWRITEMASKEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY,/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
REVERSE_DEPTH	cave_main.c	/^#define REVERSE_DEPTH$/;"	d	file:
SCALE	cave_main.c	/^#define SCALE /;"	d	file:
SDLROOT	Makefile	/^SDLROOT=C:\/dev\/SDL2\/SDL2-2.0.12_mingw\/i686-w64-mingw32$/;"	m
SDL_main	cave_main.c	/^int SDL_main(int argc, char **argv)$/;"	f	typeref:typename:int
SKIP_TERRAIN	cave_mesher.c	/^#define SKIP_TERRAIN /;"	d	file:
SRC	Makefile	/^SRC=cave_main.c cave_mesher.c cave_parse.c cave_render.c$/;"	m
STATE_abandoned	cave_render.c	/^   STATE_abandoned,$/;"	e	enum:__anon91f43a940103	file:
STATE_invalid	cave_render.c	/^   STATE_invalid,$/;"	e	enum:__anon91f43a940103	file:
STATE_needed	cave_render.c	/^   STATE_needed,$/;"	e	enum:__anon91f43a940103	file:
STATE_requested	cave_render.c	/^   STATE_requested,$/;"	e	enum:__anon91f43a940103	file:
STATE_valid	cave_render.c	/^   STATE_valid,$/;"	e	enum:__anon91f43a940103	file:
STATIC_FRICTION	cave_main.c	/^#define STATIC_FRICTION /;"	d	file:
STBGL_ARBIFY	stb_glprog.h	/^#define STBGL_ARBIFY(/;"	d
STBGL_CLAMP_TO_BORDER	stb_gl.h	/^#define STBGL_CLAMP_TO_BORDER /;"	d
STBGL_CLAMP_TO_EDGE	stb_gl.h	/^#define STBGL_CLAMP_TO_EDGE /;"	d
STBGL_COMPRESSED_RGBA_S3TC_DXT1	stb_gl.h	/^#define STBGL_COMPRESSED_RGBA_S3TC_DXT1 /;"	d
STBGL_COMPRESSED_RGBA_S3TC_DXT3	stb_gl.h	/^#define STBGL_COMPRESSED_RGBA_S3TC_DXT3 /;"	d
STBGL_COMPRESSED_RGBA_S3TC_DXT5	stb_gl.h	/^#define STBGL_COMPRESSED_RGBA_S3TC_DXT5 /;"	d
STBGL_COMPRESSED_RGB_S3TC_DXT1	stb_gl.h	/^#define STBGL_COMPRESSED_RGB_S3TC_DXT1 /;"	d
STBGL_DEPTH_COMPONENT16	stb_gl.h	/^#define STBGL_DEPTH_COMPONENT16 /;"	d
STBGL_DEPTH_COMPONENT24	stb_gl.h	/^#define STBGL_DEPTH_COMPONENT24 /;"	d
STBGL_DEPTH_COMPONENT32	stb_gl.h	/^#define STBGL_DEPTH_COMPONENT32 /;"	d
STBGL_FRAGMENT_SHADER	stb_glprog.h	/^#define STBGL_FRAGMENT_SHADER /;"	d
STBGL_GEN_MIPMAPS	stb_gl.h	/^   STBGL_GEN_MIPMAPS,$/;"	e	enum:__anon6a3464d60103
STBGL_MIPMAPS	stb_gl.h	/^   STBGL_MIPMAPS,$/;"	e	enum:__anon6a3464d60103
STBGL_NO_DOWNLOAD	stb_gl.h	/^   STBGL_NO_DOWNLOAD,$/;"	e	enum:__anon6a3464d60103
STBGL_UNDEFINED	stb_gl.h	/^   STBGL_UNDEFINED = 0x6000,$/;"	e	enum:__anon6a3464d60103
STBGL_VERTEX_SHADER	stb_glprog.h	/^#define STBGL_VERTEX_SHADER /;"	d
STBGL_YCOCG	stb_gl.h	/^   STBGL_YCOCG,$/;"	e	enum:__anon6a3464d60103
STBGL_YCOCGJ	stb_gl.h	/^   STBGL_YCOCGJ,$/;"	e	enum:__anon6a3464d60103
STBGL__GET_FUNC	stb_gl.h	/^   #define STBGL__GET_FUNC(/;"	d
STBGL__GET_FUNC	stb_glprog.h	/^#define STBGL__GET_FUNC(/;"	d
STBVOX_CONFIG_DISABLE_TEX2	cave_mesher.c	/^#define STBVOX_CONFIG_DISABLE_TEX2$/;"	d	file:
STBVOX_CONFIG_FOG_SMOOTHSTEP	cave_mesher.c	/^#define STBVOX_CONFIG_FOG_SMOOTHSTEP$/;"	d	file:
STBVOX_CONFIG_MODE	cave_mesher.c	/^#define STBVOX_CONFIG_MODE /;"	d	file:
STBVOX_CONFIG_OPENGL_MODELVIEW	cave_mesher.c	/^#define STBVOX_CONFIG_OPENGL_MODELVIEW$/;"	d	file:
STBVOX_CONFIG_PREFER_TEXBUFFER	cave_mesher.c	/^#define STBVOX_CONFIG_PREFER_TEXBUFFER$/;"	d	file:
STBVOX_CONFIG_ROTATION_IN_LIGHTING	cave_mesher.c	/^#define STBVOX_CONFIG_ROTATION_IN_LIGHTING$/;"	d	file:
STB_DEFINE	cave_main.c	/^#define STB_DEFINE$/;"	d	file:
STB_GL	stb_gl.h	/^#define STB_GL$/;"	d
STB_GLEXT_DECLARE	cave_mesher.c	/^#define STB_GLEXT_DECLARE /;"	d	file:
STB_GLEXT_DECLARE	cave_render.c	/^#define STB_GLEXT_DECLARE /;"	d	file:
STB_GLEXT_DEFINE	cave_main.c	/^#define STB_GLEXT_DEFINE /;"	d	file:
STB_GLEXT_DEFINE	stb_gl.h	/^#define STB_GLEXT_DEFINE /;"	d
STB_GLEXT_SKIP_DURING_RECURSION	stb_gl.h	/^   #define  STB_GLEXT_SKIP_DURING_RECURSION$/;"	d
STB_GLPROG_ARB	stb_glprog.h	/^#define STB_GLPROG_ARB /;"	d
STB_GLPROG_ARB_DEFINE_EXTENSIONS	cave_main.c	/^#define STB_GLPROG_ARB_DEFINE_EXTENSIONS$/;"	d	file:
STB_GLPROG_DECLARE	stb_glprog.h	/^#define STB_GLPROG_DECLARE /;"	d
STB_GLPROG_EXTENSIONS	stb_glprog.h	/^#define STB_GLPROG_EXTENSIONS /;"	d
STB_GLPROG_FUNC	stb_glprog.h	/^   #define STB_GLPROG_FUNC(/;"	d
STB_GLPROG_FUNC	stb_glprog.h	/^#define STB_GLPROG_FUNC(/;"	d
STB_GLPROG_IMPLEMENTATION	cave_main.c	/^#define STB_GLPROG_IMPLEMENTATION$/;"	d	file:
STB_GL_IMPLEMENTATION	cave_main.c	/^#define STB_GL_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	cave_main.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_VOXEL_RENDER_IMPLEMENTATION	cave_mesher.c	/^#define STB_VOXEL_RENDER_IMPLEMENTATION$/;"	d	file:
STB__HAS_WGLPROC	stb_gl.h	/^#define STB__HAS_WGLPROC$/;"	d
SUPERCHUNK_X	cave_mesher.c	/^#define SUPERCHUNK_X /;"	d	file:
SUPERCHUNK_Y	cave_mesher.c	/^#define SUPERCHUNK_Y /;"	d	file:
TAG_Byte	cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anone554af2f0403	file:
TAG_Byte_Array	cave_parse.c	/^       TAG_Float=5, TAG_Double=6, TAG_Byte_Array=7, TAG_String=8,$/;"	e	enum:__anone554af2f0403	file:
TAG_Compound	cave_parse.c	/^       TAG_List=9, TAG_Compound=10, TAG_Int_Array=11 };$/;"	e	enum:__anone554af2f0403	file:
TAG_Double	cave_parse.c	/^       TAG_Float=5, TAG_Double=6, TAG_Byte_Array=7, TAG_String=8,$/;"	e	enum:__anone554af2f0403	file:
TAG_End	cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anone554af2f0403	file:
TAG_Float	cave_parse.c	/^       TAG_Float=5, TAG_Double=6, TAG_Byte_Array=7, TAG_String=8,$/;"	e	enum:__anone554af2f0403	file:
TAG_Int	cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anone554af2f0403	file:
TAG_Int_Array	cave_parse.c	/^       TAG_List=9, TAG_Compound=10, TAG_Int_Array=11 };$/;"	e	enum:__anone554af2f0403	file:
TAG_List	cave_parse.c	/^       TAG_List=9, TAG_Compound=10, TAG_Int_Array=11 };$/;"	e	enum:__anone554af2f0403	file:
TAG_Long	cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anone554af2f0403	file:
TAG_Short	cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anone554af2f0403	file:
TAG_String	cave_parse.c	/^       TAG_Float=5, TAG_Double=6, TAG_Byte_Array=7, TAG_String=8,$/;"	e	enum:__anone554af2f0403	file:
TEX_SIZE	cave_render.c	/^#define TEX_SIZE /;"	d	file:
TICKRATE	cave_main.c	/^#define TICKRATE /;"	d	file:
TICKS_PER_SECOND	cave_main.c	/^#define TICKS_PER_SECOND /;"	d	file:
WARNFLAGS	Makefile	/^WARNFLAGS=-Wno-int-conversion -Wno-implicit-function-declaration -Wno-incompatible-pointer-types$/;"	m
WIN32_LEAN_AND_MEAN	glext.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WINGDIAPI	stb_gl.h	/^#define WINGDIAPI /;"	d
WSTATE_idle	cave_render.c	/^   WSTATE_idle,$/;"	e	enum:__anon91f43a940403	file:
WSTATE_mesh_ready	cave_render.c	/^   WSTATE_mesh_ready,$/;"	e	enum:__anon91f43a940403	file:
WSTATE_requested	cave_render.c	/^   WSTATE_requested,$/;"	e	enum:__anon91f43a940403	file:
WSTATE_running	cave_render.c	/^   WSTATE_running,$/;"	e	enum:__anon91f43a940403	file:
Why isn't building the mesh data faster?	README.md	/^### Why isn't building the mesh data faster?$/;"	S	chapter:FAQ
_WIN32_WINNT	cave_main.c	/^#define _WIN32_WINNT /;"	d	file:
__anon009d3f580103	cave_mesher.c	/^{$/;"	g	file:
__anon009d3f580208	cave_mesher.c	/^{$/;"	s	file:
__anon48e312350108	caveview.h	/^{$/;"	s
__anon6a3464d60103	stb_gl.h	/^{$/;"	g
__anon91f43a940103	cave_render.c	/^{$/;"	g	file:
__anon91f43a940208	cave_render.c	/^{$/;"	s	file:
__anon91f43a940308	cave_render.c	/^{$/;"	s	file:
__anon91f43a940403	cave_render.c	/^{$/;"	g	file:
__anon91f43a940508	cave_render.c	/^{$/;"	s	file:
__anone554af2f0108	cave_parse.c	/^{$/;"	s	file:
__anone554af2f0208	cave_parse.c	/^{$/;"	s	file:
__anone554af2f0308	cave_parse.c	/^{$/;"	s	file:
__anone554af2f0403	cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	g	file:
__anone554af2f0508	cave_parse.c	/^{$/;"	s	file:
__anone554af340108	cave_parse.h	/^{$/;"	s
__anone554af340208	cave_parse.h	/^{$/;"	s
__anone554af340308	cave_parse.h	/^{$/;"	s
__glext_h_	glext.h	/^#define __glext_h_ /;"	d
active_control_clear	cave_main.c	/^void active_control_clear(int key)$/;"	f	typeref:typename:void
active_control_set	cave_main.c	/^void active_control_set(int key)$/;"	f	typeref:typename:void
block	cave_parse.h	/^   unsigned char block;$/;"	m	struct:__anone554af340108	typeref:typename:unsigned char
blockdata	cave_parse.h	/^   unsigned char *blockdata[NUM_SEGMENTS];$/;"	m	struct:__anone554af340308	typeref:typename:unsigned char * []
bounds	cave_render.c	/^   float bounds[2][3];$/;"	m	struct:__anon91f43a940208	typeref:typename:float[2][3]	file:
bounds	caveview.h	/^   float bounds[2][3];$/;"	m	struct:__anon48e312350108	typeref:typename:float[2][3]
buffer_end	cave_parse.c	/^   unsigned char *buffer_end;$/;"	m	struct:__anone554af2f0308	typeref:typename:unsigned char *	file:
buffer_start	cave_parse.c	/^   unsigned char *buffer_start;$/;"	m	struct:__anone554af2f0308	typeref:typename:unsigned char *	file:
build	Makefile	/^build: $(EXE)$/;"	t
build_base_texture	cave_render.c	/^void build_base_texture(int n)$/;"	f	typeref:typename:void
build_buffer	cave_mesher.c	/^uint8 build_buffer[BUILD_BUFFER_SIZE];$/;"	v	typeref:typename:uint8[]
build_buffer	cave_render.c	/^   uint8 *build_buffer;$/;"	m	struct:__anon91f43a940308	typeref:typename:uint8 *	file:
build_buffer	caveview.h	/^   uint8 *build_buffer;$/;"	m	struct:__anon48e312350108	typeref:typename:uint8 *
build_chunk	cave_mesher.c	/^void build_chunk(int chunk_x, int chunk_y, fast_chunk *fc_table[4][4], raw_mesh *rm)$/;"	f	typeref:typename:void
build_overlay_texture	cave_render.c	/^void build_overlay_texture(int n)$/;"	f	typeref:typename:void
build_stair_rotations	cave_mesher.c	/^void build_stair_rotations(int blocktype, unsigned char *map)$/;"	f	typeref:typename:void
build_wood_variations	cave_mesher.c	/^void build_wood_variations(int bt, unsigned char *map)$/;"	f	typeref:typename:void
build_wool_variations	cave_mesher.c	/^void build_wool_variations(int bt, unsigned char *map)$/;"	f	typeref:typename:void
builddebug	Makefile	/^builddebug: $(EXE).dSYM$/;"	t
cache_size	cave_mesher.c	/^int cache_size = CHUNK_CACHE;$/;"	v	typeref:typename:int
cached_chunk	cave_parse.c	/^compressed_chunk *cached_chunk[NUM_CACHED_Z][NUM_CACHED_X];$/;"	v	typeref:typename:compressed_chunk * [][]
cached_chunk_mesh	cave_render.c	/^chunk_mesh cached_chunk_mesh[CACHED_MESH_NUM_Y][CACHED_MESH_NUM_X];$/;"	v	typeref:typename:chunk_mesh[][]
cached_compressed	cave_parse.c	/^size_t cached_compressed=0;$/;"	v	typeref:typename:size_t
cached_converted_chunk	cave_mesher.c	/^} cached_converted_chunk;$/;"	t	typeref:struct:__anon009d3f580208	file:
cam_vel	cave_main.c	/^float cam_vel[3];$/;"	v	typeref:typename:float[3]
camang	cave_main.c	/^float camang[3], camloc[3] = { 60,22,77 };$/;"	v	typeref:typename:float[3]
camera_to_worldspace	cave_main.c	/^void camera_to_worldspace(float world[3], float cam_x, float cam_y, float cam_z)$/;"	f	typeref:typename:void
camloc	cave_main.c	/^float camang[3], camloc[3] = { 60,22,77 };$/;"	v	typeref:typename:float[3]
carried_dt	cave_main.c	/^float carried_dt = 0;$/;"	v	typeref:typename:float
chunk	cave_parse.h	/^} chunk;$/;"	t	typeref:struct:__anone554af340208
chunk_action	cave_render.c	/^   int chunk_action;$/;"	m	struct:__anon91f43a940308	typeref:typename:int	file:
chunk_cache	cave_mesher.c	/^cached_converted_chunk chunk_cache[CHUNK_CACHE][CHUNK_CACHE];$/;"	v	typeref:typename:cached_converted_chunk[][]
chunk_cache_mutex	cave_mesher.c	/^SDL_mutex * chunk_cache_mutex;$/;"	v	typeref:typename:SDL_mutex *
chunk_get_mutex	cave_mesher.c	/^SDL_mutex * chunk_get_mutex;$/;"	v	typeref:typename:SDL_mutex *
chunk_locations	cave_render.c	/^int chunk_locations, chunks_considered, chunks_in_frustum;$/;"	v	typeref:typename:int
chunk_mesh	cave_render.c	/^} chunk_mesh;$/;"	t	typeref:struct:__anon91f43a940208	file:
chunk_request_x	cave_render.c	/^   int chunk_request_x;$/;"	m	struct:__anon91f43a940308	typeref:typename:int	file:
chunk_request_y	cave_render.c	/^   int chunk_request_y;$/;"	m	struct:__anon91f43a940308	typeref:typename:int	file:
chunk_server_activity	cave_render.c	/^float chunk_server_activity;$/;"	v	typeref:typename:float
chunk_server_done_processing	cave_render.c	/^   SDL_sem * chunk_server_done_processing;$/;"	m	struct:__anon91f43a940308	typeref:typename:SDL_sem *	file:
chunk_server_pos	cave_main.c	/^int chunk_server_pos;$/;"	v	typeref:typename:int
chunk_server_status	cave_main.c	/^float chunk_server_status[32];$/;"	v	typeref:typename:float[32]
chunk_storage_considered	cave_render.c	/^int chunk_storage_rendered, chunk_storage_considered, chunk_storage_total;$/;"	v	typeref:typename:int
chunk_storage_rendered	cave_render.c	/^int chunk_storage_rendered, chunk_storage_considered, chunk_storage_total;$/;"	v	typeref:typename:int
chunk_storage_total	cave_render.c	/^int chunk_storage_rendered, chunk_storage_considered, chunk_storage_total;$/;"	v	typeref:typename:int
chunk_x	cave_mesher.c	/^   int chunk_x, chunk_y;$/;"	m	struct:__anon009d3f580208	typeref:typename:int	file:
chunk_x	cave_render.c	/^   int chunk_x, chunk_y;$/;"	m	struct:__anon91f43a940208	typeref:typename:int	file:
chunk_y	cave_mesher.c	/^   int chunk_x, chunk_y;$/;"	m	struct:__anon009d3f580208	typeref:typename:int	file:
chunk_y	cave_render.c	/^   int chunk_x, chunk_y;$/;"	m	struct:__anon91f43a940208	typeref:typename:int	file:
chunks	cave_render.c	/^   fast_chunk *chunks[4][4];$/;"	m	struct:__anon91f43a940308	typeref:typename:fast_chunk * [4][4]	file:
chunks_considered	cave_render.c	/^int chunk_locations, chunks_considered, chunks_in_frustum;$/;"	v	typeref:typename:int
chunks_in_frustum	cave_render.c	/^int chunk_locations, chunks_considered, chunks_in_frustum;$/;"	v	typeref:typename:int
clean	Makefile	/^clean:$/;"	t
compressed_chunk	cave_parse.c	/^} compressed_chunk;$/;"	t	typeref:struct:__anone554af2f0108	file:
compute_frustum	cave_render.c	/^static void compute_frustum(void)$/;"	f	typeref:typename:void	file:
compute_priority	cave_render.c	/^float compute_priority(int cx, int cy, float x, float y)$/;"	f	typeref:typename:float
context	cave_main.c	/^static SDL_GLContext *context;$/;"	v	typeref:typename:SDL_GLContext *	file:
controls	cave_main.c	/^int controls;$/;"	v	typeref:typename:int
convert_fastchunk_inplace	cave_mesher.c	/^void convert_fastchunk_inplace(fast_chunk *fc)$/;"	f	typeref:typename:void
cur	cave_parse.c	/^   unsigned char *cur;$/;"	m	struct:__anone554af2f0308	typeref:typename:unsigned char *	file:
cx	cave_parse.c	/^   int cx,cz;$/;"	m	struct:__anone554af2f0508	typeref:typename:int	file:
cx	caveview.h	/^   int cx,cy;$/;"	m	struct:__anon48e312350108	typeref:typename:int
cy	caveview.h	/^   int cx,cy;$/;"	m	struct:__anon48e312350108	typeref:typename:int
cz	cave_parse.c	/^   int cx,cz;$/;"	m	struct:__anone554af2f0508	typeref:typename:int	file:
data	cave_parse.c	/^   uint8 *data;$/;"	m	struct:__anone554af2f0108	typeref:typename:uint8 *	file:
data	cave_parse.h	/^   unsigned char *data[NUM_SEGMENTS];$/;"	m	struct:__anone554af340308	typeref:typename:unsigned char * []
data	cave_parse.h	/^   unsigned char data;$/;"	m	struct:__anone554af340108	typeref:typename:unsigned char
debug	Makefile	/^debug: $(EXE).dSYM$/;"	t
decoded_buffer	cave_parse.c	/^} decoded_buffer;$/;"	t	typeref:struct:__anone554af2f0508	file:
decoded_buffers	cave_parse.c	/^static decoded_buffer decoded_buffers[MAX_DECODED_CHUNK_Z][MAX_DECODED_CHUNK_X];$/;"	v	typeref:typename:decoded_buffer[][]	file:
decoded_chunks	cave_parse.c	/^static chunk *decoded_chunks[MAX_DECODED_CHUNK_Z][MAX_DECODED_CHUNK_X];$/;"	v	typeref:typename:chunk * [][]	file:
deref_compressed_chunk	cave_parse.c	/^static void deref_compressed_chunk(compressed_chunk *cc)$/;"	f	typeref:typename:void	file:
deref_fastchunk	cave_mesher.c	/^void deref_fastchunk(fast_chunk *fc)$/;"	f	typeref:typename:void
draw	cave_main.c	/^void draw(void)$/;"	f	typeref:typename:void
draw_main	cave_main.c	/^void draw_main(void)$/;"	f	typeref:typename:void
draw_stats	cave_main.c	/^void draw_stats(void)$/;"	f	typeref:typename:void
effective_blocktype	cave_mesher.c	/^unsigned char effective_blocktype[256];$/;"	v	typeref:typename:unsigned char[256]
enable_synchronous	cave_main.c	/^void enable_synchronous(void)$/;"	f	typeref:typename:void
end_time	cave_main.c	/^static Uint64 start_time, end_time; \/\/ render time$/;"	v	typeref:typename:Uint64	file:
error	cave_main.c	/^void error(char *s)$/;"	f	typeref:typename:void
face_buffer	cave_mesher.c	/^uint8 face_buffer[FACE_BUFFER_SIZE];$/;"	v	typeref:typename:uint8[]
face_buffer	cave_render.c	/^   uint8 *face_buffer ;$/;"	m	struct:__anon91f43a940308	typeref:typename:uint8 *	file:
face_buffer	caveview.h	/^   uint8 *face_buffer;$/;"	m	struct:__anon48e312350108	typeref:typename:uint8 *
fast_chunk	cave_parse.h	/^} fast_chunk;$/;"	t	typeref:struct:__anone554af340308
fbuf	cave_render.c	/^   GLuint fbuf, fbuf_tex;$/;"	m	struct:__anon91f43a940208	typeref:typename:GLuint	file:
fbuf_size	cave_render.c	/^   int vbuf_size, fbuf_size;$/;"	m	struct:__anon91f43a940208	typeref:typename:int	file:
fbuf_tex	cave_render.c	/^   GLuint fbuf, fbuf_tex;$/;"	m	struct:__anon91f43a940208	typeref:typename:GLuint	file:
fc	cave_mesher.c	/^   fast_chunk *fc;$/;"	m	struct:__anon009d3f580208	typeref:typename:fast_chunk *	file:
fc	cave_parse.c	/^   fast_chunk *fc;$/;"	m	struct:__anone554af2f0508	typeref:typename:fast_chunk *	file:
free_chunk	cave_render.c	/^void free_chunk(int slot_x, int slot_y)$/;"	f	typeref:typename:void
free_region	cave_parse.c	/^void free_region(region *r)$/;"	f	typeref:typename:void
frustum	cave_render.c	/^static plane frustum[6];$/;"	v	typeref:typename:plane[6]	file:
g_mesh_maker	cave_render.c	/^stbvox_mesh_maker g_mesh_maker;$/;"	v	typeref:typename:stbvox_mesh_maker
game_name	cave_main.c	/^char *game_name = "caveview";$/;"	v	typeref:typename:char *
geom_map	cave_mesher.c	/^unsigned char geom_map[] =$/;"	v	typeref:typename:unsigned char[]
getTimestep	cave_main.c	/^static float getTimestep(float minimum_time)$/;"	f	typeref:typename:float	file:
get_compressed_chunk	cave_parse.c	/^static compressed_chunk *get_compressed_chunk(int chunk_x, int chunk_z)$/;"	f	typeref:typename:compressed_chunk *	file:
get_converted_fastchunk	cave_mesher.c	/^fast_chunk *get_converted_fastchunk(int chunk_x, int chunk_y)$/;"	f	typeref:typename:fast_chunk *
get_decoded_buffer	cave_parse.c	/^decoded_buffer *get_decoded_buffer(int chunk_x, int chunk_z)$/;"	f	typeref:typename:decoded_buffer *
get_decoded_chunk	cave_parse.c	/^chunk *get_decoded_chunk(int chunk_x, int chunk_z)$/;"	f	typeref:typename:chunk *
get_decoded_chunk_raw	cave_parse.c	/^chunk *get_decoded_chunk_raw(int chunk_x, int chunk_z)$/;"	f	typeref:typename:chunk *
get_decoded_fastchunk	cave_parse.c	/^fast_chunk *get_decoded_fastchunk(int chunk_x, int chunk_z)$/;"	f	typeref:typename:fast_chunk *
get_decoded_fastchunk_uncached	cave_parse.c	/^fast_chunk *get_decoded_fastchunk_uncached(int chunk_x, int chunk_z)$/;"	f	typeref:typename:fast_chunk *
get_region	cave_parse.c	/^static region *get_region(int reg_x, int reg_z)$/;"	f	typeref:typename:region *	file:
gl_debug	cave_main.c	/^void APIENTRY gl_debug(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, c/;"	f	typeref:typename:void APIENTRY
global_hack	cave_main.c	/^int global_hack;$/;"	v	typeref:typename:int
global_timer	cave_main.c	/^float global_timer;$/;"	v	typeref:typename:float
height	cave_parse.h	/^   int height[16][16];$/;"	m	struct:__anone554af340208	typeref:typename:int[16][16]
init_tex2_gradient	cave_render.c	/^void init_tex2_gradient(void)$/;"	f	typeref:typename:void
initialized	cave_main.c	/^static int initialized=0;$/;"	v	typeref:typename:int	file:
int32_t	glext.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	glext.h	/^typedef long int int32_t;$/;"	t	typeref:typename:long int
int64_t	glext.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	glext.h	/^typedef long int int64_t;$/;"	t	typeref:typename:long int
int64_t	glext.h	/^typedef long long int int64_t;$/;"	t	typeref:typename:long long int
is_box_in_frustum	cave_render.c	/^static int is_box_in_frustum(float *bmin, float *bmax)$/;"	f	typeref:typename:int	file:
is_synchronous_debug	cave_main.c	/^int is_synchronous_debug;$/;"	v	typeref:typename:int
last_dt	cave_main.c	/^static float last_dt;$/;"	v	typeref:typename:float	file:
last_region	cave_parse.c	/^FILE *last_region;$/;"	v	typeref:typename:FILE *
last_region_x	cave_parse.c	/^int last_region_x;$/;"	v	typeref:typename:int
last_region_z	cave_parse.c	/^int last_region_z;$/;"	v	typeref:typename:int
len	cave_parse.c	/^   size_t len;$/;"	m	struct:__anone554af2f0108	typeref:typename:size_t	file:
light	cave_parse.h	/^   unsigned char *light[NUM_SEGMENTS];$/;"	m	struct:__anone554af340308	typeref:typename:unsigned char * []
light	cave_parse.h	/^   unsigned char light:4;$/;"	m	struct:__anone554af340108	typeref:typename:unsigned char:4
load_region	cave_parse.c	/^static region *load_region(int reg_x, int reg_z)$/;"	f	typeref:typename:region *	file:
lock_chunk_get_mutex	cave_mesher.c	/^void lock_chunk_get_mutex(void)$/;"	f	typeref:typename:void
loopmode	cave_main.c	/^int loopmode(float dt, int real, int in_client)$/;"	f	typeref:typename:int
main_prog	cave_render.c	/^GLuint main_prog;$/;"	v	typeref:typename:GLuint
make	Makefile	/^make: $(EXE)$/;"	t
make_converted_fastchunk	cave_mesher.c	/^void make_converted_fastchunk(fast_chunk *fc, int x, int y, int segment, uint8 *sv_blocktype, ui/;"	f	typeref:typename:void
make_map_segment_for_superchunk_preconvert	cave_mesher.c	/^void make_map_segment_for_superchunk_preconvert(int chunk_x, int chunk_y, int segment, fast_chun/;"	f	typeref:typename:void
make_texture_buffer_for_uniform	cave_render.c	/^void make_texture_buffer_for_uniform(int uniform, int slot)$/;"	f	typeref:typename:void
matd_mul	cave_render.c	/^static void matd_mul(double out[4][4], double src1[4][4], double src2[4][4])$/;"	f	typeref:typename:void	file:
max_chunk_storage	cave_render.c	/^int max_chunk_storage = 450 << 20;$/;"	v	typeref:typename:int
max_chunk_storage	cave_render.c	/^int max_chunk_storage = 900 << 20;$/;"	v	typeref:typename:int
max_y	cave_parse.h	/^   int max_y, xpos, zpos;$/;"	m	struct:__anone554af340308	typeref:typename:int
max_y	cave_parse.h	/^   int xpos, zpos, max_y;$/;"	m	struct:__anone554af340208	typeref:typename:int
mc_rot	cave_mesher.c	/^unsigned char mc_rot[4] = { 1,3,2,0 };$/;"	v	typeref:typename:unsigned char[4]
mesh_data	cave_render.c	/^mesh_worker mesh_data[MAX_MESH_WORKERS];$/;"	v	typeref:typename:mesh_worker[]
mesh_init	cave_mesher.c	/^void mesh_init(void)$/;"	f	typeref:typename:void
mesh_worker	cave_render.c	/^} mesh_worker;$/;"	t	typeref:struct:__anon91f43a940308	file:
mesh_worker_handler	cave_render.c	/^int mesh_worker_handler(void *data)$/;"	f	typeref:typename:int
min_chunk_storage	cave_render.c	/^int min_chunk_storage = 350 << 20;$/;"	v	typeref:typename:int
min_chunk_storage	cave_render.c	/^int min_chunk_storage = 800 << 20;$/;"	v	typeref:typename:int
min_priority	cave_render.c	/^float min_priority = -500; \/\/ this really wants to be in unit space, not squared space$/;"	v	typeref:typename:float
minecraft_chunk_parse	cave_parse.c	/^static parse_chunk *minecraft_chunk_parse(unsigned char *data, size_t len)$/;"	f	typeref:typename:parse_chunk *	file:
minecraft_color_for_blocktype	cave_mesher.c	/^unsigned char minecraft_color_for_blocktype[256][6];$/;"	v	typeref:typename:unsigned char[256][6]
minecraft_geom_for_blocktype	cave_mesher.c	/^unsigned char minecraft_geom_for_blocktype[256];$/;"	v	typeref:typename:unsigned char[256]
minecraft_info	cave_mesher.c	/^unsigned char minecraft_info[256][7] =$/;"	v	typeref:typename:unsigned char[256][7]
minecraft_tex1_for_blocktype	cave_mesher.c	/^unsigned char minecraft_tex1_for_blocktype[256][6];$/;"	v	typeref:typename:unsigned char[256][6]
mm	caveview.h	/^   stbvox_mesh_maker mm;$/;"	m	struct:__anon48e312350108	typeref:typename:stbvox_mesh_maker
nbt	cave_parse.c	/^} nbt;$/;"	t	typeref:struct:__anone554af2f0308	file:
nbt_begin_compound	cave_parse.c	/^static void nbt_begin_compound(nbt *n) \/\/ start a compound$/;"	f	typeref:typename:void	file:
nbt_begin_compound_in_list	cave_parse.c	/^static void nbt_begin_compound_in_list(nbt *n) \/\/ start a compound$/;"	f	typeref:typename:void	file:
nbt_begin_list	cave_parse.c	/^static int nbt_begin_list(nbt *n, unsigned char type)$/;"	f	typeref:typename:int	file:
nbt_end_compound	cave_parse.c	/^static void nbt_end_compound(nbt *n) \/\/ end a compound$/;"	f	typeref:typename:void	file:
nbt_end_list	cave_parse.c	/^static void nbt_end_list(nbt *n)$/;"	f	typeref:typename:void	file:
nbt_get	cave_parse.c	/^static void *nbt_get(nbt *n, unsigned char type, int *len)$/;"	f	typeref:typename:void *	file:
nbt_get_fromlist	cave_parse.c	/^static void *nbt_get_fromlist(nbt *n, unsigned char type, int *len)$/;"	f	typeref:typename:void *	file:
nbt_get_string_data	cave_parse.c	/^static void nbt_get_string_data(unsigned char *data, char *buffer, size_t bufsize)$/;"	f	typeref:typename:void	file:
nbt_parse_uint32	cave_parse.c	/^static uint32 nbt_parse_uint32(unsigned char *buffer)$/;"	f	typeref:typename:uint32	file:
nbt_peek	cave_parse.c	/^static char *nbt_peek(nbt *n)$/;"	f	typeref:typename:char *	file:
nbt_skip	cave_parse.c	/^static void nbt_skip(nbt *n)$/;"	f	typeref:typename:void	file:
nbt_skip_raw	cave_parse.c	/^static void nbt_skip_raw(nbt *n, unsigned char type)$/;"	f	typeref:typename:void	file:
nbt_swap	cave_parse.c	/^static void nbt_swap(unsigned char *ptr, int len)$/;"	f	typeref:typename:void	file:
nesting	cave_parse.c	/^   int nesting;$/;"	m	struct:__anone554af2f0308	typeref:typename:int	file:
next_blocktype	cave_mesher.c	/^int next_blocktype = 255;$/;"	v	typeref:typename:int
num_chunk_load_workers	cave_render.c	/^int num_chunk_load_workers;$/;"	v	typeref:typename:int
num_mesh_workers	cave_render.c	/^int num_mesh_workers;$/;"	v	typeref:typename:int
num_meshes_started	cave_render.c	/^int num_meshes_started; \/\/ stats$/;"	v	typeref:typename:int
num_meshes_uploaded	cave_render.c	/^int num_meshes_uploaded;$/;"	v	typeref:typename:int
num_quads	cave_render.c	/^   int num_quads;$/;"	m	struct:__anon91f43a940208	typeref:typename:int	file:
num_quads	caveview.h	/^   int num_quads;$/;"	m	struct:__anon48e312350108	typeref:typename:int
num_threads_active	cave_render.c	/^int num_threads_active;$/;"	v	typeref:typename:int
ods	cave_main.c	/^void ods(char *fmt, ...)$/;"	f	typeref:typename:void
open_file	cave_parse.c	/^static void open_file(int reg_x, int reg_z)$/;"	f	typeref:typename:void	file:
opened	cave_parse.c	/^int opened=0;$/;"	v	typeref:typename:int
padding	cave_render.c	/^   int padding[13];$/;"	m	struct:__anon91f43a940308	typeref:typename:int[13]	file:
padding2	cave_render.c	/^   int padding2[16];$/;"	m	struct:__anon91f43a940308	typeref:typename:int[16]	file:
padding3	cave_render.c	/^   int padding3[16];$/;"	m	struct:__anon91f43a940308	typeref:typename:int[16]	file:
parse_chunk	cave_parse.c	/^typedef chunk parse_chunk;$/;"	t	typeref:typename:chunk	file:
parse_chunk	cave_parse.c	/^typedef fast_chunk parse_chunk;$/;"	t	typeref:typename:fast_chunk	file:
pending_view_x	cave_main.c	/^float pending_view_x;$/;"	v	typeref:typename:float
pending_view_z	cave_main.c	/^float pending_view_z;$/;"	v	typeref:typename:float
plane	cave_render.c	/^} plane;$/;"	t	typeref:struct:__anon91f43a940508	file:
player_zoom	cave_main.c	/^float player_zoom = 1.0;$/;"	v	typeref:typename:float
pointer_to_free	cave_parse.h	/^   void *pointer_to_free;   $/;"	m	struct:__anone554af340308	typeref:typename:void *
pos_x	cave_main.c	/^static float pos_x = 10;$/;"	v	typeref:typename:float	file:
pos_y	cave_main.c	/^static float pos_y = 10;$/;"	v	typeref:typename:float	file:
prepare_threads	cave_render.c	/^void prepare_threads(void)$/;"	f	typeref:typename:void
print	cave_main.c	/^static void print(char *text, ...)$/;"	f	typeref:typename:void	file:
print_string	cave_main.c	/^static void print_string(float x, float y, char *text, float r, float g, float b)$/;"	f	typeref:typename:void	file:
priority	cave_render.c	/^   float priority;$/;"	m	struct:__anon91f43a940208	typeref:typename:float	file:
process_event	cave_main.c	/^void process_event(SDL_Event *e)$/;"	f	typeref:typename:void
process_sdl_mouse	cave_main.c	/^void  process_sdl_mouse(SDL_Event *e)$/;"	f	typeref:typename:void
process_tick	cave_main.c	/^void process_tick(float dt)$/;"	f	typeref:typename:void
process_tick_raw	cave_main.c	/^void process_tick_raw(float dt)$/;"	f	typeref:typename:void
quads_considered	cave_render.c	/^int quads_considered, quads_rendered;$/;"	v	typeref:typename:int
quads_rendered	cave_render.c	/^int quads_considered, quads_rendered;$/;"	v	typeref:typename:int
quit	cave_main.c	/^static int quit;$/;"	v	typeref:typename:int	file:
raw_block	cave_parse.h	/^} raw_block;$/;"	t	typeref:struct:__anone554af340108
raw_level_time	cave_main.c	/^int raw_level_time;$/;"	v	typeref:typename:int
raw_mesh	caveview.h	/^} raw_mesh;$/;"	t	typeref:struct:__anon48e312350108
rb	cave_parse.h	/^   raw_block rb[16][16][256]; \/\/ [z][x][y] which becomes [y][x][z] in stb$/;"	m	struct:__anone554af340208	typeref:typename:raw_block[16][16][256]
read_uint32_be	cave_parse.c	/^uint32 read_uint32_be(FILE *f)$/;"	f	typeref:typename:uint32
refcount	cave_parse.c	/^   int refcount; \/\/ for multi-threading$/;"	m	struct:__anone554af2f0108	typeref:typename:int	file:
refcount	cave_parse.h	/^   int refcount; \/\/ this allows multi-threaded building without wrapping in ANOTHER struct$/;"	m	struct:__anone554af340308	typeref:typename:int
region	cave_parse.c	/^} region;$/;"	t	typeref:struct:__anone554af2f0208	file:
regions	cave_parse.c	/^region *regions[MAX_MAP_REGIONS][MAX_MAP_REGIONS];$/;"	v	typeref:typename:region * [][]
remap	cave_mesher.c	/^unsigned char remap[256];$/;"	v	typeref:typename:unsigned char[256]
remap_data	cave_mesher.c	/^unsigned char remap_data[16][16];$/;"	v	typeref:typename:unsigned char[16][16]
remap_in_place	cave_mesher.c	/^void remap_in_place(int bt, int rm)$/;"	f	typeref:typename:void
render_caves	cave_render.c	/^void render_caves(float campos[3])$/;"	f	typeref:typename:void
render_init	cave_render.c	/^void render_init(void)$/;"	f	typeref:typename:void
render_time	cave_main.c	/^float render_time;$/;"	v	typeref:typename:float
request_chunk	cave_render.c	/^int request_chunk(int chunk_x, int chunk_y)$/;"	f	typeref:typename:int
request_cx	cave_render.c	/^   int request_cx;$/;"	m	struct:__anon91f43a940308	typeref:typename:int	file:
request_cy	cave_render.c	/^   int request_cy;$/;"	m	struct:__anon91f43a940308	typeref:typename:int	file:
request_received	cave_render.c	/^   SDL_sem * request_received;$/;"	m	struct:__anon91f43a940308	typeref:typename:SDL_sem *	file:
reset_cache_size	cave_mesher.c	/^void reset_cache_size(int size)$/;"	f	typeref:typename:void
rm	cave_render.c	/^   raw_mesh rm;$/;"	m	struct:__anon91f43a940308	typeref:typename:raw_mesh	file:
rotate_data	cave_mesher.c	/^unsigned char rotate_data[4] = { 1,3,2,0 };$/;"	v	typeref:typename:unsigned char[4]
rotate_view	cave_main.c	/^float rotate_view = 0.0;$/;"	v	typeref:typename:float
run	Makefile	/^run: $(EXE)$/;"	t
scale_texture	cave_render.c	/^void scale_texture(unsigned char *src, int x, int y, int w, int h)$/;"	f	typeref:typename:void
screen_x	cave_main.c	/^int screen_x,screen_y;$/;"	v	typeref:typename:int
screen_y	cave_main.c	/^int screen_x,screen_y;$/;"	v	typeref:typename:int
sector_data	cave_parse.c	/^   uint32 sector_data[NUM_CHUNKS_PER_REGION][NUM_CHUNKS_PER_REGION];$/;"	m	struct:__anone554af2f0208	typeref:typename:uint32[][]	file:
set_tex2_alpha	cave_render.c	/^void set_tex2_alpha(float fa)$/;"	f	typeref:typename:void
setup_uniforms	cave_render.c	/^void setup_uniforms(float pos[3])$/;"	f	typeref:typename:void
skylight	cave_parse.h	/^   unsigned char *skylight[NUM_SEGMENTS];$/;"	m	struct:__anone554af340308	typeref:typename:unsigned char * []
skylight	cave_parse.h	/^   unsigned char skylight:4;$/;"	m	struct:__anone554af340108	typeref:typename:unsigned char:4
start_time	cave_main.c	/^static Uint64 start_time, end_time; \/\/ render time$/;"	v	typeref:typename:Uint64	file:
state	cave_render.c	/^   int state;$/;"	m	struct:__anon91f43a940208	typeref:typename:int	file:
state	cave_render.c	/^   int state;$/;"	m	struct:__anon91f43a940308	typeref:typename:int	file:
stb_glprog_error	stb_glprog.h	/^static void stb_glprog_error(char *error, int error_buflen, char *str1, char *str2, char *str3)$/;"	f	typeref:typename:void
stb_glprog_init	stb_glprog.h	/^static void stb_glprog_init(void)$/;"	f	typeref:typename:void
stbglAttachShader	stb_glprog.h	/^#define stbglAttachShader /;"	d
stbglBindAttribLocation	stb_glprog.h	/^#define stbglBindAttribLocation /;"	d
stbglCompileShader	stb_glprog.h	/^#define stbglCompileShader /;"	d
stbglCreateProgram	stb_glprog.h	/^#define stbglCreateProgram /;"	d
stbglCreateShader	stb_glprog.h	/^#define stbglCreateShader /;"	d
stbglDeleteProgram	stb_glprog.h	/^#define stbglDeleteProgram /;"	d
stbglDeleteShader	stb_glprog.h	/^#define stbglDeleteShader /;"	d
stbglDetachShader	stb_glprog.h	/^#define stbglDetachShader /;"	d
stbglDisableVertexAttribArray	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglDisableVertexAttribArray(GLuint index) { STBGL_ARBIFY(glDisableVert/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglEnableVertexAttribArray	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglEnableVertexAttribArray (GLuint index) { STBGL_ARBIFY(glEnableVerte/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglGetAttachedShaders	stb_glprog.h	/^#define stbglGetAttachedShaders /;"	d
stbglGetProgramInfoLog	stb_glprog.h	/^#define stbglGetProgramInfoLog /;"	d
stbglGetProgramStatus	stb_glprog.h	/^#define stbglGetProgramStatus(/;"	d
stbglGetShaderInfoLog	stb_glprog.h	/^#define stbglGetShaderInfoLog /;"	d
stbglGetShaderStatus	stb_glprog.h	/^#define stbglGetShaderStatus(/;"	d
stbglGetUniformLocation	stb_glprog.h	/^#define stbglGetUniformLocation /;"	d
stbglLinkProgram	stb_glprog.h	/^#define stbglLinkProgram /;"	d
stbglShaderSource	stb_glprog.h	/^#define stbglShaderSource /;"	d
stbglUniform1f	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform1f(GLint loc, float v0)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform1fv	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform1fv(GLint loc, GLsizei count, const GLfloat *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform1i	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform1i(GLint loc, GLint v0)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform1iv	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform1iv(GLint loc, GLsizei count, const GLint   *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform2f	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform2f(GLint loc, float v0, float v1)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform2fv	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform2fv(GLint loc, GLsizei count, const GLfloat *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform2i	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform2i(GLint loc, GLint v0, GLint v1)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform2iv	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform2iv(GLint loc, GLsizei count, const GLint   *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform3f	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform3f(GLint loc, float v0, float v1, float v2)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform3fv	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform3fv(GLint loc, GLsizei count, const GLfloat *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform3i	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform3i(GLint loc, GLint v0, GLint v1, GLint v2)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform3iv	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform3iv(GLint loc, GLsizei count, const GLint   *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform4f	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform4f(GLint loc, float v0, float v1, float v2, float v3)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform4fv	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform4fv(GLint loc, GLsizei count, const GLfloat *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform4i	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform4i(GLint loc, GLint v0, GLint v1, GLint v2, GLint v3)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform4iv	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform4iv(GLint loc, GLsizei count, const GLint   *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUseProgram	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUseProgram(GLuint program)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglVertexAttribPointer	stb_glprog.h	/^STB_GLPROG_DECLARE void stbglVertexAttribPointer(GLuint index,  GLint size,  GLenum type,  GLboo/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbgl_GlobalAmbient	stb_gl.h	/^void stbgl_GlobalAmbient(float r, float g, float b)$/;"	f	typeref:typename:void
stbgl_LoadTexture	stb_gl.h	/^int stbgl_LoadTexture(char *filename, char *props)$/;"	f	typeref:typename:int
stbgl_Perspective	stb_gl.h	/^void stbgl_Perspective(float zoom, float max_hfov, float max_vfov, float znear, float zfar)$/;"	f	typeref:typename:void
stbgl_PerspectiveViewport	stb_gl.h	/^void stbgl_PerspectiveViewport(int x, int y, int w, int h, float zoom, float min_hfov, float min/;"	f	typeref:typename:void
stbgl_SimpleLight	stb_gl.h	/^void stbgl_SimpleLight(int index, float bright, float x, float y, float z)$/;"	f	typeref:typename:void
stbgl_TestTexture	stb_gl.h	/^int stbgl_TestTexture(int w)$/;"	f	typeref:typename:int
stbgl_TestTextureEx	stb_gl.h	/^int stbgl_TestTextureEx(int w, char *scale_table, int checks_log2, int r1,int g1,int b1, int r2,/;"	f	typeref:typename:int
stbgl_TexImage2D	stb_gl.h	/^int stbgl_TexImage2D(int texid, int w, int h, void *data, char *props)$/;"	f	typeref:typename:int
stbgl_TexImage2D_Extra	stb_gl.h	/^int stbgl_TexImage2D_Extra(int texid, int w, int h, void *data, int chan, char *props, int prese/;"	f	typeref:typename:int
stbgl_UseProgram	stb_glprog.h	/^#define stbgl_UseProgram /;"	d
stbgl__CompressedTexImage2DARB	stb_gl.h	/^static void (*stbgl__CompressedTexImage2DARB)(int target, int level,$/;"	v	typeref:typename:void (*)(int target,int level,int internalformat,int width,int height,int border,int imageSize,void * data)
stbgl__CompressedTexImage2DARB	stb_gl.h	/^static void (__stdcall *stbgl__CompressedTexImage2DARB)(int target, int level,$/;"	v	typeref:typename:void (__stdcall *)(int target,int level,int internalformat,int width,int height,int border,int imageSize,void * data)
stbgl__compress	stb_gl.h	/^static void stbgl__compress(uint8 *p, uint8 *rgba, int w, int h, int output_desc, uint8 *end)$/;"	f	typeref:typename:void
stbgl__convert	stb_gl.h	/^static void stbgl__convert(uint8 *p, uint8 *q, int n, int input_desc, uint8 *end)$/;"	f	typeref:typename:void
stbgl__initCompTex	stb_gl.h	/^static void stbgl__initCompTex(void)$/;"	f	typeref:typename:void
stbgl__voidfunc	stb_gl.h	/^   typedef int (__stdcall *stbgl__voidfunc)(void);$/;"	t	typeref:typename:int (__stdcall *)(void)
stbgl__voidfunc	stb_gl.h	/^typedef int (__stdcall *stbgl__voidfunc)(void);$/;"	t	typeref:typename:int (__stdcall *)(void)
stbgl__voidfunc	stb_glprog.h	/^typedef int (__stdcall *stbgl__voidfunc)(void);$/;"	t	typeref:typename:int (__stdcall *)(void)
stbgl_compile_shader	stb_glprog.h	/^STB_GLPROG_DECLARE GLuint stbgl_compile_shader(GLenum type, char const **sources, int num_source/;"	f	typeref:typename:STB_GLPROG_DECLARE GLuint
stbgl_create_program	stb_glprog.h	/^STB_GLPROG_DECLARE GLuint stbgl_create_program(char const **vertex_source, char const **frag_sou/;"	f	typeref:typename:STB_GLPROG_DECLARE GLuint
stbgl_deg2rad	stb_gl.h	/^#define stbgl_deg2rad(/;"	d
stbgl_delete_shader	stb_glprog.h	/^STB_GLPROG_DECLARE void stbgl_delete_shader(GLuint shader)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbgl_drawBox	stb_gl.h	/^void stbgl_drawBox(float x, float y, float z, float sx, float sy, float sz, int cw)$/;"	f	typeref:typename:void
stbgl_drawRect	stb_gl.h	/^void stbgl_drawRect(float x0, float y0, float x1, float y1)$/;"	f	typeref:typename:void
stbgl_drawRectTC	stb_gl.h	/^void stbgl_drawRectTC(float x0, float y0, float x1, float y1, float s0, float t0, float s1, floa/;"	f	typeref:typename:void
stbgl_find_uniform	stb_glprog.h	/^GLint stbgl_find_uniform(GLuint prog, char *uniform)$/;"	f	typeref:typename:GLint
stbgl_find_uniforms	stb_glprog.h	/^STB_GLPROG_DECLARE void stbgl_find_uniforms(GLuint prog, GLint *locations, char const **uniforms/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbgl_hasExtension	stb_gl.h	/^int stbgl_hasExtension(char *ext)$/;"	f	typeref:typename:int
stbgl_initCamera_zup_facing_x	stb_gl.h	/^void stbgl_initCamera_zup_facing_x(void)$/;"	f	typeref:typename:void
stbgl_initCamera_zup_facing_y	stb_gl.h	/^void stbgl_initCamera_zup_facing_y(void)$/;"	f	typeref:typename:void
stbgl_initExtensions	stb_gl.h	/^   void stbgl_initExtensions(void)$/;"	f	typeref:typename:void
stbgl_link_program	stb_glprog.h	/^STB_GLPROG_DECLARE GLuint stbgl_link_program(GLuint vertex_shader, GLuint fragment_shader, char /;"	f	typeref:typename:STB_GLPROG_DECLARE GLuint
stbgl_m	stb_gl.h	/^static int stbgl_m(char *a, char *b)$/;"	f	typeref:typename:int
stbgl_positionCameraWithEulerAngles	stb_gl.h	/^void stbgl_positionCameraWithEulerAngles(float *loc, float *ang)$/;"	f	typeref:typename:void
stbgl_rad2deg	stb_gl.h	/^#define stbgl_rad2deg(/;"	d
stbgl_rand	stb_gl.h	/^unsigned int stbgl_rand(void)$/;"	f	typeref:typename:unsigned int
step	cave_render.c	/^float step=0;$/;"	v	typeref:typename:float
stgbl_delete_program	stb_glprog.h	/^STB_GLPROG_DECLARE void stgbl_delete_program(GLuint program)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
sv_blocktype	caveview.h	/^   uint8 sv_blocktype[34][34][18];$/;"	m	struct:__anon48e312350108	typeref:typename:uint8[34][34][18]
sv_lighting	caveview.h	/^   uint8 sv_lighting [34][34][18];$/;"	m	struct:__anon48e312350108	typeref:typename:uint8[34][34][18]
table3	cave_render.c	/^float table3[128][3];$/;"	v	typeref:typename:float[128][3]
table4	cave_render.c	/^float table4[64][4];$/;"	v	typeref:typename:float[64][4]
tablei	cave_render.c	/^GLint tablei[2];$/;"	v	typeref:typename:GLint[2]
tags	Makefile	/^tags:$/;"	t
temp_buffer	cave_parse.c	/^   char temp_buffer[256];$/;"	m	struct:__anone554af2f0308	typeref:typename:char[256]	file:
test_plane	cave_render.c	/^static int test_plane(plane *p, float x0, float y0, float z0, float x1, float y1, float z1)$/;"	f	typeref:typename:int	file:
tex2_alpha	cave_main.c	/^float tex2_alpha = 1.0;$/;"	v	typeref:typename:float
tex2_data	cave_render.c	/^unsigned char tex2_data[64][4];$/;"	v	typeref:typename:unsigned char[64][4]
text_color	cave_main.c	/^static float text_color[3];$/;"	v	typeref:typename:float[3]	file:
texture	cave_render.c	/^uint32 texture[TEX_SIZE][TEX_SIZE];$/;"	v	typeref:typename:uint32[][]
transform	cave_render.c	/^   float transform[3][3];$/;"	m	struct:__anon91f43a940208	typeref:typename:float[3][3]	file:
transform	caveview.h	/^   float transform[3][3];$/;"	m	struct:__anon48e312350108	typeref:typename:float[3][3]
uint64_t	glext.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	glext.h	/^typedef unsigned long int uint64_t;$/;"	t	typeref:typename:unsigned long int
uint64_t	glext.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
unibuf	cave_render.c	/^GLuint unitex[64], unibuf[64];$/;"	v	typeref:typename:GLuint[64]
uniform_loc	cave_render.c	/^GLint uniform_loc[16];$/;"	v	typeref:typename:GLint[16]
uniform_locations	cave_render.c	/^GLint uniform_locations[64];$/;"	v	typeref:typename:GLint[64]
unitex	cave_render.c	/^GLuint unitex[64], unibuf[64];$/;"	v	typeref:typename:GLuint[64]
unlock_chunk_get_mutex	cave_mesher.c	/^void unlock_chunk_get_mutex(void)$/;"	f	typeref:typename:void
update_frustum	cave_render.c	/^int update_frustum = 1;$/;"	v	typeref:typename:int
update_meshes_from_render_thread	cave_render.c	/^void update_meshes_from_render_thread(void)$/;"	f	typeref:typename:void
update_view	cave_main.c	/^void update_view(float dx, float dy)$/;"	f	typeref:typename:void
upload_mesh	cave_render.c	/^void upload_mesh(chunk_mesh *cm, uint8 *build_buffer, uint8 *face_buffer)$/;"	f	typeref:typename:void
upload_mesh_data	cave_render.c	/^static void upload_mesh_data(raw_mesh *rm)$/;"	f	typeref:typename:void	file:
valid	cave_mesher.c	/^   int valid;$/;"	m	struct:__anon009d3f580208	typeref:typename:int	file:
valid	cave_parse.c	/^   int valid;$/;"	m	struct:__anone554af2f0508	typeref:typename:int	file:
vbuf	cave_render.c	/^   GLuint vbuf;\/\/ vbuf_tex;$/;"	m	struct:__anon91f43a940208	typeref:typename:GLuint	file:
vbuf_size	cave_render.c	/^   int vbuf_size, fbuf_size;$/;"	m	struct:__anon91f43a940208	typeref:typename:int	file:
view_dist_in_chunks	cave_render.c	/^int view_dist_in_chunks = 50;$/;"	v	typeref:typename:int
view_dist_in_chunks	cave_render.c	/^int view_dist_in_chunks = 80;$/;"	v	typeref:typename:int
view_x_vel	cave_main.c	/^float view_x_vel = 0;$/;"	v	typeref:typename:float
view_z_vel	cave_main.c	/^float view_z_vel = 0;$/;"	v	typeref:typename:float
voxel_tex	cave_render.c	/^GLuint voxel_tex[2];$/;"	v	typeref:typename:GLuint[2]
w	cave_render.c	/^   float x,y,z,w;$/;"	m	struct:__anon91f43a940508	typeref:typename:float	file:
window	cave_main.c	/^static SDL_Window *window;$/;"	v	typeref:typename:SDL_Window *	file:
world_init	cave_render.c	/^void world_init(void)$/;"	f	typeref:typename:void
x	cave_parse.c	/^   int x,z; \/\/ chunk index$/;"	m	struct:__anone554af2f0108	typeref:typename:int	file:
x	cave_parse.c	/^   int x,z;$/;"	m	struct:__anone554af2f0208	typeref:typename:int	file:
x	cave_render.c	/^   float x,y,z,w;$/;"	m	struct:__anon91f43a940508	typeref:typename:float	file:
xpos	cave_parse.h	/^   int max_y, xpos, zpos;$/;"	m	struct:__anone554af340308	typeref:typename:int
xpos	cave_parse.h	/^   int xpos, zpos, max_y;$/;"	m	struct:__anone554af340208	typeref:typename:int
y	cave_render.c	/^   float x,y,z,w;$/;"	m	struct:__anon91f43a940508	typeref:typename:float	file:
z	cave_parse.c	/^   int x,z; \/\/ chunk index$/;"	m	struct:__anone554af2f0108	typeref:typename:int	file:
z	cave_parse.c	/^   int x,z;$/;"	m	struct:__anone554af2f0208	typeref:typename:int	file:
z	cave_render.c	/^   float x,y,z,w;$/;"	m	struct:__anon91f43a940508	typeref:typename:float	file:
zpos	cave_parse.h	/^   int max_y, xpos, zpos;$/;"	m	struct:__anone554af340308	typeref:typename:int
zpos	cave_parse.h	/^   int xpos, zpos, max_y;$/;"	m	struct:__anone554af340208	typeref:typename:int
